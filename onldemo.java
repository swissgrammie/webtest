/*
 * Elastic COBOL --> Java Source Code
 *
 * This is a cross-compiler generated Java source-code file whose original
 * source was a COBOL program of the same name.
 *
 * If you want to switch from COBOL maintenance to Java maintenance, you must:
 * 1. edit this file as you see fit,
 * 2. move the resultant file to the java_source folder, and
 * 3. delete the originally named COBOL source file.
 *
 * This program requires ecobol.jar and may also require etrans.jar to execute.
 * These are the Elastic COBOL runtime services (used under license).
 */

import com.heirloomcomputing.ecs.exec.*;

/*
 * PROGRAM-ID onldemo
 * Compiled on 2018-01-21 at 16:36:19
 *
 * Generated by:
 * 
 * Elastic COBOL
 * V17.8.24 (Build Aug 29 2017 11:40:47)
 * Copyright (C) 2010-2017 Heirloom Computing
 */

@SuppressWarnings("all")
public class onldemo extends CobolBase
implements ICobolProgram, com.heirloomcomputing.ecs.api.ICallTarget, com.heirloomcomputing.ecs.api.ICancelTarget , com.heirloomcomputing.etp.transaction.link.Linkable
{
    static public final String _programId="onldemo";
    BreakClass breakPoint = new BreakClass();
    
    static // initializer
    {
        RuntimeEnvironment.setGlobalParameter("DT","1");
        Variable.completeInitialization();
    }
    
    
    @SuppressWarnings("all")
    public class Wrk              implements Section
    {
        public void doDeclarations()
        {
            try
            {
                declarations();
            }
            catch(Exception _initializerException)
            {
                CobolException.runtimeError(_context,"INTERNAL ERROR: Cannot initialize variable storage for onldemo section 'Wrk'",_initializerException);
            }
        }
        
        
        public void doInitializations()
        {
            ws_resp=new Binary();
            ws_abstime=new DisplayP();
            ws_comm=new Variable();
            filler_0__OF_showemi=new Variable();
            datel_OF_showemi=new Binary();
            datef_OF_showemi=new Variable();
            datea_OF_filler_1__OF_showemi=new Variable();
            filler_1__OF_showemi=new Variable();
            datei_OF_showemi=new Variable();
            timel_OF_showemi=new Binary();
            timef_OF_showemi=new Variable();
            timea_OF_filler_2__OF_showemi=new Variable();
            filler_2__OF_showemi=new Variable();
            timei_OF_showemi=new Variable();
            cnuml_OF_showemi=new Binary();
            cnumf_OF_showemi=new Variable();
            cnuma_OF_filler_3__OF_showemi=new Variable();
            filler_3__OF_showemi=new Variable();
            cnumi_OF_showemi=new Variable();
            namel_OF_showemi=new Binary();
            namef_OF_showemi=new Variable();
            namea_OF_filler_4__OF_showemi=new Variable();
            filler_4__OF_showemi=new Variable();
            namei_OF_showemi=new Variable();
            invamtl_OF_showemi=new Binary();
            invamtf_OF_showemi=new Variable();
            invamta_OF_filler_5__OF_showemi=new Variable();
            filler_5__OF_showemi=new Variable();
            invamti_OF_showemi=new Variable();
            messl_OF_showemi=new Binary();
            messf_OF_showemi=new Variable();
            messa_OF_filler_6__OF_showemi=new Variable();
            filler_6__OF_showemi=new Variable();
            messi_OF_showemi=new Variable();
            showemi=new Variable();
            filler_7__OF_showemo=new Variable();
            filler_8__OF_showemo=new Variable();
            dateo_OF_showemo=new Variable();
            timeo_OF_showemo=new Variable();
            cnumo_OF_showemo=new Variable();
            nameo_OF_showemo=new Variable();
            invamto_OF_showemo=new Variable();
            messo_OF_showemo=new Variable();
            showemo=new Variable();
            dfhbmpem_OF_dfhbmsca=new Variable();
            dfhbmpnl_OF_dfhbmsca=new Variable();
            dfhbmpff_OF_dfhbmsca=new Variable();
            dfhbmpcr_OF_dfhbmsca=new Variable();
            dfhbmask_OF_dfhbmsca=new Variable();
            dfhbmunp_OF_dfhbmsca=new Variable();
            dfhbmunn_OF_dfhbmsca=new Variable();
            dfhbmpro_OF_dfhbmsca=new Variable();
            dfhbmbry_OF_dfhbmsca=new Variable();
            dfhbmdar_OF_dfhbmsca=new Variable();
            dfhbmfse_OF_dfhbmsca=new Variable();
            dfhbmprf_OF_dfhbmsca=new Variable();
            dfhbmasf_OF_dfhbmsca=new Variable();
            dfhbmasb_OF_dfhbmsca=new Variable();
            dfhbmeof_OF_dfhbmsca=new Variable();
            dfhbmcur_OF_dfhbmsca=new Variable();
            dfhbmec_OF_dfhbmsca=new Variable();
            dfhbmflg_OF_dfhbmsca=new Variable();
            dfhbmdet_OF_dfhbmsca=new Variable();
            dfhbmpso_bin_OF_dfhbmsca=new Binary();
            dfhbmpso_OF_dfhbmsca=new Variable();
            dfhbmpsi_OF_dfhbmsca=new Variable();
            dfhsa_OF_dfhbmsca=new Variable();
            dfhcolor_OF_dfhbmsca=new Variable();
            dfhps_OF_dfhbmsca=new Variable();
            dfhhlt_OF_dfhbmsca=new Variable();
            dfh3270_OF_dfhbmsca=new Variable();
            dfhval_OF_dfhbmsca=new Variable();
            dfhoutln_OF_dfhbmsca=new Variable();
            dfhbktrn_OF_dfhbmsca=new Variable();
            dfhall_OF_dfhbmsca=new Variable();
            dfherror_OF_dfhbmsca=new Variable();
            dfhdft_OF_dfhbmsca=new Variable();
            dfhdfcol_OF_dfhbmsca=new Variable();
            dfhblue_OF_dfhbmsca=new Variable();
            dfhred_OF_dfhbmsca=new Variable();
            dfhpink_OF_dfhbmsca=new Variable();
            dfhgreen_OF_dfhbmsca=new Variable();
            dfhturq_OF_dfhbmsca=new Variable();
            dfhyello_OF_dfhbmsca=new Variable();
            dfhneutr_OF_dfhbmsca=new Variable();
            dfhbase_OF_dfhbmsca=new Variable();
            dfhdfhi_OF_dfhbmsca=new Variable();
            dfhblink_OF_dfhbmsca=new Variable();
            dfhrevrs_OF_dfhbmsca=new Variable();
            dfhundln_OF_dfhbmsca=new Variable();
            dfhmfil_OF_dfhbmsca=new Variable();
            dfhment_OF_dfhbmsca=new Variable();
            dfhmfe_OF_dfhbmsca=new Variable();
            dfhunnod_OF_dfhbmsca=new Variable();
            dfhunimd_OF_dfhbmsca=new Variable();
            dfhunnum_OF_dfhbmsca=new Variable();
            dfhunint_OF_dfhbmsca=new Variable();
            dfhunnon_OF_dfhbmsca=new Variable();
            dfhproti_OF_dfhbmsca=new Variable();
            dfhprotn_OF_dfhbmsca=new Variable();
            dfhmt_OF_dfhbmsca=new Variable();
            dfhmft_OF_dfhbmsca=new Variable();
            dfhmet_OF_dfhbmsca=new Variable();
            dfhmfet_OF_dfhbmsca=new Variable();
            dfhdffr_OF_dfhbmsca=new Variable();
            dfhleft_OF_dfhbmsca=new Variable();
            dfhover_OF_dfhbmsca=new Variable();
            dfhright_OF_dfhbmsca=new Variable();
            dfhunder_OF_dfhbmsca=new Variable();
            dfhbox_bin_OF_dfhbmsca=new Binary();
            dfhbox_OF_dfhbmsca=new Variable();
            dfhsosi_OF_dfhbmsca=new Variable();
            dfhtrans_OF_dfhbmsca=new Variable();
            dfhopaq_OF_dfhbmsca=new Variable();
            dfhbmsca=new Variable();
            dfhnull_OF_dfhaid=new Variable();
            dfhenter_OF_dfhaid=new Variable();
            dfhclear_OF_dfhaid=new Variable();
            dfhclrp_OF_dfhaid=new Variable();
            dfhpen_OF_dfhaid=new Variable();
            dfhopid_OF_dfhaid=new Variable();
            dfhmsre_OF_dfhaid=new Variable();
            dfhstrf_OF_dfhaid=new Variable();
            dfhtrig_OF_dfhaid=new Variable();
            dfhpa1_OF_dfhaid=new Variable();
            dfhpa2_OF_dfhaid=new Variable();
            dfhpa3_OF_dfhaid=new Variable();
            dfhpf1_OF_dfhaid=new Variable();
            dfhpf2_OF_dfhaid=new Variable();
            dfhpf3_OF_dfhaid=new Variable();
            dfhpf4_OF_dfhaid=new Variable();
            dfhpf5_OF_dfhaid=new Variable();
            dfhpf6_OF_dfhaid=new Variable();
            dfhpf7_OF_dfhaid=new Variable();
            dfhpf8_OF_dfhaid=new Variable();
            dfhpf9_OF_dfhaid=new Variable();
            dfhpf10_OF_dfhaid=new Variable();
            dfhpf11_OF_dfhaid=new Variable();
            dfhpf12_OF_dfhaid=new Variable();
            dfhpf13_OF_dfhaid=new Variable();
            dfhpf14_OF_dfhaid=new Variable();
            dfhpf15_OF_dfhaid=new Variable();
            dfhpf16_OF_dfhaid=new Variable();
            dfhpf17_OF_dfhaid=new Variable();
            dfhpf18_OF_dfhaid=new Variable();
            dfhpf19_OF_dfhaid=new Variable();
            dfhpf20_OF_dfhaid=new Variable();
            dfhpf21_OF_dfhaid=new Variable();
            dfhpf22_OF_dfhaid=new Variable();
            dfhpf23_OF_dfhaid=new Variable();
            dfhpf24_OF_dfhaid=new Variable();
            dfhaid=new Variable();
            sql_init_flag=new Binary();
            sqlcaid_OF_sqlca=new Variable();
            sqlcabc_OF_sqlca=new Binary();
            sqlcode_OF_sqlca=new Binary();
            sqlerrml_OF_sqlerrm_OF_sqlca=new Binary();
            sqlerrmc_OF_sqlerrm_OF_sqlca=new Variable();
            sqlerrm_OF_sqlca=new Variable();
            sqlerrp_OF_sqlca=new Variable();
            sqlerrd_OF_sqlca=new Binary();
            sqlwarn0_OF_sqlwarn_OF_sqlca=new Variable();
            sqlwarn1_OF_sqlwarn_OF_sqlca=new Variable();
            sqlwarn2_OF_sqlwarn_OF_sqlca=new Variable();
            sqlwarn3_OF_sqlwarn_OF_sqlca=new Variable();
            sqlwarn4_OF_sqlwarn_OF_sqlca=new Variable();
            sqlwarn5_OF_sqlwarn_OF_sqlca=new Variable();
            sqlwarn6_OF_sqlwarn_OF_sqlca=new Variable();
            sqlwarn7_OF_sqlwarn_OF_sqlca=new Variable();
            sqlwarn_OF_sqlca=new Variable();
            sqlwarn8_OF_sqlext_OF_sqlca=new Variable();
            sqlwarn9_OF_sqlext_OF_sqlca=new Variable();
            sqlwarna_OF_sqlext_OF_sqlca=new Variable();
            sqlstate_OF_sqlext_OF_sqlca=new Variable();
            sqlext_OF_sqlca=new Variable();
            sqlca=new Variable();
            cust_num_OF_custtax_table=new DisplayP();
            cust_name_OF_custtax_table=new Variable();
            cust_invoice_amt_OF_custtax_table=new PackedDecimalI();
            custtax_table=new Variable();
        }
        
        public void declarations()
        {
            final Memory _memory=this._memory;
            ws_resp.declare(_memory,2,4,"ws_resp",8,null,null,null,ws_abstime,0x04400000);
            ws_abstime.declare(_memory,6,15,"ws_abstime",15,null,null,null,ws_comm,0x04400000);
            ws_comm.declare(_memory,21,4,"ws_comm",null,null,null,null,showemi,0x00000000);
            filler_0__OF_showemi.declare(_memory,25,12,"filler_0_",null,null,showemi,null,datel_OF_showemi,0x00000080);
            datel_OF_showemi.declare(_memory,37,2,"datel",4,null,showemi,null,datef_OF_showemi,0x04400000);
            datef_OF_showemi.declare(_memory,39,1,"datef",null,null,showemi,null,filler_1__OF_showemi,0x00000000);
            datea_OF_filler_1__OF_showemi.declare(_memory,39,1,"datea",null,null,filler_1__OF_showemi,null,null,0x00000000);
            filler_1__OF_showemi.declare(_memory,39,1,"filler_1_",null,null,showemi,datea_OF_filler_1__OF_showemi,datei_OF_showemi,0x00100080,1,1,datef_OF_showemi);
            datei_OF_showemi.declare(_memory,40,10,"datei",null,null,showemi,null,timel_OF_showemi,0x00000000);
            timel_OF_showemi.declare(_memory,50,2,"timel",4,null,showemi,null,timef_OF_showemi,0x04400000);
            timef_OF_showemi.declare(_memory,52,1,"timef",null,null,showemi,null,filler_2__OF_showemi,0x00000000);
            timea_OF_filler_2__OF_showemi.declare(_memory,52,1,"timea",null,null,filler_2__OF_showemi,null,null,0x00000000);
            filler_2__OF_showemi.declare(_memory,52,1,"filler_2_",null,null,showemi,timea_OF_filler_2__OF_showemi,timei_OF_showemi,0x00100080,1,1,timef_OF_showemi);
            timei_OF_showemi.declare(_memory,53,10,"timei",null,null,showemi,null,cnuml_OF_showemi,0x00000000);
            cnuml_OF_showemi.declare(_memory,63,2,"cnuml",4,null,showemi,null,cnumf_OF_showemi,0x04400000);
            cnumf_OF_showemi.declare(_memory,65,1,"cnumf",null,null,showemi,null,filler_3__OF_showemi,0x00000000);
            cnuma_OF_filler_3__OF_showemi.declare(_memory,65,1,"cnuma",null,null,filler_3__OF_showemi,null,null,0x00000000);
            filler_3__OF_showemi.declare(_memory,65,1,"filler_3_",null,null,showemi,cnuma_OF_filler_3__OF_showemi,cnumi_OF_showemi,0x00100080,1,1,cnumf_OF_showemi);
            cnumi_OF_showemi.declare(_memory,66,10,"cnumi",null,null,showemi,null,namel_OF_showemi,0x00000000);
            namel_OF_showemi.declare(_memory,76,2,"namel",4,null,showemi,null,namef_OF_showemi,0x04400000);
            namef_OF_showemi.declare(_memory,78,1,"namef",null,null,showemi,null,filler_4__OF_showemi,0x00000000);
            namea_OF_filler_4__OF_showemi.declare(_memory,78,1,"namea",null,null,filler_4__OF_showemi,null,null,0x00000000);
            filler_4__OF_showemi.declare(_memory,78,1,"filler_4_",null,null,showemi,namea_OF_filler_4__OF_showemi,namei_OF_showemi,0x00100080,1,1,namef_OF_showemi);
            namei_OF_showemi.declare(_memory,79,20,"namei",null,null,showemi,null,invamtl_OF_showemi,0x00000000);
            invamtl_OF_showemi.declare(_memory,99,2,"invamtl",4,null,showemi,null,invamtf_OF_showemi,0x04400000);
            invamtf_OF_showemi.declare(_memory,101,1,"invamtf",null,null,showemi,null,filler_5__OF_showemi,0x00000000);
            invamta_OF_filler_5__OF_showemi.declare(_memory,101,1,"invamta",null,null,filler_5__OF_showemi,null,null,0x00000000);
            filler_5__OF_showemi.declare(_memory,101,1,"filler_5_",null,null,showemi,invamta_OF_filler_5__OF_showemi,invamti_OF_showemi,0x00100080,1,1,invamtf_OF_showemi);
            invamti_OF_showemi.declare(_memory,102,9,"invamti","ZZ,ZZZ.ZZ","ZZ,ZZZ.ZZ",null,showemi,null,messl_OF_showemi,0x0c000002,2,0);
            messl_OF_showemi.declare(_memory,111,2,"messl",4,null,showemi,null,messf_OF_showemi,0x04400000);
            messf_OF_showemi.declare(_memory,113,1,"messf",null,null,showemi,null,filler_6__OF_showemi,0x00000000);
            messa_OF_filler_6__OF_showemi.declare(_memory,113,1,"messa",null,null,filler_6__OF_showemi,null,null,0x00000000);
            filler_6__OF_showemi.declare(_memory,113,1,"filler_6_",null,null,showemi,messa_OF_filler_6__OF_showemi,messi_OF_showemi,0x00100080,1,1,messf_OF_showemi);
            messi_OF_showemi.declare(_memory,114,40,"messi",null,null,showemi,null,null,0x00000000);
            showemi.declare(_memory,25,129,"showemi",null,null,null,filler_0__OF_showemi,showemo,0x00000000);
            filler_7__OF_showemo.declare(_memory,25,12,"filler_7_",null,null,showemo,null,filler_8__OF_showemo,0x00000080);
            filler_8__OF_showemo.declare(_memory,37,3,"filler_8_",null,null,showemo,null,dateo_OF_showemo,0x00000080);
            dateo_OF_showemo.declare(_memory,40,10,"dateo",null,null,showemo,null,timeo_OF_showemo,0x00000000);
            timeo_OF_showemo.declare(_memory,53,10,"timeo",null,null,showemo,null,cnumo_OF_showemo,0x00000000);
            cnumo_OF_showemo.declare(_memory,66,10,"cnumo",null,null,showemo,null,nameo_OF_showemo,0x00000000);
            nameo_OF_showemo.declare(_memory,79,20,"nameo",null,null,showemo,null,invamto_OF_showemo,0x00000000);
            invamto_OF_showemo.declare(_memory,102,9,"invamto","ZZ,ZZZ.ZZ","ZZ,ZZZ.ZZ",null,showemo,null,messo_OF_showemo,0x0c000002,2,0);
            messo_OF_showemo.declare(_memory,114,40,"messo",null,null,showemo,null,null,0x00000000);
            showemo.declare(_memory,25,129,"showemo",null,null,null,filler_7__OF_showemo,dfhbmsca,0x00100000,1,1,showemi);
            dfhbmpem_OF_dfhbmsca.declare(_memory,154,1,"dfhbmpem",null,"\031",dfhbmsca,null,dfhbmpnl_OF_dfhbmsca,0x00000000);
            dfhbmpnl_OF_dfhbmsca.declare(_memory,155,1,"dfhbmpnl",null,"\025",dfhbmsca,null,dfhbmpff_OF_dfhbmsca,0x00000000);
            dfhbmpff_OF_dfhbmsca.declare(_memory,156,1,"dfhbmpff",null,"\014",dfhbmsca,null,dfhbmpcr_OF_dfhbmsca,0x00000000);
            dfhbmpcr_OF_dfhbmsca.declare(_memory,157,1,"dfhbmpcr",null,"\015",dfhbmsca,null,dfhbmask_OF_dfhbmsca,0x00000000);
            dfhbmask_OF_dfhbmsca.declare(_memory,158,1,"dfhbmask",null,"\360",dfhbmsca,null,dfhbmunp_OF_dfhbmsca,0x00000000);
            dfhbmunp_OF_dfhbmsca.declare(_memory,159,1,"dfhbmunp",null,"@",dfhbmsca,null,dfhbmunn_OF_dfhbmsca,0x00000000);
            dfhbmunn_OF_dfhbmsca.declare(_memory,160,1,"dfhbmunn",null,"P",dfhbmsca,null,dfhbmpro_OF_dfhbmsca,0x00000000);
            dfhbmpro_OF_dfhbmsca.declare(_memory,161,1,"dfhbmpro",null,"`",dfhbmsca,null,dfhbmbry_OF_dfhbmsca,0x00000000);
            dfhbmbry_OF_dfhbmsca.declare(_memory,162,1,"dfhbmbry",null,"\310",dfhbmsca,null,dfhbmdar_OF_dfhbmsca,0x00000000);
            dfhbmdar_OF_dfhbmsca.declare(_memory,163,1,"dfhbmdar",null,"L",dfhbmsca,null,dfhbmfse_OF_dfhbmsca,0x00000000);
            dfhbmfse_OF_dfhbmsca.declare(_memory,164,1,"dfhbmfse",null,"\301",dfhbmsca,null,dfhbmprf_OF_dfhbmsca,0x00000000);
            dfhbmprf_OF_dfhbmsca.declare(_memory,165,1,"dfhbmprf",null,"a",dfhbmsca,null,dfhbmasf_OF_dfhbmsca,0x00000000);
            dfhbmasf_OF_dfhbmsca.declare(_memory,166,1,"dfhbmasf",null,"\361",dfhbmsca,null,dfhbmasb_OF_dfhbmsca,0x00000000);
            dfhbmasb_OF_dfhbmsca.declare(_memory,167,1,"dfhbmasb",null,"\370",dfhbmsca,null,dfhbmeof_OF_dfhbmsca,0x00000000);
            dfhbmeof_OF_dfhbmsca.declare(_memory,168,1,"dfhbmeof",null,"\200",dfhbmsca,null,dfhbmcur_OF_dfhbmsca,0x00000000);
            dfhbmcur_OF_dfhbmsca.declare(_memory,169,1,"dfhbmcur",null,"\002",dfhbmsca,null,dfhbmec_OF_dfhbmsca,0x00000000);
            dfhbmec_OF_dfhbmsca.declare(_memory,170,1,"dfhbmec",null,"\202",dfhbmsca,null,dfhbmflg_OF_dfhbmsca,0x00000000);
            dfhbmflg_OF_dfhbmsca.declare(_memory,171,1,"dfhbmflg",null,null,dfhbmsca,null,dfhbmdet_OF_dfhbmsca,0x00000000);
            dfhbmdet_OF_dfhbmsca.declare(_memory,172,1,"dfhbmdet",null,"\377",dfhbmsca,null,dfhbmpso_bin_OF_dfhbmsca,0x00000000);
            dfhbmpso_bin_OF_dfhbmsca.declare(_memory,173,2,"dfhbmpso_bin",4,"3599",dfhbmsca,null,dfhbmpso_OF_dfhbmsca,0x04000000);
            dfhbmpso_OF_dfhbmsca.declare(_memory,175,1,"dfhbmpso",null,"\016",dfhbmsca,null,dfhbmpsi_OF_dfhbmsca,0x00000000);
            dfhbmpsi_OF_dfhbmsca.declare(_memory,176,1,"dfhbmpsi",null,"\017",dfhbmsca,null,dfhsa_OF_dfhbmsca,0x00000000);
            dfhsa_OF_dfhbmsca.declare(_memory,177,1,"dfhsa",null,"(",dfhbmsca,null,dfhcolor_OF_dfhbmsca,0x00000000);
            dfhcolor_OF_dfhbmsca.declare(_memory,178,1,"dfhcolor",null,"B",dfhbmsca,null,dfhps_OF_dfhbmsca,0x00000000);
            dfhps_OF_dfhbmsca.declare(_memory,179,1,"dfhps",null,"C",dfhbmsca,null,dfhhlt_OF_dfhbmsca,0x00000000);
            dfhhlt_OF_dfhbmsca.declare(_memory,180,1,"dfhhlt",null,"A",dfhbmsca,null,dfh3270_OF_dfhbmsca,0x00000000);
            dfh3270_OF_dfhbmsca.declare(_memory,181,1,"dfh3270",null,"\300",dfhbmsca,null,dfhval_OF_dfhbmsca,0x00000000);
            dfhval_OF_dfhbmsca.declare(_memory,182,1,"dfhval",null,"\301",dfhbmsca,null,dfhoutln_OF_dfhbmsca,0x00000000);
            dfhoutln_OF_dfhbmsca.declare(_memory,183,1,"dfhoutln",null,"\302",dfhbmsca,null,dfhbktrn_OF_dfhbmsca,0x00000000);
            dfhbktrn_OF_dfhbmsca.declare(_memory,184,1,"dfhbktrn",null,"F",dfhbmsca,null,dfhall_OF_dfhbmsca,0x00000000);
            dfhall_OF_dfhbmsca.declare(_memory,185,1,"dfhall",null,"\000",dfhbmsca,null,dfherror_OF_dfhbmsca,0x00000000);
            dfherror_OF_dfhbmsca.declare(_memory,186,1,"dfherror",null,"?",dfhbmsca,null,dfhdft_OF_dfhbmsca,0x00000000);
            dfhdft_OF_dfhbmsca.declare(_memory,187,1,"dfhdft",null,"\377",dfhbmsca,null,dfhdfcol_OF_dfhbmsca,0x00000000);
            dfhdfcol_OF_dfhbmsca.declare(_memory,188,1,"dfhdfcol",null,"\000",dfhbmsca,null,dfhblue_OF_dfhbmsca,0x00000000);
            dfhblue_OF_dfhbmsca.declare(_memory,189,1,"dfhblue",null,"\361",dfhbmsca,null,dfhred_OF_dfhbmsca,0x00000000);
            dfhred_OF_dfhbmsca.declare(_memory,190,1,"dfhred",null,"\362",dfhbmsca,null,dfhpink_OF_dfhbmsca,0x00000000);
            dfhpink_OF_dfhbmsca.declare(_memory,191,1,"dfhpink",null,"\363",dfhbmsca,null,dfhgreen_OF_dfhbmsca,0x00000000);
            dfhgreen_OF_dfhbmsca.declare(_memory,192,1,"dfhgreen",null,"\364",dfhbmsca,null,dfhturq_OF_dfhbmsca,0x00000000);
            dfhturq_OF_dfhbmsca.declare(_memory,193,1,"dfhturq",null,"\365",dfhbmsca,null,dfhyello_OF_dfhbmsca,0x00000000);
            dfhyello_OF_dfhbmsca.declare(_memory,194,1,"dfhyello",null,"\366",dfhbmsca,null,dfhneutr_OF_dfhbmsca,0x00000000);
            dfhneutr_OF_dfhbmsca.declare(_memory,195,1,"dfhneutr",null,"\367",dfhbmsca,null,dfhbase_OF_dfhbmsca,0x00000000);
            dfhbase_OF_dfhbmsca.declare(_memory,196,1,"dfhbase",null,"\000",dfhbmsca,null,dfhdfhi_OF_dfhbmsca,0x00000000);
            dfhdfhi_OF_dfhbmsca.declare(_memory,197,1,"dfhdfhi",null,"\000",dfhbmsca,null,dfhblink_OF_dfhbmsca,0x00000000);
            dfhblink_OF_dfhbmsca.declare(_memory,198,1,"dfhblink",null,"\361",dfhbmsca,null,dfhrevrs_OF_dfhbmsca,0x00000000);
            dfhrevrs_OF_dfhbmsca.declare(_memory,199,1,"dfhrevrs",null,"\362",dfhbmsca,null,dfhundln_OF_dfhbmsca,0x00000000);
            dfhundln_OF_dfhbmsca.declare(_memory,200,1,"dfhundln",null,"\364",dfhbmsca,null,dfhmfil_OF_dfhbmsca,0x00000000);
            dfhmfil_OF_dfhbmsca.declare(_memory,201,1,"dfhmfil",null,"\004",dfhbmsca,null,dfhment_OF_dfhbmsca,0x00000000);
            dfhment_OF_dfhbmsca.declare(_memory,202,1,"dfhment",null,"\002",dfhbmsca,null,dfhmfe_OF_dfhbmsca,0x00000000);
            dfhmfe_OF_dfhbmsca.declare(_memory,203,1,"dfhmfe",null,"\006",dfhbmsca,null,dfhunnod_OF_dfhbmsca,0x00000000);
            dfhunnod_OF_dfhbmsca.declare(_memory,204,1,"dfhunnod",null,"M",dfhbmsca,null,dfhunimd_OF_dfhbmsca,0x00000000);
            dfhunimd_OF_dfhbmsca.declare(_memory,205,1,"dfhunimd",null,"\311",dfhbmsca,null,dfhunnum_OF_dfhbmsca,0x00000000);
            dfhunnum_OF_dfhbmsca.declare(_memory,206,1,"dfhunnum",null,"\321",dfhbmsca,null,dfhunint_OF_dfhbmsca,0x00000000);
            dfhunint_OF_dfhbmsca.declare(_memory,207,1,"dfhunint",null,"\331",dfhbmsca,null,dfhunnon_OF_dfhbmsca,0x00000000);
            dfhunnon_OF_dfhbmsca.declare(_memory,208,1,"dfhunnon",null,"]",dfhbmsca,null,dfhproti_OF_dfhbmsca,0x00000000);
            dfhproti_OF_dfhbmsca.declare(_memory,209,1,"dfhproti",null,"\350",dfhbmsca,null,dfhprotn_OF_dfhbmsca,0x00000000);
            dfhprotn_OF_dfhbmsca.declare(_memory,210,1,"dfhprotn",null,"l",dfhbmsca,null,dfhmt_OF_dfhbmsca,0x00000000);
            dfhmt_OF_dfhbmsca.declare(_memory,211,1,"dfhmt",null,"\001",dfhbmsca,null,dfhmft_OF_dfhbmsca,0x00000000);
            dfhmft_OF_dfhbmsca.declare(_memory,212,1,"dfhmft",null,"\005",dfhbmsca,null,dfhmet_OF_dfhbmsca,0x00000000);
            dfhmet_OF_dfhbmsca.declare(_memory,213,1,"dfhmet",null,"\003",dfhbmsca,null,dfhmfet_OF_dfhbmsca,0x00000000);
            dfhmfet_OF_dfhbmsca.declare(_memory,214,1,"dfhmfet",null,"\007",dfhbmsca,null,dfhdffr_OF_dfhbmsca,0x00000000);
            dfhdffr_OF_dfhbmsca.declare(_memory,215,1,"dfhdffr",null,"\000",dfhbmsca,null,dfhleft_OF_dfhbmsca,0x00000000);
            dfhleft_OF_dfhbmsca.declare(_memory,216,1,"dfhleft",null,"\010",dfhbmsca,null,dfhover_OF_dfhbmsca,0x00000000);
            dfhover_OF_dfhbmsca.declare(_memory,217,1,"dfhover",null,"\004",dfhbmsca,null,dfhright_OF_dfhbmsca,0x00000000);
            dfhright_OF_dfhbmsca.declare(_memory,218,1,"dfhright",null,"\002",dfhbmsca,null,dfhunder_OF_dfhbmsca,0x00000000);
            dfhunder_OF_dfhbmsca.declare(_memory,219,1,"dfhunder",null,"\001",dfhbmsca,null,dfhbox_bin_OF_dfhbmsca,0x00000000);
            dfhbox_bin_OF_dfhbmsca.declare(_memory,220,2,"dfhbox_bin",4,"15",dfhbmsca,null,dfhbox_OF_dfhbmsca,0x04000000);
            dfhbox_OF_dfhbmsca.declare(_memory,222,1,"dfhbox",null,"\017",dfhbmsca,null,dfhsosi_OF_dfhbmsca,0x00000000);
            dfhsosi_OF_dfhbmsca.declare(_memory,223,1,"dfhsosi",null,"\001",dfhbmsca,null,dfhtrans_OF_dfhbmsca,0x00000000);
            dfhtrans_OF_dfhbmsca.declare(_memory,224,1,"dfhtrans",null,"\360",dfhbmsca,null,dfhopaq_OF_dfhbmsca,0x00000000);
            dfhopaq_OF_dfhbmsca.declare(_memory,225,1,"dfhopaq",null,"\377",dfhbmsca,null,null,0x00000000);
            dfhbmsca.declare(_memory,154,72,"dfhbmsca",null,null,null,dfhbmpem_OF_dfhbmsca,dfhaid,0x00000000);
            dfhnull_OF_dfhaid.declare(_memory,226,1,"dfhnull",null,"\000",dfhaid,null,dfhenter_OF_dfhaid,0x00000000);
            dfhenter_OF_dfhaid.declare(_memory,227,1,"dfhenter",null,"}",dfhaid,null,dfhclear_OF_dfhaid,0x00000000);
            dfhclear_OF_dfhaid.declare(_memory,228,1,"dfhclear",null,"m",dfhaid,null,dfhclrp_OF_dfhaid,0x00000000);
            dfhclrp_OF_dfhaid.declare(_memory,229,1,"dfhclrp",null,"j",dfhaid,null,dfhpen_OF_dfhaid,0x00000000);
            dfhpen_OF_dfhaid.declare(_memory,230,1,"dfhpen",null,"~",dfhaid,null,dfhopid_OF_dfhaid,0x00000000);
            dfhopid_OF_dfhaid.declare(_memory,231,1,"dfhopid",null,"\346",dfhaid,null,dfhmsre_OF_dfhaid,0x00000000);
            dfhmsre_OF_dfhaid.declare(_memory,232,1,"dfhmsre",null,"\347",dfhaid,null,dfhstrf_OF_dfhaid,0x00000000);
            dfhstrf_OF_dfhaid.declare(_memory,233,1,"dfhstrf",null,"\210",dfhaid,null,dfhtrig_OF_dfhaid,0x00000000);
            dfhtrig_OF_dfhaid.declare(_memory,234,1,"dfhtrig",null,"\177",dfhaid,null,dfhpa1_OF_dfhaid,0x00000000);
            dfhpa1_OF_dfhaid.declare(_memory,235,1,"dfhpa1",null,"l",dfhaid,null,dfhpa2_OF_dfhaid,0x00000000);
            dfhpa2_OF_dfhaid.declare(_memory,236,1,"dfhpa2",null,"n",dfhaid,null,dfhpa3_OF_dfhaid,0x00000000);
            dfhpa3_OF_dfhaid.declare(_memory,237,1,"dfhpa3",null,"k",dfhaid,null,dfhpf1_OF_dfhaid,0x00000000);
            dfhpf1_OF_dfhaid.declare(_memory,238,1,"dfhpf1",null,"\361",dfhaid,null,dfhpf2_OF_dfhaid,0x00000000);
            dfhpf2_OF_dfhaid.declare(_memory,239,1,"dfhpf2",null,"\362",dfhaid,null,dfhpf3_OF_dfhaid,0x00000000);
            dfhpf3_OF_dfhaid.declare(_memory,240,1,"dfhpf3",null,"\363",dfhaid,null,dfhpf4_OF_dfhaid,0x00000000);
            dfhpf4_OF_dfhaid.declare(_memory,241,1,"dfhpf4",null,"\364",dfhaid,null,dfhpf5_OF_dfhaid,0x00000000);
            dfhpf5_OF_dfhaid.declare(_memory,242,1,"dfhpf5",null,"\365",dfhaid,null,dfhpf6_OF_dfhaid,0x00000000);
            dfhpf6_OF_dfhaid.declare(_memory,243,1,"dfhpf6",null,"\366",dfhaid,null,dfhpf7_OF_dfhaid,0x00000000);
            dfhpf7_OF_dfhaid.declare(_memory,244,1,"dfhpf7",null,"\367",dfhaid,null,dfhpf8_OF_dfhaid,0x00000000);
            dfhpf8_OF_dfhaid.declare(_memory,245,1,"dfhpf8",null,"\370",dfhaid,null,dfhpf9_OF_dfhaid,0x00000000);
            dfhpf9_OF_dfhaid.declare(_memory,246,1,"dfhpf9",null,"\371",dfhaid,null,dfhpf10_OF_dfhaid,0x00000000);
            dfhpf10_OF_dfhaid.declare(_memory,247,1,"dfhpf10",null,"z",dfhaid,null,dfhpf11_OF_dfhaid,0x00000000);
            dfhpf11_OF_dfhaid.declare(_memory,248,1,"dfhpf11",null,"{",dfhaid,null,dfhpf12_OF_dfhaid,0x00000000);
            dfhpf12_OF_dfhaid.declare(_memory,249,1,"dfhpf12",null,"|",dfhaid,null,dfhpf13_OF_dfhaid,0x00000000);
            dfhpf13_OF_dfhaid.declare(_memory,250,1,"dfhpf13",null,"\301",dfhaid,null,dfhpf14_OF_dfhaid,0x00000000);
            dfhpf14_OF_dfhaid.declare(_memory,251,1,"dfhpf14",null,"\302",dfhaid,null,dfhpf15_OF_dfhaid,0x00000000);
            dfhpf15_OF_dfhaid.declare(_memory,252,1,"dfhpf15",null,"\303",dfhaid,null,dfhpf16_OF_dfhaid,0x00000000);
            dfhpf16_OF_dfhaid.declare(_memory,253,1,"dfhpf16",null,"\304",dfhaid,null,dfhpf17_OF_dfhaid,0x00000000);
            dfhpf17_OF_dfhaid.declare(_memory,254,1,"dfhpf17",null,"\305",dfhaid,null,dfhpf18_OF_dfhaid,0x00000000);
            dfhpf18_OF_dfhaid.declare(_memory,255,1,"dfhpf18",null,"\306",dfhaid,null,dfhpf19_OF_dfhaid,0x00000000);
            dfhpf19_OF_dfhaid.declare(_memory,256,1,"dfhpf19",null,"\307",dfhaid,null,dfhpf20_OF_dfhaid,0x00000000);
            dfhpf20_OF_dfhaid.declare(_memory,257,1,"dfhpf20",null,"\310",dfhaid,null,dfhpf21_OF_dfhaid,0x00000000);
            dfhpf21_OF_dfhaid.declare(_memory,258,1,"dfhpf21",null,"\311",dfhaid,null,dfhpf22_OF_dfhaid,0x00000000);
            dfhpf22_OF_dfhaid.declare(_memory,259,1,"dfhpf22",null,"J",dfhaid,null,dfhpf23_OF_dfhaid,0x00000000);
            dfhpf23_OF_dfhaid.declare(_memory,260,1,"dfhpf23",null,"K",dfhaid,null,dfhpf24_OF_dfhaid,0x00000000);
            dfhpf24_OF_dfhaid.declare(_memory,261,1,"dfhpf24",null,"L",dfhaid,null,null,0x00000000);
            dfhaid.declare(_memory,226,36,"dfhaid",null,null,null,dfhnull_OF_dfhaid,sql_init_flag,0x00000000);
            sql_init_flag.declare(_memory,262,2,"sql_init_flag",4,"0",null,null,sqlca,0x04400000);
            sqlcaid_OF_sqlca.declare(_memory,264,8,"sqlcaid",null,"SQLCA",sqlca,null,sqlcabc_OF_sqlca,0x00000000);
            sqlcabc_OF_sqlca.declare(_memory,272,4,"sqlcabc",9,"136",sqlca,null,sqlcode_OF_sqlca,0x04400000);
            sqlcode_OF_sqlca.declare(_memory,276,4,"sqlcode",9,null,sqlca,null,sqlerrm_OF_sqlca,0x04400000);
            sqlerrml_OF_sqlerrm_OF_sqlca.declare(_memory,280,2,"sqlerrml",4,null,sqlerrm_OF_sqlca,null,sqlerrmc_OF_sqlerrm_OF_sqlca,0x04400000);
            sqlerrmc_OF_sqlerrm_OF_sqlca.declare(_memory,282,270,"sqlerrmc",null,null,sqlerrm_OF_sqlca,null,null,0x00000000);
            sqlerrm_OF_sqlca.declare(_memory,280,272,"sqlerrm",null,null,sqlca,sqlerrml_OF_sqlerrm_OF_sqlca,sqlerrp_OF_sqlca,0x00002000);
            sqlerrp_OF_sqlca.declare(_memory,552,8,"sqlerrp",null,"ECOB4000",sqlca,null,sqlerrd_OF_sqlca,0x00000000);
            sqlerrd_OF_sqlca.declare(_memory,560,4,"sqlerrd",9,null,sqlca,null,sqlwarn_OF_sqlca,0x04400000,1,6,null);
            sqlwarn0_OF_sqlwarn_OF_sqlca.declare(_memory,584,1,"sqlwarn0",null," ",sqlwarn_OF_sqlca,null,sqlwarn1_OF_sqlwarn_OF_sqlca,0x00000000);
            sqlwarn1_OF_sqlwarn_OF_sqlca.declare(_memory,585,1,"sqlwarn1",null," ",sqlwarn_OF_sqlca,null,sqlwarn2_OF_sqlwarn_OF_sqlca,0x00000000);
            sqlwarn2_OF_sqlwarn_OF_sqlca.declare(_memory,586,1,"sqlwarn2",null," ",sqlwarn_OF_sqlca,null,sqlwarn3_OF_sqlwarn_OF_sqlca,0x00000000);
            sqlwarn3_OF_sqlwarn_OF_sqlca.declare(_memory,587,1,"sqlwarn3",null," ",sqlwarn_OF_sqlca,null,sqlwarn4_OF_sqlwarn_OF_sqlca,0x00000000);
            sqlwarn4_OF_sqlwarn_OF_sqlca.declare(_memory,588,1,"sqlwarn4",null," ",sqlwarn_OF_sqlca,null,sqlwarn5_OF_sqlwarn_OF_sqlca,0x00000000);
            sqlwarn5_OF_sqlwarn_OF_sqlca.declare(_memory,589,1,"sqlwarn5",null," ",sqlwarn_OF_sqlca,null,sqlwarn6_OF_sqlwarn_OF_sqlca,0x00000000);
            sqlwarn6_OF_sqlwarn_OF_sqlca.declare(_memory,590,1,"sqlwarn6",null," ",sqlwarn_OF_sqlca,null,sqlwarn7_OF_sqlwarn_OF_sqlca,0x00000000);
            sqlwarn7_OF_sqlwarn_OF_sqlca.declare(_memory,591,1,"sqlwarn7",null," ",sqlwarn_OF_sqlca,null,null,0x00000000);
            sqlwarn_OF_sqlca.declare(_memory,584,8,"sqlwarn",null,null,sqlca,sqlwarn0_OF_sqlwarn_OF_sqlca,sqlext_OF_sqlca,0x00000000);
            sqlwarn8_OF_sqlext_OF_sqlca.declare(_memory,592,1,"sqlwarn8",null," ",sqlext_OF_sqlca,null,sqlwarn9_OF_sqlext_OF_sqlca,0x00000000);
            sqlwarn9_OF_sqlext_OF_sqlca.declare(_memory,593,1,"sqlwarn9",null," ",sqlext_OF_sqlca,null,sqlwarna_OF_sqlext_OF_sqlca,0x00000000);
            sqlwarna_OF_sqlext_OF_sqlca.declare(_memory,594,1,"sqlwarna",null," ",sqlext_OF_sqlca,null,sqlstate_OF_sqlext_OF_sqlca,0x00000000);
            sqlstate_OF_sqlext_OF_sqlca.declare(_memory,595,5,"sqlstate",null," ",sqlext_OF_sqlca,null,null,0x00000000);
            sqlext_OF_sqlca.declare(_memory,592,8,"sqlext",null,null,sqlca,sqlwarn8_OF_sqlext_OF_sqlca,null,0x00000000);
            sqlca.declare(_memory,264,336,"sqlca",null,null,null,sqlcaid_OF_sqlca,custtax_table,0x00000000);
            cust_num_OF_custtax_table.declare(_memory,600,10,"cust_num",10,null,custtax_table,null,cust_name_OF_custtax_table,0x04000000);
            cust_name_OF_custtax_table.declare(_memory,610,20,"cust_name",null,null,custtax_table,null,cust_invoice_amt_OF_custtax_table,0x00000000);
            cust_invoice_amt_OF_custtax_table.declare(_memory,630,4,"cust_invoice_amt",7,null,custtax_table,null,null,0x04400000,2,0);
            custtax_table.declare(_memory,600,34,"custtax_table",null,null,null,cust_num_OF_custtax_table,null,0x00000000);
            Variable.setUnusedVarsSizes(wrk.ws_resp);
            
            
            // Declare Java Arrays
            sqlerrd_OF_sqlca__1=sqlerrd_OF_sqlca.createNumericArray1();            
            
        } // end declarations
        
        public  Binary ws_resp;
        public  DisplayP ws_abstime;
        public  Variable ws_comm;
        public  Variable filler_0__OF_showemi;
        public  Binary datel_OF_showemi;
        public  Variable datef_OF_showemi;
        public  Variable datea_OF_filler_1__OF_showemi;
        public  Variable filler_1__OF_showemi;
        public  Variable datei_OF_showemi;
        public  Binary timel_OF_showemi;
        public  Variable timef_OF_showemi;
        public  Variable timea_OF_filler_2__OF_showemi;
        public  Variable filler_2__OF_showemi;
        public  Variable timei_OF_showemi;
        public  Binary cnuml_OF_showemi;
        public  Variable cnumf_OF_showemi;
        public  Variable cnuma_OF_filler_3__OF_showemi;
        public  Variable filler_3__OF_showemi;
        public  Variable cnumi_OF_showemi;
        public  Binary namel_OF_showemi;
        public  Variable namef_OF_showemi;
        public  Variable namea_OF_filler_4__OF_showemi;
        public  Variable filler_4__OF_showemi;
        public  Variable namei_OF_showemi;
        public  Binary invamtl_OF_showemi;
        public  Variable invamtf_OF_showemi;
        public  Variable invamta_OF_filler_5__OF_showemi;
        public  Variable filler_5__OF_showemi;
        public  Variable invamti_OF_showemi;
        public  Binary messl_OF_showemi;
        public  Variable messf_OF_showemi;
        public  Variable messa_OF_filler_6__OF_showemi;
        public  Variable filler_6__OF_showemi;
        public  Variable messi_OF_showemi;
        public  Variable showemi;
        public  Variable filler_7__OF_showemo;
        public  Variable filler_8__OF_showemo;
        public  Variable dateo_OF_showemo;
        public  Variable timeo_OF_showemo;
        public  Variable cnumo_OF_showemo;
        public  Variable nameo_OF_showemo;
        public  Variable invamto_OF_showemo;
        public  Variable messo_OF_showemo;
        public  Variable showemo;
        public  Variable dfhbmpem_OF_dfhbmsca;
        public  Variable dfhbmpnl_OF_dfhbmsca;
        public  Variable dfhbmpff_OF_dfhbmsca;
        public  Variable dfhbmpcr_OF_dfhbmsca;
        public  Variable dfhbmask_OF_dfhbmsca;
        public  Variable dfhbmunp_OF_dfhbmsca;
        public  Variable dfhbmunn_OF_dfhbmsca;
        public  Variable dfhbmpro_OF_dfhbmsca;
        public  Variable dfhbmbry_OF_dfhbmsca;
        public  Variable dfhbmdar_OF_dfhbmsca;
        public  Variable dfhbmfse_OF_dfhbmsca;
        public  Variable dfhbmprf_OF_dfhbmsca;
        public  Variable dfhbmasf_OF_dfhbmsca;
        public  Variable dfhbmasb_OF_dfhbmsca;
        public  Variable dfhbmeof_OF_dfhbmsca;
        public  Variable dfhbmcur_OF_dfhbmsca;
        public  Variable dfhbmec_OF_dfhbmsca;
        public  Variable dfhbmflg_OF_dfhbmsca;
        public  Variable dfhbmdet_OF_dfhbmsca;
        public  Binary dfhbmpso_bin_OF_dfhbmsca;
        public  Variable dfhbmpso_OF_dfhbmsca;
        public  Variable dfhbmpsi_OF_dfhbmsca;
        public  Variable dfhsa_OF_dfhbmsca;
        public  Variable dfhcolor_OF_dfhbmsca;
        public  Variable dfhps_OF_dfhbmsca;
        public  Variable dfhhlt_OF_dfhbmsca;
        public  Variable dfh3270_OF_dfhbmsca;
        public  Variable dfhval_OF_dfhbmsca;
        public  Variable dfhoutln_OF_dfhbmsca;
        public  Variable dfhbktrn_OF_dfhbmsca;
        public  Variable dfhall_OF_dfhbmsca;
        public  Variable dfherror_OF_dfhbmsca;
        public  Variable dfhdft_OF_dfhbmsca;
        public  Variable dfhdfcol_OF_dfhbmsca;
        public  Variable dfhblue_OF_dfhbmsca;
        public  Variable dfhred_OF_dfhbmsca;
        public  Variable dfhpink_OF_dfhbmsca;
        public  Variable dfhgreen_OF_dfhbmsca;
        public  Variable dfhturq_OF_dfhbmsca;
        public  Variable dfhyello_OF_dfhbmsca;
        public  Variable dfhneutr_OF_dfhbmsca;
        public  Variable dfhbase_OF_dfhbmsca;
        public  Variable dfhdfhi_OF_dfhbmsca;
        public  Variable dfhblink_OF_dfhbmsca;
        public  Variable dfhrevrs_OF_dfhbmsca;
        public  Variable dfhundln_OF_dfhbmsca;
        public  Variable dfhmfil_OF_dfhbmsca;
        public  Variable dfhment_OF_dfhbmsca;
        public  Variable dfhmfe_OF_dfhbmsca;
        public  Variable dfhunnod_OF_dfhbmsca;
        public  Variable dfhunimd_OF_dfhbmsca;
        public  Variable dfhunnum_OF_dfhbmsca;
        public  Variable dfhunint_OF_dfhbmsca;
        public  Variable dfhunnon_OF_dfhbmsca;
        public  Variable dfhproti_OF_dfhbmsca;
        public  Variable dfhprotn_OF_dfhbmsca;
        public  Variable dfhmt_OF_dfhbmsca;
        public  Variable dfhmft_OF_dfhbmsca;
        public  Variable dfhmet_OF_dfhbmsca;
        public  Variable dfhmfet_OF_dfhbmsca;
        public  Variable dfhdffr_OF_dfhbmsca;
        public  Variable dfhleft_OF_dfhbmsca;
        public  Variable dfhover_OF_dfhbmsca;
        public  Variable dfhright_OF_dfhbmsca;
        public  Variable dfhunder_OF_dfhbmsca;
        public  Binary dfhbox_bin_OF_dfhbmsca;
        public  Variable dfhbox_OF_dfhbmsca;
        public  Variable dfhsosi_OF_dfhbmsca;
        public  Variable dfhtrans_OF_dfhbmsca;
        public  Variable dfhopaq_OF_dfhbmsca;
        public  Variable dfhbmsca;
        public  Variable dfhnull_OF_dfhaid;
        public  Variable dfhenter_OF_dfhaid;
        public  Variable dfhclear_OF_dfhaid;
        public  Variable dfhclrp_OF_dfhaid;
        public  Variable dfhpen_OF_dfhaid;
        public  Variable dfhopid_OF_dfhaid;
        public  Variable dfhmsre_OF_dfhaid;
        public  Variable dfhstrf_OF_dfhaid;
        public  Variable dfhtrig_OF_dfhaid;
        public  Variable dfhpa1_OF_dfhaid;
        public  Variable dfhpa2_OF_dfhaid;
        public  Variable dfhpa3_OF_dfhaid;
        public  Variable dfhpf1_OF_dfhaid;
        public  Variable dfhpf2_OF_dfhaid;
        public  Variable dfhpf3_OF_dfhaid;
        public  Variable dfhpf4_OF_dfhaid;
        public  Variable dfhpf5_OF_dfhaid;
        public  Variable dfhpf6_OF_dfhaid;
        public  Variable dfhpf7_OF_dfhaid;
        public  Variable dfhpf8_OF_dfhaid;
        public  Variable dfhpf9_OF_dfhaid;
        public  Variable dfhpf10_OF_dfhaid;
        public  Variable dfhpf11_OF_dfhaid;
        public  Variable dfhpf12_OF_dfhaid;
        public  Variable dfhpf13_OF_dfhaid;
        public  Variable dfhpf14_OF_dfhaid;
        public  Variable dfhpf15_OF_dfhaid;
        public  Variable dfhpf16_OF_dfhaid;
        public  Variable dfhpf17_OF_dfhaid;
        public  Variable dfhpf18_OF_dfhaid;
        public  Variable dfhpf19_OF_dfhaid;
        public  Variable dfhpf20_OF_dfhaid;
        public  Variable dfhpf21_OF_dfhaid;
        public  Variable dfhpf22_OF_dfhaid;
        public  Variable dfhpf23_OF_dfhaid;
        public  Variable dfhpf24_OF_dfhaid;
        public  Variable dfhaid;
        public  Binary sql_init_flag;
        public  Variable sqlcaid_OF_sqlca;
        public  Binary sqlcabc_OF_sqlca;
        public  Binary sqlcode_OF_sqlca;
        public  Binary sqlerrml_OF_sqlerrm_OF_sqlca;
        public  Variable sqlerrmc_OF_sqlerrm_OF_sqlca;
        public  Variable sqlerrm_OF_sqlca;
        public  Variable sqlerrp_OF_sqlca;
        public  Binary sqlerrd_OF_sqlca;
        public  Variable sqlwarn0_OF_sqlwarn_OF_sqlca;
        public  Variable sqlwarn1_OF_sqlwarn_OF_sqlca;
        public  Variable sqlwarn2_OF_sqlwarn_OF_sqlca;
        public  Variable sqlwarn3_OF_sqlwarn_OF_sqlca;
        public  Variable sqlwarn4_OF_sqlwarn_OF_sqlca;
        public  Variable sqlwarn5_OF_sqlwarn_OF_sqlca;
        public  Variable sqlwarn6_OF_sqlwarn_OF_sqlca;
        public  Variable sqlwarn7_OF_sqlwarn_OF_sqlca;
        public  Variable sqlwarn_OF_sqlca;
        public  Variable sqlwarn8_OF_sqlext_OF_sqlca;
        public  Variable sqlwarn9_OF_sqlext_OF_sqlca;
        public  Variable sqlwarna_OF_sqlext_OF_sqlca;
        public  Variable sqlstate_OF_sqlext_OF_sqlca;
        public  Variable sqlext_OF_sqlca;
        public  Variable sqlca;
        public  DisplayP cust_num_OF_custtax_table;
        public  Variable cust_name_OF_custtax_table;
        public  PackedDecimalI cust_invoice_amt_OF_custtax_table;
        public  Variable custtax_table;
        
        
        // Create Java Arrays
        public Numeric sqlerrd_OF_sqlca__1[];        
        
        protected final Memory _memory=new UnbufferedMemory(634,"onldemo.Wrk");
        
    } // end Wrk
    public transient Wrk wrk=null; // instance accessor for data section
    
    
    @SuppressWarnings("all")
    public class Lnk              implements Section
    {
        public void doDeclarations()
        {
            try
            {
                declarations();
            }
            catch(Exception _initializerException)
            {
                CobolException.runtimeError(_context,"INTERNAL ERROR: Cannot initialize variable storage for onldemo section 'Lnk'",_initializerException);
            }
        }
        
        
        public void doInitializations()
        {
            dfhcommarea=new Variable();
            eibtime_OF_dfheiblk=new PackedDecimalI();
            eibdate_OF_dfheiblk=new PackedDecimalI();
            eibtrnid_OF_dfheiblk=new Variable();
            eibtaskn_OF_dfheiblk=new PackedDecimalI();
            eibtrmid_OF_dfheiblk=new Variable();
            dfheigdi_OF_dfheiblk=new Binary();
            eibcposn_OF_dfheiblk=new Binary();
            eibcalen_OF_dfheiblk=new Binary();
            eibaid_OF_dfheiblk=new Variable();
            eibfn_OF_dfheiblk=new Variable();
            eibrcode_OF_dfheiblk=new Variable();
            eibds_OF_dfheiblk=new Variable();
            eibreqid_OF_dfheiblk=new Variable();
            eibrsrce_OF_dfheiblk=new Variable();
            eibsync_OF_dfheiblk=new Variable();
            eibfree_OF_dfheiblk=new Variable();
            eibrecv_OF_dfheiblk=new Variable();
            eibfil01_OF_dfheiblk=new Variable();
            eibatt_OF_dfheiblk=new Variable();
            eibeoc_OF_dfheiblk=new Variable();
            eibfmh_OF_dfheiblk=new Variable();
            eibcompl_OF_dfheiblk=new Variable();
            eibsig_OF_dfheiblk=new Variable();
            eibconf_OF_dfheiblk=new Variable();
            eiberr_OF_dfheiblk=new Variable();
            eiberrcd_OF_dfheiblk=new Variable();
            eibsynrb_OF_dfheiblk=new Variable();
            eibnodat_OF_dfheiblk=new Variable();
            eibresp_OF_dfheiblk=new Binary();
            eibresp2_OF_dfheiblk=new Binary();
            eibrldbk_OF_dfheiblk=new Variable();
            eibsend_OF_dfheiblk=new Variable();
            eiberrmsg_OF_dfheiblk=new Variable();
            dibver_OF_dfheiblk=new Variable();
            dibstat_OF_dfheiblk=new Variable();
            dibsegm_OF_dfheiblk=new Variable();
            dibseglv_OF_dfheiblk=new Variable();
            dibkfbl_OF_dfheiblk=new Binary();
            dibdbdnm_OF_dfheiblk=new Variable();
            dibdborg_OF_dfheiblk=new Variable();
            dfheiblk=new Variable();
        }
        
        public void declarations()
        {
            final Memory _memory=this._memory;
            dfhcommarea.declare(_memory,0,4,"dfhcommarea",null,null,null,null,dfheiblk,0x00000000);
            eibtime_OF_dfheiblk.declare(_memory,4,4,"eibtime",7,Intrinsic.sr_current_julian_time(),dfheiblk,null,eibdate_OF_dfheiblk,0x04400000);
            eibdate_OF_dfheiblk.declare(_memory,8,4,"eibdate",7,Intrinsic.sr_current_julian_date(),dfheiblk,null,eibtrnid_OF_dfheiblk,0x04400000);
            eibtrnid_OF_dfheiblk.declare(_memory,12,4,"eibtrnid",null,null,dfheiblk,null,eibtaskn_OF_dfheiblk,0x00000000);
            eibtaskn_OF_dfheiblk.declare(_memory,16,4,"eibtaskn",7,null,dfheiblk,null,eibtrmid_OF_dfheiblk,0x04400000);
            eibtrmid_OF_dfheiblk.declare(_memory,20,4,"eibtrmid",null,null,dfheiblk,null,dfheigdi_OF_dfheiblk,0x00000000);
            dfheigdi_OF_dfheiblk.declare(_memory,24,2,"dfheigdi",4,null,dfheiblk,null,eibcposn_OF_dfheiblk,0x04400000);
            eibcposn_OF_dfheiblk.declare(_memory,26,2,"eibcposn",4,null,dfheiblk,null,eibcalen_OF_dfheiblk,0x04400000);
            eibcalen_OF_dfheiblk.declare(_memory,28,2,"eibcalen",4,null,dfheiblk,null,eibaid_OF_dfheiblk,0x04400000);
            eibaid_OF_dfheiblk.declare(_memory,30,1,"eibaid",null,null,dfheiblk,null,eibfn_OF_dfheiblk,0x00000000);
            eibfn_OF_dfheiblk.declare(_memory,31,2,"eibfn",null,null,dfheiblk,null,eibrcode_OF_dfheiblk,0x00000000);
            eibrcode_OF_dfheiblk.declare(_memory,33,6,"eibrcode",null,null,dfheiblk,null,eibds_OF_dfheiblk,0x00000000);
            eibds_OF_dfheiblk.declare(_memory,39,8,"eibds",null,null,dfheiblk,null,eibreqid_OF_dfheiblk,0x00000000);
            eibreqid_OF_dfheiblk.declare(_memory,47,8,"eibreqid",null,null,dfheiblk,null,eibrsrce_OF_dfheiblk,0x00000000);
            eibrsrce_OF_dfheiblk.declare(_memory,55,8,"eibrsrce",null,null,dfheiblk,null,eibsync_OF_dfheiblk,0x00000000);
            eibsync_OF_dfheiblk.declare(_memory,63,1,"eibsync",null,null,dfheiblk,null,eibfree_OF_dfheiblk,0x00000000);
            eibfree_OF_dfheiblk.declare(_memory,64,1,"eibfree",null,null,dfheiblk,null,eibrecv_OF_dfheiblk,0x00000000);
            eibrecv_OF_dfheiblk.declare(_memory,65,1,"eibrecv",null,null,dfheiblk,null,eibfil01_OF_dfheiblk,0x00000000);
            eibfil01_OF_dfheiblk.declare(_memory,66,1,"eibfil01",null,null,dfheiblk,null,eibatt_OF_dfheiblk,0x00000000);
            eibatt_OF_dfheiblk.declare(_memory,67,1,"eibatt",null,null,dfheiblk,null,eibeoc_OF_dfheiblk,0x00000000);
            eibeoc_OF_dfheiblk.declare(_memory,68,1,"eibeoc",null,null,dfheiblk,null,eibfmh_OF_dfheiblk,0x00000000);
            eibfmh_OF_dfheiblk.declare(_memory,69,1,"eibfmh",null,null,dfheiblk,null,eibcompl_OF_dfheiblk,0x00000000);
            eibcompl_OF_dfheiblk.declare(_memory,70,1,"eibcompl",null,null,dfheiblk,null,eibsig_OF_dfheiblk,0x00000000);
            eibsig_OF_dfheiblk.declare(_memory,71,1,"eibsig",null,null,dfheiblk,null,eibconf_OF_dfheiblk,0x00000000);
            eibconf_OF_dfheiblk.declare(_memory,72,1,"eibconf",null,null,dfheiblk,null,eiberr_OF_dfheiblk,0x00000000);
            eiberr_OF_dfheiblk.declare(_memory,73,1,"eiberr",null,null,dfheiblk,null,eiberrcd_OF_dfheiblk,0x00000000);
            eiberrcd_OF_dfheiblk.declare(_memory,74,4,"eiberrcd",null,null,dfheiblk,null,eibsynrb_OF_dfheiblk,0x00000000);
            eibsynrb_OF_dfheiblk.declare(_memory,78,1,"eibsynrb",null,null,dfheiblk,null,eibnodat_OF_dfheiblk,0x00000000);
            eibnodat_OF_dfheiblk.declare(_memory,79,1,"eibnodat",null,null,dfheiblk,null,eibresp_OF_dfheiblk,0x00000000);
            eibresp_OF_dfheiblk.declare(_memory,80,4,"eibresp",8,null,dfheiblk,null,eibresp2_OF_dfheiblk,0x04400000);
            eibresp2_OF_dfheiblk.declare(_memory,84,4,"eibresp2",8,null,dfheiblk,null,eibrldbk_OF_dfheiblk,0x04400000);
            eibrldbk_OF_dfheiblk.declare(_memory,88,1,"eibrldbk",null,null,dfheiblk,null,eibsend_OF_dfheiblk,0x00000000);
            eibsend_OF_dfheiblk.declare(_memory,89,1,"eibsend",null,null,dfheiblk,null,eiberrmsg_OF_dfheiblk,0x00000000);
            eiberrmsg_OF_dfheiblk.declare(_memory,90,2013,"eiberrmsg",null,null,dfheiblk,null,dibver_OF_dfheiblk,0x00000000);
            dibver_OF_dfheiblk.declare(_memory,2103,2,"dibver",null,null,dfheiblk,null,dibstat_OF_dfheiblk,0x00000000);
            dibstat_OF_dfheiblk.declare(_memory,2105,2,"dibstat",null,null,dfheiblk,null,dibsegm_OF_dfheiblk,0x00000000);
            dibsegm_OF_dfheiblk.declare(_memory,2107,8,"dibsegm",null,null,dfheiblk,null,dibseglv_OF_dfheiblk,0x00000000);
            dibseglv_OF_dfheiblk.declare(_memory,2115,2,"dibseglv",null,null,dfheiblk,null,dibkfbl_OF_dfheiblk,0x00000000);
            dibkfbl_OF_dfheiblk.declare(_memory,2117,2,"dibkfbl",4,null,dfheiblk,null,dibdbdnm_OF_dfheiblk,0x04400000);
            dibdbdnm_OF_dfheiblk.declare(_memory,2119,8,"dibdbdnm",null,null,dfheiblk,null,dibdborg_OF_dfheiblk,0x00000000);
            dibdborg_OF_dfheiblk.declare(_memory,2127,8,"dibdborg",null,null,dfheiblk,null,null,0x00000000);
            dfheiblk.declare(_memory,4,2131,"dfheiblk",null,null,null,eibtime_OF_dfheiblk,null,0x00000000);
            Variable.setUnusedVarsSizes(lnk.dfhcommarea);
            
            
        } // end declarations
        
        public  Variable dfhcommarea;
        public  PackedDecimalI eibtime_OF_dfheiblk;
        public  PackedDecimalI eibdate_OF_dfheiblk;
        public  Variable eibtrnid_OF_dfheiblk;
        public  PackedDecimalI eibtaskn_OF_dfheiblk;
        public  Variable eibtrmid_OF_dfheiblk;
        public  Binary dfheigdi_OF_dfheiblk;
        public  Binary eibcposn_OF_dfheiblk;
        public  Binary eibcalen_OF_dfheiblk;
        public  Variable eibaid_OF_dfheiblk;
        public  Variable eibfn_OF_dfheiblk;
        public  Variable eibrcode_OF_dfheiblk;
        public  Variable eibds_OF_dfheiblk;
        public  Variable eibreqid_OF_dfheiblk;
        public  Variable eibrsrce_OF_dfheiblk;
        public  Variable eibsync_OF_dfheiblk;
        public  Variable eibfree_OF_dfheiblk;
        public  Variable eibrecv_OF_dfheiblk;
        public  Variable eibfil01_OF_dfheiblk;
        public  Variable eibatt_OF_dfheiblk;
        public  Variable eibeoc_OF_dfheiblk;
        public  Variable eibfmh_OF_dfheiblk;
        public  Variable eibcompl_OF_dfheiblk;
        public  Variable eibsig_OF_dfheiblk;
        public  Variable eibconf_OF_dfheiblk;
        public  Variable eiberr_OF_dfheiblk;
        public  Variable eiberrcd_OF_dfheiblk;
        public  Variable eibsynrb_OF_dfheiblk;
        public  Variable eibnodat_OF_dfheiblk;
        public  Binary eibresp_OF_dfheiblk;
        public  Binary eibresp2_OF_dfheiblk;
        public  Variable eibrldbk_OF_dfheiblk;
        public  Variable eibsend_OF_dfheiblk;
        public  Variable eiberrmsg_OF_dfheiblk;
        public  Variable dibver_OF_dfheiblk;
        public  Variable dibstat_OF_dfheiblk;
        public  Variable dibsegm_OF_dfheiblk;
        public  Variable dibseglv_OF_dfheiblk;
        public  Binary dibkfbl_OF_dfheiblk;
        public  Variable dibdbdnm_OF_dfheiblk;
        public  Variable dibdborg_OF_dfheiblk;
        public  Variable dfheiblk;
        
        
        protected final Memory _memory=new UnbufferedMemory(2135,"onldemo.Lnk");
        
    } // end Lnk
    public transient Lnk lnk=null; // instance accessor for data section
    
    public java.lang.Object call(Context _passContext)
    {
        setup(_passContext);
        return callGiving();
    }
    
    public java.lang.Object call(Context _passContext,parameterList _param)
    {
        setup(_passContext);
        return callGiving(_param);
    }
    
    public void call()
    {
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        run(-1,0); // parameters expected, leave at defaults
    } // end call
    
    public void call(parameterList _param)
    {
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        try
        {
            lnk.dfheiblk.ipc_init(_param,0);
            lnk.dfhcommarea.ipc_init(_param,1);
            Context _prevContext=Variable.setCurrContext(_context);
            Variable.setNarg(_param);
            _callArrayInitializer();
            Variable[] _variables=new Variable[]
            {
                lnk.dfheiblk,lnk.dfhcommarea
            };
            Variable.ipc_ready(_variables);
            this.run(-1,0);
            Variable.ipc_finish(_variables,_param,_programId);
            _callArrayFinalizer();
            Variable.ipc_final(_variables,_param);
            Variable.setCurrContext(_prevContext);
        }
        catch(ArrayIndexOutOfBoundsException _linkingExceptionOuter)
        {
            CobolException.runtimeError("Linking Error in Initiation of "+_programId,_linkingExceptionOuter);
        }
    }
    
    public java.lang.Object callGiving()
    {
        call();
        return _context.getReturnCode();
    }
    
    public java.lang.Object call(boolean[] _byRef,java.lang.Object[] _param)
    {
        return callGiving(new parameterList(_byRef,_param));
    }
    
    public java.lang.Object callGiving(parameterList _param)
    {
        call(_param);
        return _context.getReturnCode();
    }
    
    static public final int _defaultsection_0_Label=2;
    static public final int _main_para_OF_defaultsection_0_Label=1;
    
    public final int main_para_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_comm.move(lnk.dfhcommarea.ref(_NCONSTANT_0.toInt(),lnk.eibcalen_OF_dfheiblk.toInt()));
        wrk.showemi.move(Variable.LOW_VALUES);
        if((lnk.eibcalen_OF_dfheiblk.compare(_NCONSTANT_1)==0))
        {
            wrk.ws_comm.move("2");
            perform(_send_initial_map_OF_defaultsection_0_Label,_send_initial_map_exit_OF_defaultsection_0_Label);
            perform(_return_para_OF_defaultsection_0_Label,_return_exit_OF_defaultsection_0_Label);
        }
        else
        {
            perform(_receive_para_OF_defaultsection_0_Label,_receive_para_exit_OF_defaultsection_0_Label);
            perform(_key_para_OF_defaultsection_0_Label,_key_para_exit_OF_defaultsection_0_Label);
            perform(_return_para_OF_defaultsection_0_Label,_return_exit_OF_defaultsection_0_Label);
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _send_initial_map_OF_defaultsection_0_Label=4;
    
    public final int send_initial_map_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x4a02);
            final Object[] _transactionParameters=new Object[] {wrk.ws_abstime,null,lnk.eibdate_OF_dfheiblk,lnk.eibtime_OF_dfheiblk};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("ASKTIME ABSTIME",_TAGCONSTANT_0,_transactionParameters);
            _dateTime.askTimeAbstime(_transenv,_TAGCONSTANT_0,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("ASKTIME ABSTIME",_TAGCONSTANT_0,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("ASKTIME ABSTIME",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x4a02));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("ASKTIME ABSTIME",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x4a04);
            final Object[] _transactionParameters=new Object[] {wrk.ws_abstime,"/",null,wrk.dateo_OF_showemo,wrk.timeo_OF_showemo,":"};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("FORMATTIME",_TAGCONSTANT_1,_transactionParameters);
            _dateTime.formatTime(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("FORMATTIME",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("FORMATTIME",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x4a04));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("FORMATTIME",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1804);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,null,null,wrk.showemo,"SHOWEM","ONLDEMO",null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND MAP",_TAGCONSTANT_2,_transactionParameters);
            _basicMappingSupport.sendMap(_transenv,_TAGCONSTANT_2,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND MAP",_TAGCONSTANT_2,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND MAP",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1804));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND MAP",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _send_initial_map_exit_OF_defaultsection_0_Label=6;
    
    public final int send_initial_map_exit_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        return 0; // fall through
    } // End Paragraph
    
    static public final int _send_map_OF_defaultsection_0_Label=19;
    
    public final int send_map_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x4a02);
            final Object[] _transactionParameters=new Object[] {wrk.ws_abstime,null,lnk.eibdate_OF_dfheiblk,lnk.eibtime_OF_dfheiblk};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("ASKTIME ABSTIME",_TAGCONSTANT_0,_transactionParameters);
            _dateTime.askTimeAbstime(_transenv,_TAGCONSTANT_0,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("ASKTIME ABSTIME",_TAGCONSTANT_0,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("ASKTIME ABSTIME",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x4a02));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("ASKTIME ABSTIME",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x4a04);
            final Object[] _transactionParameters=new Object[] {wrk.ws_abstime,"/",null,wrk.dateo_OF_showemo,wrk.timeo_OF_showemo,":"};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("FORMATTIME",_TAGCONSTANT_1,_transactionParameters);
            _dateTime.formatTime(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("FORMATTIME",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("FORMATTIME",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x4a04));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("FORMATTIME",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1804);
            final Object[] _transactionParameters=new Object[] {null,lnk.eibrsrce_OF_dfheiblk,null,wrk.showemo,"SHOWEM","ONLDEMO",null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND MAP",_TAGCONSTANT_3,_transactionParameters);
            _basicMappingSupport.sendMap(_transenv,_TAGCONSTANT_3,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND MAP",_TAGCONSTANT_3,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND MAP",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1804));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND MAP",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _send_map_exit_OF_defaultsection_0_Label=20;
    
    public final int send_map_exit_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        return 0; // fall through
    } // End Paragraph
    
    static public final int _return_para_OF_defaultsection_0_Label=8;
    
    public final int return_para_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x0e08);
            final Object[] _transactionParameters=new Object[] {wrk.ws_comm,lnk.eibrsrce_OF_dfheiblk,null,"ONLD"};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("RETURN",_TAGCONSTANT_4,_transactionParameters);
            if(_programControl!=null) _programControl.returnControl(_transenv,_TAGCONSTANT_4,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("RETURN",_TAGCONSTANT_4,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            if(true) throw new UnwindException(UnwindException.RETURN);
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0e08));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _return_exit_OF_defaultsection_0_Label=10;
    
    public final int return_exit_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        return 0; // fall through
    } // End Paragraph
    
    static public final int _receive_para_OF_defaultsection_0_Label=12;
    
    public final int receive_para_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        wrk.showemi.move(Variable.LOW_VALUES);
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1802);
            final Object[] _transactionParameters=new Object[] {lnk.eibaid_OF_dfheiblk,lnk.eibcompl_OF_dfheiblk,lnk.eibcposn_OF_dfheiblk,lnk.eibrsrce_OF_dfheiblk,wrk.showemi,"SHOWEM","ONLDEMO",null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("RECEIVE MAP",_TAGCONSTANT_5,_transactionParameters);
            _basicMappingSupport.receiveMap(_transenv,_TAGCONSTANT_5,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("RECEIVE MAP",_TAGCONSTANT_5,_transactionParameters);
            wrk.ws_resp.move(0);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RECEIVE MAP",_transactionException);
            wrk.ws_resp.move(_transactionException.getResponseCode());
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1802));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RECEIVE MAP",_transactionGeneralException);
            wrk.ws_resp.move(-1);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _receive_para_exit_OF_defaultsection_0_Label=14;
    
    public final int receive_para_exit_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        return 0; // fall through
    } // End Paragraph
    
    static public final int _key_para_OF_defaultsection_0_Label=16;
    
    public final int key_para_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        if(((lnk.eibaid_OF_dfheiblk.compare(wrk.dfhclear_OF_dfhaid)==0)))
        {
            wrk.cnumo_OF_showemo.moveSpaces();
            wrk.nameo_OF_showemo.moveSpaces();
            wrk.invamto_OF_showemo.moveSpaces();
            wrk.messo_OF_showemo.move("PRESS ACTION KEY PF5 OR PF3");
            perform(_send_initial_map_OF_defaultsection_0_Label,_send_initial_map_exit_OF_defaultsection_0_Label);
        } else if(((lnk.eibaid_OF_dfheiblk.compare(wrk.dfhenter_OF_dfhaid)==0)))
        {
            perform(_select_para_OF_defaultsection_0_Label,_select_para_exit_OF_defaultsection_0_Label);
            perform(_send_map_OF_defaultsection_0_Label,_send_map_exit_OF_defaultsection_0_Label);
        } else if(((lnk.eibaid_OF_dfheiblk.compare(wrk.dfhpf5_OF_dfhaid)==0)))
        {
            perform(_update_para_OF_defaultsection_0_Label,_update_para_exit_OF_defaultsection_0_Label);
            perform(_send_map_OF_defaultsection_0_Label,_send_map_exit_OF_defaultsection_0_Label);
        } else { // OTHER
            wrk.messo_OF_showemo.move("PRESS ACTION KEY PF5 OR PF3");
            perform(_send_map_OF_defaultsection_0_Label,_send_map_exit_OF_defaultsection_0_Label);
        } // end EVALUATE
        return 0; // fall through
    } // End Paragraph
    
    static public final int _key_para_exit_OF_defaultsection_0_Label=18;
    
    public final int key_para_exit_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        return 0; // fall through
    } // End Paragraph
    
    static public final int _select_para_OF_defaultsection_0_Label=22;
    
    public final int select_para_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        wrk.cust_num_OF_custtax_table.move(wrk.cnumi_OF_showemi);
        SqlCursor _sqlCursor=null;
        try
        {
            _sqlCursor=_context.getSqlContext().getCursors().allocate("default");
            _sqlCursor.declare(_getConnection(null).prepareStatement("SELECT CUSTNO,CUST_NAME,CUST_INVOICE_AMT FROM CUSTTAX WHERE CUSTNO = ?")); // ps1
            _sqlCursor.setObject(wrk.cust_num_OF_custtax_table,null);
            if(!_sqlCursor.open()) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Cannot open an already opened cursor","24000");
            java.sql.ResultSet _resultSet=_sqlCursor.getResultSet();
            if(_resultSet.next())
            {
                int _rightTruncation=0;
                _rightTruncation|=wrk.cust_num_OF_custtax_table.setSqlTrimObject(0,(_resultSet.getObject(1)),null,true,false);
                _rightTruncation|=wrk.cust_name_OF_custtax_table.setSqlTrimObject(96,(_resultSet.getObject(2)),null,true,false);
                _rightTruncation|=wrk.cust_invoice_amt_OF_custtax_table.setSqlTrimObject(0,(_resultSet.getObject(3)),null,true,false);
                
                if(_resultSet.next()) throw new java.sql.SQLException("Elastic COBOL SQL: 21000: Unexpected next row in ResultSet","21000",-811); // verify no next row
                if(_rightTruncation>=SqlContext.CAN_STORE_ERROR) throw new java.sql.SQLException("Elastic COBOL SQL: 22001.C6: Data Truncation","22001");
                if(_rightTruncation>=SqlContext.CAN_STORE_WARNING) throw new java.sql.SQLException("Elastic COBOL SQL: 01004.C6: Data Truncation","01004");
            }
            else
            {
                throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C5: No next row in resultset","02000");
            }
            _sqlClear();
            _sqlWarningHandler(_sqlCursor.getSQLWarning(),-1,-1,-1);
        }
        catch(java.sql.SQLException _sqlException)
        {
            _sqlExceptionHandler(_sqlException,-1,-1,-1);
        }
        catch(Exception _otherException)
        {
            _sqlExceptionHandler(_otherException,-1,-1,-1);
        }
        finally
        {
            try
            {
                if(!_sqlCursor.close()) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Cannot close an already closed cursor","24000");
            }
            catch(Exception _statementCloseException)
            {
                ;
            }
        }
        if((wrk.sqlcode_OF_sqlca.compare(_NCONSTANT_1)==0))
        {
            wrk.messo_OF_showemo.move(" SELECT SUCCESSFUL");
            wrk.cnumo_OF_showemo.move(wrk.cust_num_OF_custtax_table);
            wrk.nameo_OF_showemo.move(wrk.cust_name_OF_custtax_table);
            wrk.invamto_OF_showemo.move(wrk.cust_invoice_amt_OF_custtax_table);
        }
        else
        {
            wrk.messo_OF_showemo.move(wrk.sqlerrmc_OF_sqlerrm_OF_sqlca);
            boolean _sizeError=false;
            _sizeError=!_context.system().display(_context,wrk.sqlcode_OF_sqlca.toText());
            _sizeError=!_context.system().display(_context,wrk.sqlerrmc_OF_sqlerrm_OF_sqlca.toText());
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _select_para_exit_OF_defaultsection_0_Label=24;
    
    public final int select_para_exit_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        return 0; // fall through
    } // End Paragraph
    
    static public final int _update_para_OF_defaultsection_0_Label=26;
    
    public final int update_para_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        wrk.cust_num_OF_custtax_table.move(wrk.cnumi_OF_showemi);
        wrk.cust_invoice_amt_OF_custtax_table.move(wrk.invamti_OF_showemi);
        java.sql.PreparedStatement _sqlPreparedStatement=null;
        try
        {
            _sqlPreparedStatement=_getConnection(null).prepareStatement("UPDATE CUSTTAX SET CUST_INVOICE_AMT = ? WHERE CUSTNO = ?"); // ps4
            Object _sqlObject=null;
            _sqlObject=wrk.cust_invoice_amt_OF_custtax_table.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(1,_sqlObject);
            _sqlObject=wrk.cust_num_OF_custtax_table.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(2,_sqlObject);
            int _rowCount=_sqlPreparedStatement.executeUpdate();
            wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
            if(_rowCount==0)
                throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
            _sqlClear();
            _sqlWarningHandler(_sqlPreparedStatement.getWarnings(),-1,-1,-1);
        }
        catch(java.sql.SQLException _sqlException)
        {
            _sqlExceptionHandler(_sqlException,-1,-1,-1);
        }
        catch(Exception _otherException)
        {
            _sqlExceptionHandler(_otherException,-1,-1,-1);
        }
        finally
        {
            try
            {
                _sqlPreparedStatement.close();
            }
            catch(Exception _statementCloseException)
            {
                ;
            }
        }
        if((wrk.sqlcode_OF_sqlca.compare(_NCONSTANT_1)==0))
        {
            wrk.messo_OF_showemo.move(" UPDATE SUCCESSFUL");
        }
        else
        {
            wrk.messo_OF_showemo.move(wrk.sqlerrmc_OF_sqlerrm_OF_sqlca);
            boolean _sizeError=false;
            _sizeError=!_context.system().display(_context,wrk.sqlcode_OF_sqlca.toText());
            _sizeError=!_context.system().display(_context,wrk.sqlerrmc_OF_sqlerrm_OF_sqlca.toText());
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _update_para_exit_OF_defaultsection_0_Label=28;
    
    public final int update_para_exit_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        return 0; // fall through
    } // End Paragraph
    
    static public final int _exit_para_OF_defaultsection_0_Label=29;
    
    public final int exit_para_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x0e08);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("RETURN",_TAGCONSTANT_6,_transactionParameters);
            if(_programControl!=null) _programControl.returnControl(_transenv,_TAGCONSTANT_6,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("RETURN",_TAGCONSTANT_6,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            if(true) throw new UnwindException(UnwindException.RETURN);
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0e08));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    public int defaultsection_0()
    {
        perform(2,2);
        return 0;
    }
    
    
    /**
     * Dfheiblk property (length 2131)
     * @return property value of Dfheiblk
     */
    public String getDfheiblk()
    {
        if(_context==null) setup(null);
        return lnk.dfheiblk.toText();
    }
    
    /**
     * Dfheiblk property (length 2131)
     * @return property value of Dfheiblk
     */
    public String getDfheiblkAsString()
    {
        if(_context==null) setup(null);
        return lnk.dfheiblk.toText();
    }
    
    /**
     * Dfhcommarea property (length 4)
     * @return property value of Dfhcommarea
     */
    public String getDfhcommarea()
    {
        if(_context==null) setup(null);
        return lnk.dfhcommarea.toText();
    }
    
    /**
     * Dfhcommarea property (length 4)
     * @return property value of Dfhcommarea
     */
    public String getDfhcommareaAsString()
    {
        if(_context==null) setup(null);
        return lnk.dfhcommarea.toText();
    }
    
    /**
     * Dfheiblk property (length 2131)
     * @param paramValue parameter property value of Dfheiblk
     */
    public void setDfheiblk(String _paramValue)
    {
        if(_context==null) setup(null);
        lnk.eibtime_OF_dfheiblk.move(_paramValue.length());
        lnk.eibdate_OF_dfheiblk.moveMax(_paramValue);
    }
    
    /**
     * Dfhcommarea property (length 4)
     * @param paramValue parameter property value of Dfhcommarea
     */
    public void setDfhcommarea(String _paramValue)
    {
        if(_context==null) setup(null);
        lnk.dfhcommarea.move(_paramValue);
    }
    public int getElasticCobolMajorVersion() { return 17; }
    public int getElasticCobolMinorVersion() { return 8; }
    public int getElasticCobolSubminorVersion() { return 24; }
    public String getElasticCobolBuildTimestamp() { return "(Build Aug 29 2017 11:40:47)"; }
    
    public void link(com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _transactionEnvironment,com.heirloomcomputing.etp.transaction.link.CommArea _commArea,com.heirloomcomputing.etp.transaction.bridge.BridgeFacility _facility,com.heirloomcomputing.etp.transaction.link.Environment _environment)
    {
        _setTransactionEnvironment(_transactionEnvironment);
        // Setup basic program functionality
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        com.heirloomcomputing.etp.transaction.link.CommArea _previousCommArea=_transactionEnvironment.getCommArea();
        _transactionEnvironment.setCommArea(_commArea);
        if(_commArea!=null)
        {
            lnk.dfhcommarea.setPointerToBytes(_commArea.toByteArrayNoCopy());
        }
        else
        {
            lnk.dfhcommarea.setPointerToBytes((byte[])null);
        }
        lnk.dfheiblk.setPointerToBytes(_transactionEnvironment.getEIB());
        java.util.Calendar _cal=_transactionEnvironment.getTaskStartTime();
        if(_cal!=null)
        {
            int _cal_c=_cal.get(java.util.Calendar.YEAR)/100-19;
            int _cal_y=_cal.get(java.util.Calendar.YEAR)%100;
            int _cal_d=_cal.get(java.util.Calendar.DAY_OF_YEAR);
            lnk.eibdate_OF_dfheiblk.move(_cal_c*100000+_cal_y*1000+_cal_d);
            int _cal_h=_cal.get(java.util.Calendar.HOUR_OF_DAY);
            int _cal_m=_cal.get(java.util.Calendar.MINUTE);
            int _cal_s=_cal.get(java.util.Calendar.SECOND);
            lnk.eibtime_OF_dfheiblk.move(_cal_h*10000+_cal_m*100+_cal_s);
        }
        lnk.eibtaskn_OF_dfheiblk.move(_transactionEnvironment.getTransactionNumber());
        lnk.eibtrmid_OF_dfheiblk.move(_transactionEnvironment.getTerminalId());
        lnk.eibtrnid_OF_dfheiblk.move(_transactionEnvironment.getTransactionId());
        lnk.eibcposn_OF_dfheiblk.move(_transactionEnvironment.getCursorPosition());
        lnk.eibaid_OF_dfheiblk.move(_transactionEnvironment.getAID());
        if(_commArea!=null)
        {
            lnk.eibcalen_OF_dfheiblk.move(_commArea.getLength());
        }
        else
        {
            lnk.eibcalen_OF_dfheiblk.move(0);
        }
        _callArrayInitializer();
        // Call program
        try
        {
            this.run(-1,0);
        }
        finally
        {
            _transactionEnvironment.setCommArea(_previousCommArea);
        }
        _callArrayFinalizer();
    }
    
    
    public void run() // Runnable
    {
        try
        {
            run(-1,-1);
        }
        catch(UnwindException _unwindException)
        {
            return; // completely unwound
        }
        catch(Throwable _anyException)
        {
            CobolException.runtimeError(_context,_anyException);
        }
    }
    
    public void run(int _thread,int _entry) // ICobolInterface
    {
        if(_context==null)
        {
            if(_entry<0) _entry=0;
            setup(null);
        }
        else
        {
            if(_entry<0) _entry=_context.getEntryParagraph();
            _context.setEntryParagraph(0);
        }
        try
        {
            perform(_entry,-1);
            return;
        }
        catch(ExitProgramException _exitProgramException)
        {
            return; // goback
        }
    }
    
    public String redirectCall()
    {
        return null;
    }
    
    static public void main(String _args[]) // application entry
    {
        onldemo _programInstance=null;
        try
        {
            _programInstance = new onldemo();
            Context.initializeApplication(_programInstance,_args);
            if(_args!=null && _args.length>0)
            {
                _programInstance.setup(null);
                if(_args.length>0) _programInstance.setDfheiblk(_args[0]);
                if(_args.length>1) _programInstance.setDfhcommarea(_args[1]);
            }
            _programInstance.run(-1,-1);
            _programInstance._transenv.end();
            _programInstance._context.exit();
        }
        catch(Throwable _throwableException)
        {
            if (_programInstance != null && _programInstance._context != null && _programInstance._context.getReturnInt() == 0) 
            {
                   _programInstance._context.setReturnCode(1);
                   Context.appReturnCode = _programInstance._context.getReturnInt();
            }
            if(_programInstance!=null&&_programInstance._transenv!=null) _programInstance._transenv.abend(_throwableException,CobolException.isDumpRequested(_throwableException),CobolException.getDumpMessage(_throwableException));
        }
        Context.applicationExit();
    }
    
    public transient Context _context;
    
    public Context setup(Context _passContext)
    {
        _context=_passContext;
        if(_context==null) // create fresh context
        {
            _context=new Context(_passContext,_programId,this);
        }
        else
            _context.setupContext(_passContext,_programId,this);
        wrk=(Wrk)_context.getWrk();
        lnk=(Lnk)_context.getLnk();
        boolean doInitWrk=false;
        boolean doDeclareWrk=false;
        boolean doInitLnk=false;
        boolean doDeclareLnk=false;
        if(wrk==null)
        {
            doInitWrk=true;
            doDeclareWrk=true;
            _context.setWrk(wrk=new Wrk());
        }
        if(lnk==null)
        {
            doInitLnk=true;
            doDeclareLnk=true;
            _context.setLnk(lnk=new Lnk());
        }
        if(doInitWrk) wrk.doInitializations();
        if(doInitLnk) lnk.doInitializations();
        
        
        if(doDeclareWrk) wrk.doDeclarations();
        if(doDeclareLnk) lnk.doDeclarations();
        // Set the transaction environment from Context
        if(_passContext!=null) _setTransactionEnvironment((com.heirloomcomputing.etp.transaction.api.TransactionEnvironment)_passContext.getTransactionEnvironment());
        return _context;
    }
    com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _transenv;
    com.heirloomcomputing.etp.transaction.api.DateTime _dateTime=null;
    com.heirloomcomputing.etp.transaction.api.BasicMappingSupport _basicMappingSupport=null;
    com.heirloomcomputing.etp.transaction.api.ProgramControl _programControl=null;
    
    public void _setTransactionEnvironment(com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _environment)
    {
        if(_environment==_transenv || _environment==null) return;
        if(_context==null) setup(null);
        _transenv=_environment;
        _dateTime=_transenv.obtainServiceDateTime(null);
        _basicMappingSupport=_transenv.obtainServiceBasicMappingSupport(null);
        _programControl=_transenv.obtainServiceProgramControl(null);
        _context.setTransactionEnvironment(_transenv);
    }
    
    
    public void cancel() // close open files, chance for custom action
    {
    } // end cancel
    
    
    public void close() // close any resources that might have been left open
    {
        if(_context.getExistingSqlContext() != null)
        {
            _context.getExistingSqlContext().getCursors().closeAll();
        }
    } // end close
    
    public void perform(int _procedure) // ICobolInterface
    {
        perform(_procedure,_procedure); // only procedure
    }
    
    public void perform(int _begin,int _end) // ICobolInterface
    {
        _debug_loadWatchpoints(_context.getProgramName());
        try
        {
            for(;;) // forever until stopped
            {
                switch(_begin)
                {
                    
                    case 0: // Initial Paragraph
                    _begin=2; break; // starting paragraph
                    case 2: main_para_OF_defaultsection_0();
                    
                    case 4: if( (_begin=send_initial_map_OF_defaultsection_0()) != 0) break;
                    
                    if(_end==_send_initial_map_exit_OF_defaultsection_0_Label) return  ;
                    
                    case 19: if( (_begin=send_map_OF_defaultsection_0()) != 0) break;
                    
                    if(_end==_send_map_exit_OF_defaultsection_0_Label) return  ;
                    
                    case 8: if( (_begin=return_para_OF_defaultsection_0()) != 0) break;
                    
                    if(_end==_return_exit_OF_defaultsection_0_Label) return  ;
                    
                    case 12: if( (_begin=receive_para_OF_defaultsection_0()) != 0) break;
                    
                    if(_end==_receive_para_exit_OF_defaultsection_0_Label) return  ;
                    
                    case 16: key_para_OF_defaultsection_0();
                    
                    if(_end==_key_para_exit_OF_defaultsection_0_Label) return  ;
                    
                    case 22: select_para_OF_defaultsection_0();
                    
                    if(_end==_select_para_exit_OF_defaultsection_0_Label) return  ;
                    
                    case 26: update_para_OF_defaultsection_0();
                    
                    if(_end==_update_para_exit_OF_defaultsection_0_Label) return  ;
                    
                    if( (_begin=exit_para_OF_defaultsection_0()) != 0) break;
                    
                    if(_end==2) { return   ; } // end SECTION -=-=-=-=-=-=-
                    
                    default: throw ExitProgramException.EXIT_DEFAULT;
                } // end switch
            } // end forever
        }
        catch(UnwindException _unwindException)
        {
            perform(_unwindException.unwind(_context,this),_end);
            return;
        }
        catch(ExitProgramException _exitProgramException)
        {
            throw _exitProgramException;
        }
        catch(Throwable _runtimeException)
        {
            int _resumeAt=_exceptionHandler(_runtimeException,false);
            if(_resumeAt>0) perform(_resumeAt,_resumeAt);
            else throw ExitProgramException.EXIT_RESUME;
        }
    } // end perform(int,int)
    
    public int _exceptionHandler(Throwable _exception,boolean _nextStatementAvailable)
    {
        $X$_exceptionInfo = String.valueOf(_exception.getStackTrace()[0].getLineNumber());
        // if debugging in Eclipse pause 
        CobolExceptionPause cbp = new CobolExceptionPause();
        if(_exception instanceof RuntimeException) throw (RuntimeException)_exception;
        if(_exception instanceof Error) throw (Error)_exception;
        throw new com.heirloomcomputing.ecs.exception.EcObject(_exception);
    }
    public void _sqlClear()
    {
        wrk.sqlcode_OF_sqlca.move(0);
        wrk.sqlstate_OF_sqlext_OF_sqlca.move("00000"); // successful execution
        wrk.sqlwarn_OF_sqlca.moveSpaces(); // no warnings
        wrk.sqlerrmc_OF_sqlerrm_OF_sqlca.moveSpaces();
        wrk.sqlerrml_OF_sqlerrm_OF_sqlca.moveZeroes();
    }
    
    public java.sql.Connection _getConnection(String _name) throws java.sql.SQLException
    {
        java.sql.Connection _connection=_transenv.getSqlConnection(_name);
        if(_connection!=null)
        {
            _context.getSqlContext().setConnection(_name,_connection);
        }
        else
        {
            _connection=_context.getSqlContext().getConnection(_name);
            if(_connection!=null)
            {
                _transenv.setSqlConnection(_name,_connection);
            }
        }
        return _connection;
    }
    
    public void _setConnection(Object _reference) throws java.sql.SQLException
    {
        if (_reference instanceof String)
        {
            _transenv.setSqlConnection(_getConnection((String) _reference));
        }
        else
        {
            java.sql.Connection _connection=_transenv.setSqlConnection(_reference);
            _context.getSqlContext().setConnection(_connection);
        }
    }
    
    public int _sqlVendorCode(int _vendorCode,int _desiredCode)
    {
        switch(_desiredCode)
        {
            case  -1: if(_vendorCode>0) return -_vendorCode;
                      if(_vendorCode==0) return -1;
                      return _vendorCode;
            case   0: return 0;
            case 100: return 100;
        }
        return _vendorCode;
    }
    
    public int _sqlWarningHandler(java.sql.SQLWarning _sqlException,int _notFoundLabel,int _warningLabel,int _errorLabel)
    {
        if(_sqlException==null) return -1;
        int _errorCode=_sqlException.getErrorCode();
        String _sqlResult=SqlContext.obtainSqlState(_sqlException);
        wrk.sqlstate_OF_sqlext_OF_sqlca.move(_sqlResult);
        if(_sqlResult.startsWith("01"))
        {
            wrk.sqlwarn0_OF_sqlwarn_OF_sqlca.move("W");
            if(_warningLabel!=-1) return _warningLabel; // WHENEVER SQLWARNING HANDLER
        }
        else if(_sqlResult.startsWith("02"))
        {
            if(_notFoundLabel!=-1) return _notFoundLabel; // WHENEVER NOT FOUND HANDLER
        }
        return -1;
    } // end _sqlWarningHandler
    
    public int _sqlExceptionHandler(Throwable _otherException,int _notFoundLabel,int _warningLabel,int _errorLabel)
    {
        String _sqlExceptionText=_otherException.getMessage();
        if(_sqlExceptionText==null) _sqlExceptionText=_otherException.toString();
        wrk.sqlerrmc_OF_sqlerrm_OF_sqlca.move(_sqlExceptionText);
        wrk.sqlerrml_OF_sqlerrm_OF_sqlca.move(_sqlExceptionText.length());
        String _sqlResult=null;
        int _errorCode=-1;
        wrk.sqlstate_OF_sqlext_OF_sqlca.move("01000");
        _sqlResult="01";
        if(_sqlResult.startsWith("01"))
        {
            wrk.sqlwarn0_OF_sqlwarn_OF_sqlca.move("W");
            wrk.sqlcode_OF_sqlca.move(_sqlVendorCode(_errorCode,100));
            if(_warningLabel!=-1) return _warningLabel; // WHENEVER SQLWARNING HANDLER
        }
        return -1;
    }
    
    public int _sqlExceptionHandler(java.sql.SQLException _sqlException,int _notFoundLabel,int _warningLabel,int _errorLabel)
    {
        String _sqlExceptionText=_sqlException.getMessage();
        if(_sqlExceptionText==null) _sqlExceptionText=_sqlException.toString();
        wrk.sqlerrmc_OF_sqlerrm_OF_sqlca.move(_sqlExceptionText);
        wrk.sqlerrml_OF_sqlerrm_OF_sqlca.move(_sqlExceptionText.length());
        String _sqlResult=null;
        int _errorCode=0;
        if(_sqlException!=null)
        {
            _errorCode=_sqlException.getErrorCode();
            _sqlResult=SqlContext.obtainSqlState(_sqlException);
            wrk.sqlstate_OF_sqlext_OF_sqlca.move(_sqlResult);
        }
        else
        {
            _errorCode=-1;
            wrk.sqlstate_OF_sqlext_OF_sqlca.move("01000");
            _sqlResult="01";
        }
        if(_sqlResult.startsWith("01"))
        {
            wrk.sqlwarn0_OF_sqlwarn_OF_sqlca.move("W");
            wrk.sqlcode_OF_sqlca.move(_sqlVendorCode(_errorCode,100));
            if(_warningLabel!=-1) return _warningLabel; // WHENEVER SQLWARNING HANDLER
        }
        else if(_sqlResult.startsWith("02"))
        {
            wrk.sqlcode_OF_sqlca.move(_sqlVendorCode(_errorCode,100));
            if(_notFoundLabel!=-1) return _notFoundLabel; // WHENEVER NOT FOUND HANDLER
        }
        else if(!_sqlResult.startsWith("00"))
        {
            wrk.sqlcode_OF_sqlca.move(_sqlVendorCode(_errorCode,-1));
            if(_errorLabel!=-1) return _errorLabel; // WHENEVER ERROR HANDLER
        } // end if
        return -1;
    } // end _sqlExceptionHandler
    
    
    static public final String _localNameConverter[][]=null;
    static public final Numeric _NCONSTANT_0=(Numeric)(new Numeric("1"));
    static public final Numeric _NCONSTANT_1=(Numeric)(new Numeric("0"));
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_0=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"ABSTIME","ASKTIME","EIBDATE","EIBTIME"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_1=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"ABSTIME","DATESEP","FORMATTIME","MMDDYYYY","TIME","TIMESEP"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_2=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBRSRCE","ERASE","FREEKB","FROM","MAP","MAPSET","SEND"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_3=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"DATAONLY","EIBRSRCE","FREEKB","FROM","MAP","MAPSET","SEND"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_4=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"COMMAREA","EIBRSRCE","RETURN","TRANSID"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_5=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBAID","EIBCOMPL","EIBCPOSN","EIBRSRCE","INTO","MAP","MAPSET","RECEIVE"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_6=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBRSRCE","RETURN"});
    
    public void _callArrayInitializer()
    {
        Variable.initializeInternalArray();
    }
    
    public void _callArrayFinalizer()
    {
        Variable.finalizeInternalArray();
    }
    
} // end program onldemo