/*
 * Elastic COBOL --> Java Source Code
 *
 * This is a cross-compiler generated Java source-code file whose original
 * source was a COBOL program of the same name.
 *
 * If you want to switch from COBOL maintenance to Java maintenance, you must:
 * 1. edit this file as you see fit,
 * 2. move the resultant file to the java_source folder, and
 * 3. delete the originally named COBOL source file.
 *
 * This program requires ecobol.jar and may also require etrans.jar to execute.
 * These are the Elastic COBOL runtime services (used under license).
 */

import com.heirloomcomputing.ecs.exec.*;

/*
 * PROGRAM-ID sqlpaym
 * Compiled on 2018-02-05 at 12:07:22
 *
 * Generated by:
 * 
 * Elastic COBOL
 * V17.8.24 (Build Aug 29 2017 11:46:34)
 * Copyright (C) 2010-2017 Heirloom Computing
 */

@SuppressWarnings("all")
public class sqlpaym extends CobolBase
implements ICobolProgram, com.heirloomcomputing.ecs.api.ICallTarget, com.heirloomcomputing.ecs.api.ICancelTarget , com.heirloomcomputing.etp.transaction.link.Linkable
{
    static public final String _programId="sqlpaym";
    BreakClass breakPoint = new BreakClass();
    
    static // initializer
    {
        RuntimeEnvironment.setGlobalParameter("DT","1");
        Variable.completeInitialization();
    }
    
    
    @SuppressWarnings("all")
    public class Wrk              implements Section
    {
        public void doDeclarations()
        {
            try
            {
                declarations();
            }
            catch(Exception _initializerException)
            {
                CobolException.runtimeError(_context,"INTERNAL ERROR: Cannot initialize variable storage for sqlpaym section 'Wrk'",_initializerException);
            }
        }
        
        
        public void doInitializations()
        {
            sqlstate=new Variable();
            sqlcode_OF_sqlca=new Binary();
            sqlerrml_OF_sqlerrm_OF_sqlca=new Binary();
            sqlerrmc_OF_sqlerrm_OF_sqlca=new Variable();
            sqlerrm_OF_sqlca=new Variable();
            sqlerrd_OF_sqlca=new Binary();
            sqlwarn0_OF_sqlwarn_OF_sqlca=new Variable();
            _Variable=new Variable();
            sqlwarn_OF_sqlca=new Variable();
            sqlca=new Variable();
            w_id=new Binary();
            w_name=new Variable();
            w_street_1=new Variable();
            w_street_2=new Variable();
            w_city=new Variable();
            w_state=new Variable();
            w_zip=new Variable();
            d_id=new Binary();
            d_name=new Variable();
            d_street_1=new Variable();
            d_street_2=new Variable();
            d_city=new Variable();
            d_state=new Variable();
            d_zip=new Variable();
            c_id=new Binary();
            c_d_id=new Binary();
            c_w_id=new Binary();
            c_first=new Variable();
            c_middle=new Variable();
            c_last=new Variable();
            c_street_1=new Variable();
            c_street_2=new Variable();
            c_city=new Variable();
            c_state=new Variable();
            c_zip=new Variable();
            c_phone=new Variable();
            c_since=new Variable();
            c_credit=new Variable();
            c_credit_lim=new PackedDecimalI();
            c_discount=new PackedDecimalI();
            c_balance=new PackedDecimalI();
            c_data_len_OF_c_data=new Binary();
            c_data_data_OF_c_data=new Variable();
            c_data=new Variable();
            c_new_data_len_OF_c_new_data=new Binary();
            c_new_data_data_OF_c_new_data=new Variable();
            c_new_data=new Variable();
            h_amount=new PackedDecimalI();
            h_data=new Variable();
            csqlcode=new Variable();
            cdyyyy_OF_currentdate=new DisplayP();
            cdmm_OF_currentdate=new DisplayP();
            cddd_OF_currentdate=new DisplayP();
            currentdate=new Variable();
            cthh_OF_currenttime=new DisplayP();
            ctmn_OF_currenttime=new DisplayP();
            ctss_OF_currenttime=new DisplayP();
            currenttime=new Variable();
            datetime=new Variable();
            dtyear_OF_filler_0_=new Variable();
            dtmonth_OF_filler_0_=new Variable();
            dtday_OF_filler_0_=new Variable();
            dthour_OF_filler_0_=new Variable();
            dtmin_OF_filler_0_=new Variable();
            dtsec_OF_filler_0_=new Variable();
            filler_0_=new Variable();
            n=new Binary();
            namecnt=new Binary();
            tpc_trace_module_id_OF_tpc_trace_data_block=new Variable();
            trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block=new Level88("trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block",tpc_trace_module_id_OF_tpc_trace_data_block, new byte[]{-43}, null, null, null, new Object[]{new byte[]{-43}});
            tpc_trace_call_seq_OF_tpc_trace_data_block=new Variable();
            tpc_trace_call_type_OF_tpc_trace_data_block=new Variable();
            trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block=new Level88("trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block",tpc_trace_call_type_OF_tpc_trace_data_block, new byte[]{3}, null, null, null, new Object[]{new byte[]{3}});
            trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block=new Level88("trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block",tpc_trace_call_type_OF_tpc_trace_data_block, new byte[]{4}, null, null, null, new Object[]{new byte[]{4}});
            tpc_trace_data_length_OF_tpc_trace_data_block=new Binary();
            tpc_trace_data_OF_tpc_trace_data_block=new Variable();
            tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block=new Variable();
            trace_sql_select_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block=new Level88("trace_sql_select_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block",tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block, "S ", null, null, null, new Object[]{"S "});
            trace_sql_insert_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block=new Level88("trace_sql_insert_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block",tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block, "I ", null, null, null, new Object[]{"I "});
            trace_sql_update_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block=new Level88("trace_sql_update_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block",tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block, "U ", null, null, null, new Object[]{"U "});
            trace_sql_csr_declare_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block=new Level88("trace_sql_csr_declare_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block",tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block, "CD", null, null, null, new Object[]{"CD"});
            trace_sql_csr_open_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block=new Level88("trace_sql_csr_open_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block",tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block, "CO", null, null, null, new Object[]{"CO"});
            trace_sql_csr_fetch_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block=new Level88("trace_sql_csr_fetch_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block",tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block, "CF", null, null, null, new Object[]{"CF"});
            trace_sql_csr_close_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block=new Level88("trace_sql_csr_close_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block",tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block, "CC", null, null, null, new Object[]{"CC"});
            tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block=new Variable();
            filler_6__OF_tpc_trace_data_block=new Variable();
            tpc_trace_data_block=new Variable();
        }
        
        public void declarations()
        {
            final Memory _memory=this._memory;
            sqlstate.declare(_memory,8,5,"sqlstate",null,null,null,null,sqlca,0x00000000);
            sqlcode_OF_sqlca.declare(_memory,25,4,"sqlcode",9,null,sqlca,null,sqlerrm_OF_sqlca,0x04400000);
            sqlerrml_OF_sqlerrm_OF_sqlca.declare(_memory,29,2,"sqlerrml",4,null,sqlerrm_OF_sqlca,null,sqlerrmc_OF_sqlerrm_OF_sqlca,0x04400000);
            sqlerrmc_OF_sqlerrm_OF_sqlca.declare(_memory,31,270,"sqlerrmc",null,null,sqlerrm_OF_sqlca,null,null,0x00000000);
            sqlerrm_OF_sqlca.declare(_memory,29,272,"sqlerrm",null,null,sqlca,sqlerrml_OF_sqlerrm_OF_sqlca,sqlerrd_OF_sqlca,0x00002000);
            sqlerrd_OF_sqlca.declare(_memory,309,4,"sqlerrd",9,null,sqlca,null,sqlwarn_OF_sqlca,0x04400000,1,6,null);
            sqlwarn0_OF_sqlwarn_OF_sqlca.declare(_memory,333,1,"sqlwarn0",null," ",sqlwarn_OF_sqlca,null,null,0x00000000).move(Variable.SPACES);
            _Variable.reset().declare(_memory,334,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,335,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,336,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,337,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,338,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,339,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,340,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,341,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,342,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,343,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            sqlwarn_OF_sqlca.declare(_memory,333,11,"sqlwarn",null,null,sqlca,sqlwarn0_OF_sqlwarn_OF_sqlca,null,0x00000000);
            sqlca.declare(_memory,13,331,"sqlca",null,null,null,sqlcode_OF_sqlca,w_id,0x00000000);
            w_id.declare(_memory,344,4,"w_id",9,null,null,null,w_name,0x04400000);
            w_name.declare(_memory,348,10,"w_name",null,null,null,null,w_street_1,0x00000000);
            w_street_1.declare(_memory,358,20,"w_street_1",null,null,null,null,w_street_2,0x00000000);
            w_street_2.declare(_memory,378,20,"w_street_2",null,null,null,null,w_city,0x00000000);
            w_city.declare(_memory,398,20,"w_city",null,null,null,null,w_state,0x00000000);
            w_state.declare(_memory,418,2,"w_state",null,null,null,null,w_zip,0x00000000);
            w_zip.declare(_memory,420,9,"w_zip",null,null,null,null,d_id,0x00000000);
            d_id.declare(_memory,916,4,"d_id",9,null,null,null,d_name,0x04400000);
            d_name.declare(_memory,924,10,"d_name",null,null,null,null,d_street_1,0x00000000);
            d_street_1.declare(_memory,934,20,"d_street_1",null,null,null,null,d_street_2,0x00000000);
            d_street_2.declare(_memory,954,20,"d_street_2",null,null,null,null,d_city,0x00000000);
            d_city.declare(_memory,974,20,"d_city",null,null,null,null,d_state,0x00000000);
            d_state.declare(_memory,994,2,"d_state",null,null,null,null,d_zip,0x00000000);
            d_zip.declare(_memory,996,9,"d_zip",null,null,null,null,c_id,0x00000000);
            c_id.declare(_memory,1019,4,"c_id",9,null,null,null,c_d_id,0x04400000);
            c_d_id.declare(_memory,1023,4,"c_d_id",9,null,null,null,c_w_id,0x04400000);
            c_w_id.declare(_memory,1027,4,"c_w_id",9,null,null,null,c_first,0x04400000);
            c_first.declare(_memory,1031,16,"c_first",null,null,null,null,c_middle,0x00000000);
            c_middle.declare(_memory,1047,2,"c_middle",null,null,null,null,c_last,0x00000000);
            c_last.declare(_memory,1049,16,"c_last",null,null,null,null,c_street_1,0x00000000);
            c_street_1.declare(_memory,1065,20,"c_street_1",null,null,null,null,c_street_2,0x00000000);
            c_street_2.declare(_memory,1085,20,"c_street_2",null,null,null,null,c_city,0x00000000);
            c_city.declare(_memory,1105,20,"c_city",null,null,null,null,c_state,0x00000000);
            c_state.declare(_memory,1125,2,"c_state",null,null,null,null,c_zip,0x00000000);
            c_zip.declare(_memory,1127,9,"c_zip",null,null,null,null,c_phone,0x00000000);
            c_phone.declare(_memory,1136,16,"c_phone",null,null,null,null,c_since,0x00000000);
            c_since.declare(_memory,1152,20,"c_since",null,null,null,null,c_credit,0x00000000);
            c_credit.declare(_memory,1172,2,"c_credit",null,null,null,null,c_credit_lim,0x00000000);
            c_credit_lim.declare(_memory,1174,7,"c_credit_lim",12,null,null,null,c_discount,0x04400000,2,0);
            c_discount.declare(_memory,1181,3,"c_discount",4,null,null,null,c_balance,0x04400000,4,0);
            c_balance.declare(_memory,1184,7,"c_balance",12,null,null,null,c_data,0x04400000,2,0);
            c_data_len_OF_c_data.declare(_memory,1202,2,"c_data_len",4,null,c_data,null,c_data_data_OF_c_data,0x04400000);
            c_data_data_OF_c_data.declare(_memory,1204,500,"c_data_data",null,null,c_data,null,null,0x00000000);
            c_data.declare(_memory,1202,502,"c_data",null,null,null,c_data_len_OF_c_data,c_new_data,0x00002000);
            c_new_data_len_OF_c_new_data.declare(_memory,1704,2,"c_new_data_len",4,null,c_new_data,null,c_new_data_data_OF_c_new_data,0x04400000);
            c_new_data_data_OF_c_new_data.declare(_memory,1706,500,"c_new_data_data",null,null,c_new_data,null,null,0x00000000);
            c_new_data.declare(_memory,1704,502,"c_new_data",null,null,null,c_new_data_len_OF_c_new_data,h_amount,0x00002000);
            h_amount.declare(_memory,2206,4,"h_amount",6,null,null,null,h_data,0x04400000,2,0);
            h_data.declare(_memory,2210,24,"h_data",null,null,null,null,csqlcode,0x00000000);
            csqlcode.declare(_memory,2326,10,"csqlcode","+999999999","+999999999",null,null,null,currentdate,0x0c200000);
            cdyyyy_OF_currentdate.declare(_memory,2336,4,"cdyyyy",4,null,currentdate,null,cdmm_OF_currentdate,0x04000000);
            cdmm_OF_currentdate.declare(_memory,2340,2,"cdmm",2,null,currentdate,null,cddd_OF_currentdate,0x04000000);
            cddd_OF_currentdate.declare(_memory,2342,2,"cddd",2,null,currentdate,null,null,0x04000000);
            currentdate.declare(_memory,2336,8,"currentdate",null,null,null,cdyyyy_OF_currentdate,currenttime,0x00000000);
            cthh_OF_currenttime.declare(_memory,2344,2,"cthh",2,null,currenttime,null,ctmn_OF_currenttime,0x04000000);
            ctmn_OF_currenttime.declare(_memory,2346,2,"ctmn",2,null,currenttime,null,ctss_OF_currenttime,0x04000000);
            ctss_OF_currenttime.declare(_memory,2348,2,"ctss",2,null,currenttime,null,null,0x04000000);
            currenttime.declare(_memory,2344,6,"currenttime",null,null,null,cthh_OF_currenttime,datetime,0x00000000);
            datetime.declare(_memory,2350,19,"datetime",null,null,null,null,filler_0_,0x00000000);
            dtyear_OF_filler_0_.declare(_memory,2350,4,"dtyear",null,null,filler_0_,null,dtmonth_OF_filler_0_,0x00000000);
            dtmonth_OF_filler_0_.declare(_memory,2355,2,"dtmonth",null,null,filler_0_,null,dtday_OF_filler_0_,0x00000000);
            dtday_OF_filler_0_.declare(_memory,2358,2,"dtday",null,null,filler_0_,null,dthour_OF_filler_0_,0x00000000);
            dthour_OF_filler_0_.declare(_memory,2361,2,"dthour",null,null,filler_0_,null,dtmin_OF_filler_0_,0x00000000);
            dtmin_OF_filler_0_.declare(_memory,2364,2,"dtmin",null,null,filler_0_,null,dtsec_OF_filler_0_,0x00000000);
            dtsec_OF_filler_0_.declare(_memory,2367,2,"dtsec",null,null,filler_0_,null,null,0x00000000);
            filler_0_.declare(_memory,2350,19,"filler_0_",null,null,null,dtyear_OF_filler_0_,n,0x00100080,1,1,datetime);
            n.declare(_memory,2373,4,"n",9,null,null,null,namecnt,0x04400000);
            namecnt.declare(_memory,2377,4,"namecnt",9,null,null,null,tpc_trace_data_block,0x04400000);
            tpc_trace_module_id_OF_tpc_trace_data_block.declare(_memory,2381,1,"tpc_trace_module_id",null,null,tpc_trace_data_block,null,tpc_trace_call_seq_OF_tpc_trace_data_block,0x00000000);
            tpc_trace_call_seq_OF_tpc_trace_data_block.declare(_memory,2382,1,"tpc_trace_call_seq",null,null,tpc_trace_data_block,null,tpc_trace_call_type_OF_tpc_trace_data_block,0x00000000);
            tpc_trace_call_type_OF_tpc_trace_data_block.declare(_memory,2383,1,"tpc_trace_call_type",null,null,tpc_trace_data_block,null,tpc_trace_data_length_OF_tpc_trace_data_block,0x00000000);
            tpc_trace_data_length_OF_tpc_trace_data_block.declare(_memory,2384,2,"tpc_trace_data_length",4,null,tpc_trace_data_block,null,tpc_trace_data_OF_tpc_trace_data_block,0x04000000);
            tpc_trace_data_OF_tpc_trace_data_block.declare(_memory,2386,128,"tpc_trace_data",null,null,tpc_trace_data_block,null,filler_6__OF_tpc_trace_data_block,0x00000000);
            tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.declare(_memory,2386,2,"tpc_trace_sql_function",null,null,filler_6__OF_tpc_trace_data_block,null,tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block,0x00000000);
            tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.declare(_memory,2390,124,"tpc_trace_info",null,null,filler_6__OF_tpc_trace_data_block,null,null,0x00000000);
            filler_6__OF_tpc_trace_data_block.declare(_memory,2386,128,"filler_6_",null,null,tpc_trace_data_block,tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block,null,0x00100080,1,1,tpc_trace_data_OF_tpc_trace_data_block);
            tpc_trace_data_block.declare(_memory,2381,133,"tpc_trace_data_block",null,null,null,tpc_trace_module_id_OF_tpc_trace_data_block,null,0x00000000);
            Variable.setUnusedVarsSizes(wrk.sqlstate);
            
            
            // Declare Java Arrays
            sqlerrd_OF_sqlca__1=sqlerrd_OF_sqlca.createNumericArray1();            
            
        } // end declarations
        
        public  Variable sqlstate;
        public  Binary sqlcode_OF_sqlca;
        public  Binary sqlerrml_OF_sqlerrm_OF_sqlca;
        public  Variable sqlerrmc_OF_sqlerrm_OF_sqlca;
        public  Variable sqlerrm_OF_sqlca;
        public  Binary sqlerrd_OF_sqlca;
        public  Variable sqlwarn0_OF_sqlwarn_OF_sqlca;
        public Variable _Variable;
        public  Variable sqlwarn_OF_sqlca;
        public  Variable sqlca;
        public  Binary w_id;
        public  Variable w_name;
        public  Variable w_street_1;
        public  Variable w_street_2;
        public  Variable w_city;
        public  Variable w_state;
        public  Variable w_zip;
        public  Binary d_id;
        public  Variable d_name;
        public  Variable d_street_1;
        public  Variable d_street_2;
        public  Variable d_city;
        public  Variable d_state;
        public  Variable d_zip;
        public  Binary c_id;
        public  Binary c_d_id;
        public  Binary c_w_id;
        public  Variable c_first;
        public  Variable c_middle;
        public  Variable c_last;
        public  Variable c_street_1;
        public  Variable c_street_2;
        public  Variable c_city;
        public  Variable c_state;
        public  Variable c_zip;
        public  Variable c_phone;
        public  Variable c_since;
        public  Variable c_credit;
        public  PackedDecimalI c_credit_lim;
        public  PackedDecimalI c_discount;
        public  PackedDecimalI c_balance;
        public  Binary c_data_len_OF_c_data;
        public  Variable c_data_data_OF_c_data;
        public  Variable c_data;
        public  Binary c_new_data_len_OF_c_new_data;
        public  Variable c_new_data_data_OF_c_new_data;
        public  Variable c_new_data;
        public  PackedDecimalI h_amount;
        public  Variable h_data;
        public  Variable csqlcode;
        public  DisplayP cdyyyy_OF_currentdate;
        public  DisplayP cdmm_OF_currentdate;
        public  DisplayP cddd_OF_currentdate;
        public  Variable currentdate;
        public  DisplayP cthh_OF_currenttime;
        public  DisplayP ctmn_OF_currenttime;
        public  DisplayP ctss_OF_currenttime;
        public  Variable currenttime;
        public  Variable datetime;
        public  Variable dtyear_OF_filler_0_;
        public  Variable dtmonth_OF_filler_0_;
        public  Variable dtday_OF_filler_0_;
        public  Variable dthour_OF_filler_0_;
        public  Variable dtmin_OF_filler_0_;
        public  Variable dtsec_OF_filler_0_;
        public  Variable filler_0_;
        public  Binary n;
        public  Binary namecnt;
        public  Variable tpc_trace_module_id_OF_tpc_trace_data_block;
        public Level88 trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block;
        public  Variable tpc_trace_call_seq_OF_tpc_trace_data_block;
        public  Variable tpc_trace_call_type_OF_tpc_trace_data_block;
        public Level88 trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block;
        public Level88 trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block;
        public  Binary tpc_trace_data_length_OF_tpc_trace_data_block;
        public  Variable tpc_trace_data_OF_tpc_trace_data_block;
        public  Variable tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block;
        public Level88 trace_sql_select_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block;
        public Level88 trace_sql_insert_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block;
        public Level88 trace_sql_update_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block;
        public Level88 trace_sql_csr_declare_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block;
        public Level88 trace_sql_csr_open_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block;
        public Level88 trace_sql_csr_fetch_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block;
        public Level88 trace_sql_csr_close_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block;
        public  Variable tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block;
        public  Variable filler_6__OF_tpc_trace_data_block;
        public  Variable tpc_trace_data_block;
        
        
        // Create Java Arrays
        public Numeric sqlerrd_OF_sqlca__1[];        
        
        protected final Memory _memory=new UnbufferedMemory(2514,"sqlpaym.Wrk");
        
    } // end Wrk
    public transient Wrk wrk=null; // instance accessor for data section
    
    
    @SuppressWarnings("all")
    public class Lnk              implements Section
    {
        public void doDeclarations()
        {
            try
            {
                declarations();
            }
            catch(Exception _initializerException)
            {
                CobolException.runtimeError(_context,"INTERNAL ERROR: Cannot initialize variable storage for sqlpaym section 'Lnk'",_initializerException);
            }
        }
        
        
        public void doInitializations()
        {
            hdate_OF_payment_data_OF_dfhcommarea=new Variable();
            wid_OF_payment_data_OF_dfhcommarea=new DisplayP();
            did_OF_payment_data_OF_dfhcommarea=new DisplayP();
            cid_OF_payment_data_OF_dfhcommarea=new DisplayP();
            cwid_OF_payment_data_OF_dfhcommarea=new DisplayP();
            cdid_OF_payment_data_OF_dfhcommarea=new DisplayP();
            wstreet1_OF_payment_data_OF_dfhcommarea=new Variable();
            wstreet2_OF_payment_data_OF_dfhcommarea=new Variable();
            wcity_OF_payment_data_OF_dfhcommarea=new Variable();
            wstate_OF_payment_data_OF_dfhcommarea=new Variable();
            wzip_OF_payment_data_OF_dfhcommarea=new Variable();
            dstreet1_OF_payment_data_OF_dfhcommarea=new Variable();
            dstreet2_OF_payment_data_OF_dfhcommarea=new Variable();
            dcity_OF_payment_data_OF_dfhcommarea=new Variable();
            dstate_OF_payment_data_OF_dfhcommarea=new Variable();
            dzip_OF_payment_data_OF_dfhcommarea=new Variable();
            cfirst_OF_payment_data_OF_dfhcommarea=new Variable();
            cmiddle_OF_payment_data_OF_dfhcommarea=new Variable();
            clast_OF_payment_data_OF_dfhcommarea=new Variable();
            cstreet1_OF_payment_data_OF_dfhcommarea=new Variable();
            cstreet2_OF_payment_data_OF_dfhcommarea=new Variable();
            ccity_OF_payment_data_OF_dfhcommarea=new Variable();
            cstate_OF_payment_data_OF_dfhcommarea=new Variable();
            czip_OF_payment_data_OF_dfhcommarea=new Variable();
            cphone_OF_payment_data_OF_dfhcommarea=new Variable();
            csince_OF_payment_data_OF_dfhcommarea=new Variable();
            ccredit_OF_payment_data_OF_dfhcommarea=new Variable();
            ccreditlim_OF_payment_data_OF_dfhcommarea=new Variable();
            cdiscount_OF_payment_data_OF_dfhcommarea=new Variable();
            cbalance_OF_payment_data_OF_dfhcommarea=new Variable();
            cdata_OF_payment_data_OF_dfhcommarea=new Variable();
            hamount_OF_payment_data_OF_dfhcommarea=new Variable();
            err_OF_common_data_OF_payment_data_OF_dfhcommarea=new Variable();
            result_code_OF_common_data_OF_payment_data_OF_dfhcommarea=new Binary();
            tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea=new Variable();
            tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea=new Level88("tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea",tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea, "Y", null, null, null, new Object[]{"Y"});
            common_data_OF_payment_data_OF_dfhcommarea=new Variable();
            payment_data_OF_dfhcommarea=new Variable();
            dfhcommarea=new Variable();
            eibtime_OF_dfheiblk=new PackedDecimalI();
            eibdate_OF_dfheiblk=new PackedDecimalI();
            eibtrnid_OF_dfheiblk=new Variable();
            eibtaskn_OF_dfheiblk=new PackedDecimalI();
            eibtrmid_OF_dfheiblk=new Variable();
            dfheigdi_OF_dfheiblk=new Binary();
            eibcposn_OF_dfheiblk=new Binary();
            eibcalen_OF_dfheiblk=new Binary();
            eibaid_OF_dfheiblk=new Variable();
            eibfn_OF_dfheiblk=new Variable();
            eibrcode_OF_dfheiblk=new Variable();
            eibds_OF_dfheiblk=new Variable();
            eibreqid_OF_dfheiblk=new Variable();
            eibrsrce_OF_dfheiblk=new Variable();
            eibsync_OF_dfheiblk=new Variable();
            eibfree_OF_dfheiblk=new Variable();
            eibrecv_OF_dfheiblk=new Variable();
            eibfil01_OF_dfheiblk=new Variable();
            eibatt_OF_dfheiblk=new Variable();
            eibeoc_OF_dfheiblk=new Variable();
            eibfmh_OF_dfheiblk=new Variable();
            eibcompl_OF_dfheiblk=new Variable();
            eibsig_OF_dfheiblk=new Variable();
            eibconf_OF_dfheiblk=new Variable();
            eiberr_OF_dfheiblk=new Variable();
            eiberrcd_OF_dfheiblk=new Variable();
            eibsynrb_OF_dfheiblk=new Variable();
            eibnodat_OF_dfheiblk=new Variable();
            eibresp_OF_dfheiblk=new Binary();
            eibresp2_OF_dfheiblk=new Binary();
            eibrldbk_OF_dfheiblk=new Variable();
            eibsend_OF_dfheiblk=new Variable();
            eiberrmsg_OF_dfheiblk=new Variable();
            dibver_OF_dfheiblk=new Variable();
            dibstat_OF_dfheiblk=new Variable();
            dibsegm_OF_dfheiblk=new Variable();
            dibseglv_OF_dfheiblk=new Variable();
            dibkfbl_OF_dfheiblk=new Binary();
            dibdbdnm_OF_dfheiblk=new Variable();
            dibdborg_OF_dfheiblk=new Variable();
            dfheiblk=new Variable();
        }
        
        public void declarations()
        {
            final Memory _memory=this._memory;
            hdate_OF_payment_data_OF_dfhcommarea.declare(_memory,0,19,"hdate",null,null,payment_data_OF_dfhcommarea,null,wid_OF_payment_data_OF_dfhcommarea,0x00000000);
            wid_OF_payment_data_OF_dfhcommarea.declare(_memory,19,4,"wid",4,null,payment_data_OF_dfhcommarea,null,did_OF_payment_data_OF_dfhcommarea,0x04000000);
            did_OF_payment_data_OF_dfhcommarea.declare(_memory,23,2,"did",2,null,payment_data_OF_dfhcommarea,null,cid_OF_payment_data_OF_dfhcommarea,0x04000000);
            cid_OF_payment_data_OF_dfhcommarea.declare(_memory,25,4,"cid",4,null,payment_data_OF_dfhcommarea,null,cwid_OF_payment_data_OF_dfhcommarea,0x04000000);
            cwid_OF_payment_data_OF_dfhcommarea.declare(_memory,29,4,"cwid",4,null,payment_data_OF_dfhcommarea,null,cdid_OF_payment_data_OF_dfhcommarea,0x04000000);
            cdid_OF_payment_data_OF_dfhcommarea.declare(_memory,33,2,"cdid",2,null,payment_data_OF_dfhcommarea,null,wstreet1_OF_payment_data_OF_dfhcommarea,0x04000000);
            wstreet1_OF_payment_data_OF_dfhcommarea.declare(_memory,35,20,"wstreet1",null,null,payment_data_OF_dfhcommarea,null,wstreet2_OF_payment_data_OF_dfhcommarea,0x00000000);
            wstreet2_OF_payment_data_OF_dfhcommarea.declare(_memory,55,20,"wstreet2",null,null,payment_data_OF_dfhcommarea,null,wcity_OF_payment_data_OF_dfhcommarea,0x00000000);
            wcity_OF_payment_data_OF_dfhcommarea.declare(_memory,75,20,"wcity",null,null,payment_data_OF_dfhcommarea,null,wstate_OF_payment_data_OF_dfhcommarea,0x00000000);
            wstate_OF_payment_data_OF_dfhcommarea.declare(_memory,95,2,"wstate",null,null,payment_data_OF_dfhcommarea,null,wzip_OF_payment_data_OF_dfhcommarea,0x00000000);
            wzip_OF_payment_data_OF_dfhcommarea.declare(_memory,97,9,"wzip",null,null,payment_data_OF_dfhcommarea,null,dstreet1_OF_payment_data_OF_dfhcommarea,0x00000000);
            dstreet1_OF_payment_data_OF_dfhcommarea.declare(_memory,106,20,"dstreet1",null,null,payment_data_OF_dfhcommarea,null,dstreet2_OF_payment_data_OF_dfhcommarea,0x00000000);
            dstreet2_OF_payment_data_OF_dfhcommarea.declare(_memory,126,20,"dstreet2",null,null,payment_data_OF_dfhcommarea,null,dcity_OF_payment_data_OF_dfhcommarea,0x00000000);
            dcity_OF_payment_data_OF_dfhcommarea.declare(_memory,146,20,"dcity",null,null,payment_data_OF_dfhcommarea,null,dstate_OF_payment_data_OF_dfhcommarea,0x00000000);
            dstate_OF_payment_data_OF_dfhcommarea.declare(_memory,166,2,"dstate",null,null,payment_data_OF_dfhcommarea,null,dzip_OF_payment_data_OF_dfhcommarea,0x00000000);
            dzip_OF_payment_data_OF_dfhcommarea.declare(_memory,168,9,"dzip",null,null,payment_data_OF_dfhcommarea,null,cfirst_OF_payment_data_OF_dfhcommarea,0x00000000);
            cfirst_OF_payment_data_OF_dfhcommarea.declare(_memory,177,16,"cfirst",null,null,payment_data_OF_dfhcommarea,null,cmiddle_OF_payment_data_OF_dfhcommarea,0x00000000);
            cmiddle_OF_payment_data_OF_dfhcommarea.declare(_memory,193,2,"cmiddle",null,null,payment_data_OF_dfhcommarea,null,clast_OF_payment_data_OF_dfhcommarea,0x00000000);
            clast_OF_payment_data_OF_dfhcommarea.declare(_memory,195,16,"clast",null,null,payment_data_OF_dfhcommarea,null,cstreet1_OF_payment_data_OF_dfhcommarea,0x00000000);
            cstreet1_OF_payment_data_OF_dfhcommarea.declare(_memory,211,20,"cstreet1",null,null,payment_data_OF_dfhcommarea,null,cstreet2_OF_payment_data_OF_dfhcommarea,0x00000000);
            cstreet2_OF_payment_data_OF_dfhcommarea.declare(_memory,231,20,"cstreet2",null,null,payment_data_OF_dfhcommarea,null,ccity_OF_payment_data_OF_dfhcommarea,0x00000000);
            ccity_OF_payment_data_OF_dfhcommarea.declare(_memory,251,20,"ccity",null,null,payment_data_OF_dfhcommarea,null,cstate_OF_payment_data_OF_dfhcommarea,0x00000000);
            cstate_OF_payment_data_OF_dfhcommarea.declare(_memory,271,2,"cstate",null,null,payment_data_OF_dfhcommarea,null,czip_OF_payment_data_OF_dfhcommarea,0x00000000);
            czip_OF_payment_data_OF_dfhcommarea.declare(_memory,273,9,"czip",null,null,payment_data_OF_dfhcommarea,null,cphone_OF_payment_data_OF_dfhcommarea,0x00000000);
            cphone_OF_payment_data_OF_dfhcommarea.declare(_memory,282,19,"cphone",null,null,payment_data_OF_dfhcommarea,null,csince_OF_payment_data_OF_dfhcommarea,0x00000000);
            csince_OF_payment_data_OF_dfhcommarea.declare(_memory,301,10,"csince",null,null,payment_data_OF_dfhcommarea,null,ccredit_OF_payment_data_OF_dfhcommarea,0x00000000);
            ccredit_OF_payment_data_OF_dfhcommarea.declare(_memory,311,2,"ccredit",null,null,payment_data_OF_dfhcommarea,null,ccreditlim_OF_payment_data_OF_dfhcommarea,0x00000000);
            ccreditlim_OF_payment_data_OF_dfhcommarea.declare(_memory,313,13,"ccreditlim","9999999999.99","9999999999.99",null,payment_data_OF_dfhcommarea,null,cdiscount_OF_payment_data_OF_dfhcommarea,0x0c000000,2,0);
            cdiscount_OF_payment_data_OF_dfhcommarea.declare(_memory,326,5,"cdiscount","99.99","99.99",null,payment_data_OF_dfhcommarea,null,cbalance_OF_payment_data_OF_dfhcommarea,0x0c000000,2,0);
            cbalance_OF_payment_data_OF_dfhcommarea.declare(_memory,331,14,"cbalance","-9999999999.99","-9999999999.99",null,payment_data_OF_dfhcommarea,null,cdata_OF_payment_data_OF_dfhcommarea,0x0c200000,2,0);
            cdata_OF_payment_data_OF_dfhcommarea.declare(_memory,345,200,"cdata",null,null,payment_data_OF_dfhcommarea,null,hamount_OF_payment_data_OF_dfhcommarea,0x00000000);
            hamount_OF_payment_data_OF_dfhcommarea.declare(_memory,545,7,"hamount","9999.99","9999.99",null,payment_data_OF_dfhcommarea,null,common_data_OF_payment_data_OF_dfhcommarea,0x0c000000,2,0);
            err_OF_common_data_OF_payment_data_OF_dfhcommarea.declare(_memory,552,80,"err",null,null,common_data_OF_payment_data_OF_dfhcommarea,null,result_code_OF_common_data_OF_payment_data_OF_dfhcommarea,0x00000000);
            result_code_OF_common_data_OF_payment_data_OF_dfhcommarea.declare(_memory,712,4,"result_code",9,null,common_data_OF_payment_data_OF_dfhcommarea,null,tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea,0x04400000);
            tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.declare(_memory,716,1,"tpc_trace_flag",null,null,common_data_OF_payment_data_OF_dfhcommarea,null,null,0x00000000);
            common_data_OF_payment_data_OF_dfhcommarea.declare(_memory,552,285,"common_data",null,null,payment_data_OF_dfhcommarea,err_OF_common_data_OF_payment_data_OF_dfhcommarea,null,0x00000000);
            payment_data_OF_dfhcommarea.declare(_memory,0,837,"payment_data",null,null,dfhcommarea,hdate_OF_payment_data_OF_dfhcommarea,null,0x00000000);
            dfhcommarea.declare(_memory,0,837,"dfhcommarea",null,null,null,payment_data_OF_dfhcommarea,dfheiblk,0x00000000);
            eibtime_OF_dfheiblk.declare(_memory,837,4,"eibtime",7,Intrinsic.sr_current_julian_time(),dfheiblk,null,eibdate_OF_dfheiblk,0x04400000);
            eibdate_OF_dfheiblk.declare(_memory,841,4,"eibdate",7,Intrinsic.sr_current_julian_date(),dfheiblk,null,eibtrnid_OF_dfheiblk,0x04400000);
            eibtrnid_OF_dfheiblk.declare(_memory,845,4,"eibtrnid",null,null,dfheiblk,null,eibtaskn_OF_dfheiblk,0x00000000);
            eibtaskn_OF_dfheiblk.declare(_memory,849,4,"eibtaskn",7,null,dfheiblk,null,eibtrmid_OF_dfheiblk,0x04400000);
            eibtrmid_OF_dfheiblk.declare(_memory,853,4,"eibtrmid",null,null,dfheiblk,null,dfheigdi_OF_dfheiblk,0x00000000);
            dfheigdi_OF_dfheiblk.declare(_memory,857,2,"dfheigdi",4,null,dfheiblk,null,eibcposn_OF_dfheiblk,0x04400000);
            eibcposn_OF_dfheiblk.declare(_memory,859,2,"eibcposn",4,null,dfheiblk,null,eibcalen_OF_dfheiblk,0x04400000);
            eibcalen_OF_dfheiblk.declare(_memory,861,2,"eibcalen",4,null,dfheiblk,null,eibaid_OF_dfheiblk,0x04400000);
            eibaid_OF_dfheiblk.declare(_memory,863,1,"eibaid",null,null,dfheiblk,null,eibfn_OF_dfheiblk,0x00000000);
            eibfn_OF_dfheiblk.declare(_memory,864,2,"eibfn",null,null,dfheiblk,null,eibrcode_OF_dfheiblk,0x00000000);
            eibrcode_OF_dfheiblk.declare(_memory,866,6,"eibrcode",null,null,dfheiblk,null,eibds_OF_dfheiblk,0x00000000);
            eibds_OF_dfheiblk.declare(_memory,872,8,"eibds",null,null,dfheiblk,null,eibreqid_OF_dfheiblk,0x00000000);
            eibreqid_OF_dfheiblk.declare(_memory,880,8,"eibreqid",null,null,dfheiblk,null,eibrsrce_OF_dfheiblk,0x00000000);
            eibrsrce_OF_dfheiblk.declare(_memory,888,8,"eibrsrce",null,null,dfheiblk,null,eibsync_OF_dfheiblk,0x00000000);
            eibsync_OF_dfheiblk.declare(_memory,896,1,"eibsync",null,null,dfheiblk,null,eibfree_OF_dfheiblk,0x00000000);
            eibfree_OF_dfheiblk.declare(_memory,897,1,"eibfree",null,null,dfheiblk,null,eibrecv_OF_dfheiblk,0x00000000);
            eibrecv_OF_dfheiblk.declare(_memory,898,1,"eibrecv",null,null,dfheiblk,null,eibfil01_OF_dfheiblk,0x00000000);
            eibfil01_OF_dfheiblk.declare(_memory,899,1,"eibfil01",null,null,dfheiblk,null,eibatt_OF_dfheiblk,0x00000000);
            eibatt_OF_dfheiblk.declare(_memory,900,1,"eibatt",null,null,dfheiblk,null,eibeoc_OF_dfheiblk,0x00000000);
            eibeoc_OF_dfheiblk.declare(_memory,901,1,"eibeoc",null,null,dfheiblk,null,eibfmh_OF_dfheiblk,0x00000000);
            eibfmh_OF_dfheiblk.declare(_memory,902,1,"eibfmh",null,null,dfheiblk,null,eibcompl_OF_dfheiblk,0x00000000);
            eibcompl_OF_dfheiblk.declare(_memory,903,1,"eibcompl",null,null,dfheiblk,null,eibsig_OF_dfheiblk,0x00000000);
            eibsig_OF_dfheiblk.declare(_memory,904,1,"eibsig",null,null,dfheiblk,null,eibconf_OF_dfheiblk,0x00000000);
            eibconf_OF_dfheiblk.declare(_memory,905,1,"eibconf",null,null,dfheiblk,null,eiberr_OF_dfheiblk,0x00000000);
            eiberr_OF_dfheiblk.declare(_memory,906,1,"eiberr",null,null,dfheiblk,null,eiberrcd_OF_dfheiblk,0x00000000);
            eiberrcd_OF_dfheiblk.declare(_memory,907,4,"eiberrcd",null,null,dfheiblk,null,eibsynrb_OF_dfheiblk,0x00000000);
            eibsynrb_OF_dfheiblk.declare(_memory,911,1,"eibsynrb",null,null,dfheiblk,null,eibnodat_OF_dfheiblk,0x00000000);
            eibnodat_OF_dfheiblk.declare(_memory,912,1,"eibnodat",null,null,dfheiblk,null,eibresp_OF_dfheiblk,0x00000000);
            eibresp_OF_dfheiblk.declare(_memory,913,4,"eibresp",8,null,dfheiblk,null,eibresp2_OF_dfheiblk,0x04400000);
            eibresp2_OF_dfheiblk.declare(_memory,917,4,"eibresp2",8,null,dfheiblk,null,eibrldbk_OF_dfheiblk,0x04400000);
            eibrldbk_OF_dfheiblk.declare(_memory,921,1,"eibrldbk",null,null,dfheiblk,null,eibsend_OF_dfheiblk,0x00000000);
            eibsend_OF_dfheiblk.declare(_memory,922,1,"eibsend",null,null,dfheiblk,null,eiberrmsg_OF_dfheiblk,0x00000000);
            eiberrmsg_OF_dfheiblk.declare(_memory,923,2013,"eiberrmsg",null,null,dfheiblk,null,dibver_OF_dfheiblk,0x00000000);
            dibver_OF_dfheiblk.declare(_memory,2936,2,"dibver",null,null,dfheiblk,null,dibstat_OF_dfheiblk,0x00000000);
            dibstat_OF_dfheiblk.declare(_memory,2938,2,"dibstat",null,null,dfheiblk,null,dibsegm_OF_dfheiblk,0x00000000);
            dibsegm_OF_dfheiblk.declare(_memory,2940,8,"dibsegm",null,null,dfheiblk,null,dibseglv_OF_dfheiblk,0x00000000);
            dibseglv_OF_dfheiblk.declare(_memory,2948,2,"dibseglv",null,null,dfheiblk,null,dibkfbl_OF_dfheiblk,0x00000000);
            dibkfbl_OF_dfheiblk.declare(_memory,2950,2,"dibkfbl",4,null,dfheiblk,null,dibdbdnm_OF_dfheiblk,0x04400000);
            dibdbdnm_OF_dfheiblk.declare(_memory,2952,8,"dibdbdnm",null,null,dfheiblk,null,dibdborg_OF_dfheiblk,0x00000000);
            dibdborg_OF_dfheiblk.declare(_memory,2960,8,"dibdborg",null,null,dfheiblk,null,null,0x00000000);
            dfheiblk.declare(_memory,837,2131,"dfheiblk",null,null,null,eibtime_OF_dfheiblk,null,0x00000000);
            Variable.setUnusedVarsSizes(lnk.dfhcommarea);
            
            
        } // end declarations
        
        public  Variable hdate_OF_payment_data_OF_dfhcommarea;
        public  DisplayP wid_OF_payment_data_OF_dfhcommarea;
        public  DisplayP did_OF_payment_data_OF_dfhcommarea;
        public  DisplayP cid_OF_payment_data_OF_dfhcommarea;
        public  DisplayP cwid_OF_payment_data_OF_dfhcommarea;
        public  DisplayP cdid_OF_payment_data_OF_dfhcommarea;
        public  Variable wstreet1_OF_payment_data_OF_dfhcommarea;
        public  Variable wstreet2_OF_payment_data_OF_dfhcommarea;
        public  Variable wcity_OF_payment_data_OF_dfhcommarea;
        public  Variable wstate_OF_payment_data_OF_dfhcommarea;
        public  Variable wzip_OF_payment_data_OF_dfhcommarea;
        public  Variable dstreet1_OF_payment_data_OF_dfhcommarea;
        public  Variable dstreet2_OF_payment_data_OF_dfhcommarea;
        public  Variable dcity_OF_payment_data_OF_dfhcommarea;
        public  Variable dstate_OF_payment_data_OF_dfhcommarea;
        public  Variable dzip_OF_payment_data_OF_dfhcommarea;
        public  Variable cfirst_OF_payment_data_OF_dfhcommarea;
        public  Variable cmiddle_OF_payment_data_OF_dfhcommarea;
        public  Variable clast_OF_payment_data_OF_dfhcommarea;
        public  Variable cstreet1_OF_payment_data_OF_dfhcommarea;
        public  Variable cstreet2_OF_payment_data_OF_dfhcommarea;
        public  Variable ccity_OF_payment_data_OF_dfhcommarea;
        public  Variable cstate_OF_payment_data_OF_dfhcommarea;
        public  Variable czip_OF_payment_data_OF_dfhcommarea;
        public  Variable cphone_OF_payment_data_OF_dfhcommarea;
        public  Variable csince_OF_payment_data_OF_dfhcommarea;
        public  Variable ccredit_OF_payment_data_OF_dfhcommarea;
        public  Variable ccreditlim_OF_payment_data_OF_dfhcommarea;
        public  Variable cdiscount_OF_payment_data_OF_dfhcommarea;
        public  Variable cbalance_OF_payment_data_OF_dfhcommarea;
        public  Variable cdata_OF_payment_data_OF_dfhcommarea;
        public  Variable hamount_OF_payment_data_OF_dfhcommarea;
        public  Variable err_OF_common_data_OF_payment_data_OF_dfhcommarea;
        public  Binary result_code_OF_common_data_OF_payment_data_OF_dfhcommarea;
        public  Variable tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea;
        public Level88 tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea;
        public  Variable common_data_OF_payment_data_OF_dfhcommarea;
        public  Variable payment_data_OF_dfhcommarea;
        public  Variable dfhcommarea;
        public  PackedDecimalI eibtime_OF_dfheiblk;
        public  PackedDecimalI eibdate_OF_dfheiblk;
        public  Variable eibtrnid_OF_dfheiblk;
        public  PackedDecimalI eibtaskn_OF_dfheiblk;
        public  Variable eibtrmid_OF_dfheiblk;
        public  Binary dfheigdi_OF_dfheiblk;
        public  Binary eibcposn_OF_dfheiblk;
        public  Binary eibcalen_OF_dfheiblk;
        public  Variable eibaid_OF_dfheiblk;
        public  Variable eibfn_OF_dfheiblk;
        public  Variable eibrcode_OF_dfheiblk;
        public  Variable eibds_OF_dfheiblk;
        public  Variable eibreqid_OF_dfheiblk;
        public  Variable eibrsrce_OF_dfheiblk;
        public  Variable eibsync_OF_dfheiblk;
        public  Variable eibfree_OF_dfheiblk;
        public  Variable eibrecv_OF_dfheiblk;
        public  Variable eibfil01_OF_dfheiblk;
        public  Variable eibatt_OF_dfheiblk;
        public  Variable eibeoc_OF_dfheiblk;
        public  Variable eibfmh_OF_dfheiblk;
        public  Variable eibcompl_OF_dfheiblk;
        public  Variable eibsig_OF_dfheiblk;
        public  Variable eibconf_OF_dfheiblk;
        public  Variable eiberr_OF_dfheiblk;
        public  Variable eiberrcd_OF_dfheiblk;
        public  Variable eibsynrb_OF_dfheiblk;
        public  Variable eibnodat_OF_dfheiblk;
        public  Binary eibresp_OF_dfheiblk;
        public  Binary eibresp2_OF_dfheiblk;
        public  Variable eibrldbk_OF_dfheiblk;
        public  Variable eibsend_OF_dfheiblk;
        public  Variable eiberrmsg_OF_dfheiblk;
        public  Variable dibver_OF_dfheiblk;
        public  Variable dibstat_OF_dfheiblk;
        public  Variable dibsegm_OF_dfheiblk;
        public  Variable dibseglv_OF_dfheiblk;
        public  Binary dibkfbl_OF_dfheiblk;
        public  Variable dibdbdnm_OF_dfheiblk;
        public  Variable dibdborg_OF_dfheiblk;
        public  Variable dfheiblk;
        
        
        protected final Memory _memory=new UnbufferedMemory(2968,"sqlpaym.Lnk");
        
    } // end Lnk
    public transient Lnk lnk=null; // instance accessor for data section
    
    public java.lang.Object call(Context _passContext)
    {
        setup(_passContext);
        return callGiving();
    }
    
    public java.lang.Object call(Context _passContext,parameterList _param)
    {
        setup(_passContext);
        return callGiving(_param);
    }
    
    public void call()
    {
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        run(-1,0); // parameters expected, leave at defaults
    } // end call
    
    public void call(parameterList _param)
    {
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        try
        {
            lnk.dfheiblk.ipc_init(_param,0);
            lnk.dfhcommarea.ipc_init(_param,1);
            Context _prevContext=Variable.setCurrContext(_context);
            Variable.setNarg(_param);
            _callArrayInitializer();
            Variable[] _variables=new Variable[]
            {
                lnk.dfheiblk,lnk.dfhcommarea
            };
            Variable.ipc_ready(_variables);
            this.run(-1,0);
            Variable.ipc_finish(_variables,_param,_programId);
            _callArrayFinalizer();
            Variable.ipc_final(_variables,_param);
            Variable.setCurrContext(_prevContext);
        }
        catch(ArrayIndexOutOfBoundsException _linkingExceptionOuter)
        {
            CobolException.runtimeError("Linking Error in Initiation of "+_programId,_linkingExceptionOuter);
        }
    }
    
    public java.lang.Object callGiving()
    {
        call();
        return _context.getReturnCode();
    }
    
    public java.lang.Object call(boolean[] _byRef,java.lang.Object[] _param)
    {
        return callGiving(new parameterList(_byRef,_param));
    }
    
    public java.lang.Object callGiving(parameterList _param)
    {
        call(_param);
        return _context.getReturnCode();
    }
    
    static public final int _defaultsection_0_Label=2;
    static public final int _main_OF_defaultsection_0_Label=1;
    
    public final int main_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        wrk.datetime.move("YYYY-MM-DD HH:MM:SS");
        boolean _sizeError=false;
        wrk.currentdate.acceptYYYYMMDD();
        _sizeError=false;
        wrk.currenttime.acceptTime();
        wrk.dtyear_OF_filler_0_.move(wrk.cdyyyy_OF_currentdate);
        wrk.dtmonth_OF_filler_0_.move(wrk.cdmm_OF_currentdate);
        wrk.dtday_OF_filler_0_.move(wrk.cddd_OF_currentdate);
        wrk.dthour_OF_filler_0_.move(wrk.cthh_OF_currenttime);
        wrk.dtmin_OF_filler_0_.move(wrk.ctmn_OF_currenttime);
        wrk.dtsec_OF_filler_0_.move(wrk.ctss_OF_currenttime);
        lnk.hdate_OF_payment_data_OF_dfhcommarea.move(wrk.datetime);
        wrk.w_id.move(lnk.wid_OF_payment_data_OF_dfhcommarea);
        wrk.d_id.move(lnk.did_OF_payment_data_OF_dfhcommarea);
        wrk.c_id.move(lnk.cid_OF_payment_data_OF_dfhcommarea);
        wrk.c_d_id.move(lnk.cdid_OF_payment_data_OF_dfhcommarea);
        wrk.c_w_id.move(lnk.cwid_OF_payment_data_OF_dfhcommarea);
        wrk.h_amount.move(lnk.hamount_OF_payment_data_OF_dfhcommarea);
        wrk.c_last.move(lnk.clast_OF_payment_data_OF_dfhcommarea);
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{1});
            wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.trace_sql_select_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("Wh");
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_1);
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        // EXEC JAVA
        CountTheTime ctt1 = new
        CountTheTime("SQLPAYM-SelectFromWarehouse");
        // END-EXEC JAVA
        SqlCursor _sqlCursor=null;
        try
        {
            _sqlCursor=_context.getSqlContext().getCursors().allocate("default");
            _sqlCursor.declare(_getConnection(null).prepareStatement("SELECT w_street_1, w_street_2, w_city, w_state, w_zip, w_name FROM warehouse WHERE w_id= ?")); // ps1
            _sqlCursor.setObject(wrk.w_id,null);
            if(!_sqlCursor.open()) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Cannot open an already opened cursor","24000");
            java.sql.ResultSet _resultSet=_sqlCursor.getResultSet();
            if(_resultSet.next())
            {
                int _rightTruncation=0;
                _rightTruncation|=wrk.w_street_1.setSqlTrimObject(96,(_resultSet.getObject(1)),null,true,false);
                _rightTruncation|=wrk.w_street_2.setSqlTrimObject(96,(_resultSet.getObject(2)),null,true,false);
                _rightTruncation|=wrk.w_city.setSqlTrimObject(96,(_resultSet.getObject(3)),null,true,false);
                _rightTruncation|=wrk.w_state.setSqlTrimObject(96,(_resultSet.getObject(4)),null,true,false);
                _rightTruncation|=wrk.w_zip.setSqlTrimObject(96,(_resultSet.getObject(5)),null,true,false);
                _rightTruncation|=wrk.w_name.setSqlTrimObject(96,(_resultSet.getObject(6)),null,true,false);
                
                if(_resultSet.next()) throw new java.sql.SQLException("Elastic COBOL SQL: 21000: Unexpected next row in ResultSet","21000",-811); // verify no next row
                if(_rightTruncation>=SqlContext.CAN_STORE_ERROR) throw new java.sql.SQLException("Elastic COBOL SQL: 22001.C6: Data Truncation","22001");
                if(_rightTruncation>=SqlContext.CAN_STORE_WARNING) throw new java.sql.SQLException("Elastic COBOL SQL: 01004.C6: Data Truncation","01004");
            }
            else
            {
                throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C5: No next row in resultset","02000");
            }
            _sqlClear();
            int _sqlExceptionGoto=_sqlWarningHandler(_sqlCursor.getSQLWarning(),_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        catch(java.sql.SQLException _sqlException)
        {
            int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        catch(Exception _otherException)
        {
            int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        finally
        {
            try
            {
                if(!_sqlCursor.close()) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Cannot close an already closed cursor","24000");
            }
            catch(Exception _statementCloseException)
            {
                ;
            }
        }
        // EXEC JAVA
        ctt1.close();
        // END-EXEC JAVA
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{1});
            wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        lnk.wstreet1_OF_payment_data_OF_dfhcommarea.move(wrk.w_street_1);
        lnk.wstreet2_OF_payment_data_OF_dfhcommarea.move(wrk.w_street_2);
        lnk.wcity_OF_payment_data_OF_dfhcommarea.move(wrk.w_city);
        lnk.wstate_OF_payment_data_OF_dfhcommarea.move(wrk.w_state);
        _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=lnk.wzip_OF_payment_data_OF_dfhcommarea.string(wrk.w_zip.ref(_NCONSTANT_3.toInt(),_NCONSTANT_4.toInt()),_defaultPointerIndex);
        _sizeError|=lnk.wzip_OF_payment_data_OF_dfhcommarea.string((String)"-",_defaultPointerIndex);
        _sizeError|=lnk.wzip_OF_payment_data_OF_dfhcommarea.string(wrk.w_zip.ref(_NCONSTANT_5.toInt(),_NCONSTANT_1.toInt()),_defaultPointerIndex);
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{2});
            wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.trace_sql_select_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("Di");
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_1);
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        // EXEC JAVA
        CountTheTime ctt2 = new
        CountTheTime("SQLPAYM-SelectFromDistrict");
        // END-EXEC JAVA
        _sqlCursor=null;
        try
        {
            _sqlCursor=_context.getSqlContext().getCursors().allocate("default");
            _sqlCursor.declare(_getConnection(null).prepareStatement("SELECT d_street_1, d_street_2, d_city, d_state, d_zip, d_name FROM district WHERE d_w_id= ? AND d_id= ?")); // ps1
            _sqlCursor.setObject(wrk.w_id,null);
            _sqlCursor.setObject(wrk.d_id,null);
            if(!_sqlCursor.open()) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Cannot open an already opened cursor","24000");
            java.sql.ResultSet _resultSet=_sqlCursor.getResultSet();
            if(_resultSet.next())
            {
                int _rightTruncation=0;
                _rightTruncation|=wrk.d_street_1.setSqlTrimObject(96,(_resultSet.getObject(1)),null,true,false);
                _rightTruncation|=wrk.d_street_2.setSqlTrimObject(96,(_resultSet.getObject(2)),null,true,false);
                _rightTruncation|=wrk.d_city.setSqlTrimObject(96,(_resultSet.getObject(3)),null,true,false);
                _rightTruncation|=wrk.d_state.setSqlTrimObject(96,(_resultSet.getObject(4)),null,true,false);
                _rightTruncation|=wrk.d_zip.setSqlTrimObject(96,(_resultSet.getObject(5)),null,true,false);
                _rightTruncation|=wrk.d_name.setSqlTrimObject(96,(_resultSet.getObject(6)),null,true,false);
                
                if(_resultSet.next()) throw new java.sql.SQLException("Elastic COBOL SQL: 21000: Unexpected next row in ResultSet","21000",-811); // verify no next row
                if(_rightTruncation>=SqlContext.CAN_STORE_ERROR) throw new java.sql.SQLException("Elastic COBOL SQL: 22001.C6: Data Truncation","22001");
                if(_rightTruncation>=SqlContext.CAN_STORE_WARNING) throw new java.sql.SQLException("Elastic COBOL SQL: 01004.C6: Data Truncation","01004");
            }
            else
            {
                throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C5: No next row in resultset","02000");
            }
            _sqlClear();
            int _sqlExceptionGoto=_sqlWarningHandler(_sqlCursor.getSQLWarning(),_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        catch(java.sql.SQLException _sqlException)
        {
            int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        catch(Exception _otherException)
        {
            int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        finally
        {
            try
            {
                if(!_sqlCursor.close()) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Cannot close an already closed cursor","24000");
            }
            catch(Exception _statementCloseException)
            {
                ;
            }
        }
        // EXEC JAVA
        ctt2.close();
        // END-EXEC JAVA
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{2});
            wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        lnk.dstreet1_OF_payment_data_OF_dfhcommarea.move(wrk.d_street_1);
        lnk.dstreet2_OF_payment_data_OF_dfhcommarea.move(wrk.d_street_2);
        lnk.dcity_OF_payment_data_OF_dfhcommarea.move(wrk.d_city);
        lnk.dstate_OF_payment_data_OF_dfhcommarea.move(wrk.d_state);
        _sizeError=false;
        _defaultPointerIndex.move(1);
        _sizeError|=lnk.dzip_OF_payment_data_OF_dfhcommarea.string(wrk.d_zip.ref(_NCONSTANT_3.toInt(),_NCONSTANT_4.toInt()),_defaultPointerIndex);
        _sizeError|=lnk.dzip_OF_payment_data_OF_dfhcommarea.string((String)"-",_defaultPointerIndex);
        _sizeError|=lnk.dzip_OF_payment_data_OF_dfhcommarea.string(wrk.d_zip.ref(_NCONSTANT_5.toInt(),_NCONSTANT_1.toInt()),_defaultPointerIndex);
        wrk.c_last.move(lnk.clast_OF_payment_data_OF_dfhcommarea);
        if((wrk.c_last.compare(Variable.SPACES)!=0))
        {
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{3});
                wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.trace_sql_select_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("Cu");
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_1);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            // EXEC JAVA
            CountTheTime ctt3 = new
            CountTheTime("SQLPAYM-SelectFromCustomerDistinct");
            // END-EXEC JAVA
            _sqlCursor=null;
            try
            {
                _sqlCursor=_context.getSqlContext().getCursors().allocate("default");
                _sqlCursor.declare(_getConnection(null).prepareStatement("SELECT count(distinct c_id) FROM customer WHERE c_last= ? AND c_d_id= ? AND c_w_id= ?")); // ps1
                _sqlCursor.setObject(wrk.c_last,null,96);
                _sqlCursor.setObject(wrk.c_d_id,null);
                _sqlCursor.setObject(wrk.c_w_id,null);
                if(!_sqlCursor.open()) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Cannot open an already opened cursor","24000");
                java.sql.ResultSet _resultSet=_sqlCursor.getResultSet();
                if(_resultSet.next())
                {
                    int _rightTruncation=0;
                    _rightTruncation|=wrk.namecnt.setSqlTrimObject(0,(_resultSet.getObject(1)),null,true,false);
                    
                    if(_resultSet.next()) throw new java.sql.SQLException("Elastic COBOL SQL: 21000: Unexpected next row in ResultSet","21000",-811); // verify no next row
                    if(_rightTruncation>=SqlContext.CAN_STORE_ERROR) throw new java.sql.SQLException("Elastic COBOL SQL: 22001.C6: Data Truncation","22001");
                    if(_rightTruncation>=SqlContext.CAN_STORE_WARNING) throw new java.sql.SQLException("Elastic COBOL SQL: 01004.C6: Data Truncation","01004");
                }
                else
                {
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C5: No next row in resultset","02000");
                }
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlCursor.getSQLWarning(),_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    if(!_sqlCursor.close()) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Cannot close an already closed cursor","24000");
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            // EXEC JAVA
            ctt3.close();
            // END-EXEC JAVA
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{3});
                wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            if((wrk.namecnt.compare(_NCONSTANT_2)==0))
            {
                int _performResult=0;
                if((_performResult=cust_not_found_OF_defaultsection_0())>0) perform(_performResult,_cust_not_found_OF_defaultsection_0_Label);
            }
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{4});
                wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.trace_sql_csr_declare_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("CSR 01");
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_6);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            // EXEC JAVA
            CountTheTime ctt4 = new
            CountTheTime("SQLPAYM-SelectFromCustomerOrderBy");
            // END-EXEC JAVA
            _sqlCursor=null;
            try
            {
                _sqlCursor=_context.getSqlContext().getCursors().allocateOpen("c_byname",false); // ps3
                _sqlCursor.declare(_getConnection(null).prepareStatement("SELECT c_first, c_middle, c_id, c_street_1, c_street_2, c_city, c_state, c_zip, c_phone, c_credit, c_credit_lim, c_discount, c_balance, c_since FROM customer WHERE c_w_id= ? AND c_d_id= ? AND c_last= ? ORDER BY c_first",java.sql.ResultSet.TYPE_SCROLL_INSENSITIVE,java.sql.ResultSet.CONCUR_READ_ONLY));
                _sqlCursor=_context.getSqlContext().getCursors().getCursor("c_byname");
                _sqlCursor.setObject(wrk.c_w_id,null);
                _sqlCursor.setObject(wrk.c_d_id,null);
                _sqlCursor.setObject(wrk.c_last,null,96);
                _sqlClear();
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            // EXEC JAVA
            ctt4.close();
            // END-EXEC JAVA
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{4});
                wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{5});
                wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.trace_sql_csr_open_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("CSR 01");
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_6);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            _sqlCursor=null;
            try
            {
                _sqlCursor=_context.getSqlContext().getCursors().getCursor("c_byname");
                if (_sqlCursor==null) throw new java.sql.SQLException("Elastic COBOL SQL: 24001: Cursor '"+"c_byname"+"' not declared.","24001");
                _sqlCursor.open();
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlCursor.getSQLWarning(),_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{5});
                wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            if((Intrinsic.mod(wrk.namecnt,_NCONSTANT_7).compare(_NCONSTANT_2)!=0))
            {
                wrk.namecnt.add(1);
                
            }
            for(wrk.n.move(0);!((wrk.n.compare( Numeric.divGiving(wrk.namecnt,_NCONSTANT_7))>=0));wrk.n.add(1))
            {
                if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
                {
                    wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                    wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{6});
                    wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                    wrk.trace_sql_csr_fetch_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
                    wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("CSR 01");
                    wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_6);
                    boolean _callSuccess=true;
                    try
                    {
                        _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                    }
                    catch(UnwindException _unwindException)
                    {
                        return _unwindException.unwind(_context,this);
                    }
                    catch(Throwable _callException)
                    {
                        _context.setThrowable(_callException);
                        _callSuccess=false;
                    }
                    if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                    {
                        throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                    }
                }
                _sqlCursor=null;
                try
                {
                    _sqlCursor=_context.getSqlContext().getCursors().getCursor("c_byname");
                    if(_sqlCursor==null) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Invalid cursor name","24000");
                    java.sql.ResultSet _resultSet=_sqlCursor.getResultSet();
                    if(_resultSet==null)
                    {
                        throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C3: No result-set/null found","02000");
                    }
                    if(_resultSet.next())
                    {
                        int _rightTruncation=0;
                        _rightTruncation|=wrk.c_first.setSqlTrimObject(96,(_resultSet.getObject(1)),null,true,false);
                        _rightTruncation|=wrk.c_middle.setSqlTrimObject(96,(_resultSet.getObject(2)),null,true,false);
                        _rightTruncation|=wrk.c_id.setSqlTrimObject(0,(_resultSet.getObject(3)),null,true,false);
                        _rightTruncation|=wrk.c_street_1.setSqlTrimObject(96,(_resultSet.getObject(4)),null,true,false);
                        _rightTruncation|=wrk.c_street_2.setSqlTrimObject(96,(_resultSet.getObject(5)),null,true,false);
                        _rightTruncation|=wrk.c_city.setSqlTrimObject(96,(_resultSet.getObject(6)),null,true,false);
                        _rightTruncation|=wrk.c_state.setSqlTrimObject(96,(_resultSet.getObject(7)),null,true,false);
                        _rightTruncation|=wrk.c_zip.setSqlTrimObject(96,(_resultSet.getObject(8)),null,true,false);
                        _rightTruncation|=wrk.c_phone.setSqlTrimObject(96,(_resultSet.getObject(9)),null,true,false);
                        _rightTruncation|=wrk.c_credit.setSqlTrimObject(96,(_resultSet.getObject(10)),null,true,false);
                        _rightTruncation|=wrk.c_credit_lim.setSqlTrimObject(0,(_resultSet.getObject(11)),null,true,false);
                        _rightTruncation|=wrk.c_discount.setSqlTrimObject(0,(_resultSet.getObject(12)),null,true,false);
                        _rightTruncation|=wrk.c_balance.setSqlTrimObject(0,(_resultSet.getObject(13)),null,true,false);
                        _rightTruncation|=wrk.c_since.setSqlTrimObject(96,(_resultSet.getObject(14)),null,true,false);
                    }
                    else
                    {
                        throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C4: No next row in result-set","02000");
                    }
                    _sqlClear();
                    int _sqlExceptionGoto=_sqlWarningHandler(_sqlCursor.getSQLWarning(),_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                    if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                }
                catch(java.sql.SQLException _sqlException)
                {
                    int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                    if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                }
                catch(Exception _otherException)
                {
                    int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                    if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                }
                if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
                {
                    wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                    wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{6});
                    wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                    wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
                    wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
                    boolean _callSuccess=true;
                    try
                    {
                        _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                    }
                    catch(UnwindException _unwindException)
                    {
                        return _unwindException.unwind(_context,this);
                    }
                    catch(Throwable _callException)
                    {
                        _context.setThrowable(_callException);
                        _callSuccess=false;
                    }
                    if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                    {
                        throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                    }
                }
            } // end perform with test before/varying
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{7});
                wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.trace_sql_csr_close_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("CSR 01");
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_6);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            try
            {
                _context.getSqlContext().getCursors().close("c_byname");
                _sqlClear();
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{7});
                wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
        }
        else
        {
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{8});
                wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.trace_sql_select_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("Cu");
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_1);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            // EXEC JAVA
            CountTheTime ctt5 = new
            CountTheTime("SQLPAYM-SelectFromCustomer");
            // END-EXEC JAVA
            _sqlCursor=null;
            try
            {
                _sqlCursor=_context.getSqlContext().getCursors().allocate("default");
                _sqlCursor.declare(_getConnection(null).prepareStatement("SELECT c_first, c_middle, c_last, c_street_1, c_street_2, c_city, c_state, c_zip, c_phone, c_credit, c_credit_lim, c_discount, c_balance, c_since FROM customer WHERE c_w_id= ? AND c_d_id= ? AND c_id= ?")); // ps1
                _sqlCursor.setObject(wrk.c_w_id,null);
                _sqlCursor.setObject(wrk.c_d_id,null);
                _sqlCursor.setObject(wrk.c_id,null);
                if(!_sqlCursor.open()) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Cannot open an already opened cursor","24000");
                java.sql.ResultSet _resultSet=_sqlCursor.getResultSet();
                if(_resultSet.next())
                {
                    int _rightTruncation=0;
                    _rightTruncation|=wrk.c_first.setSqlTrimObject(96,(_resultSet.getObject(1)),null,true,false);
                    _rightTruncation|=wrk.c_middle.setSqlTrimObject(96,(_resultSet.getObject(2)),null,true,false);
                    _rightTruncation|=wrk.c_last.setSqlTrimObject(96,(_resultSet.getObject(3)),null,true,false);
                    _rightTruncation|=wrk.c_street_1.setSqlTrimObject(96,(_resultSet.getObject(4)),null,true,false);
                    _rightTruncation|=wrk.c_street_2.setSqlTrimObject(96,(_resultSet.getObject(5)),null,true,false);
                    _rightTruncation|=wrk.c_city.setSqlTrimObject(96,(_resultSet.getObject(6)),null,true,false);
                    _rightTruncation|=wrk.c_state.setSqlTrimObject(96,(_resultSet.getObject(7)),null,true,false);
                    _rightTruncation|=wrk.c_zip.setSqlTrimObject(96,(_resultSet.getObject(8)),null,true,false);
                    _rightTruncation|=wrk.c_phone.setSqlTrimObject(96,(_resultSet.getObject(9)),null,true,false);
                    _rightTruncation|=wrk.c_credit.setSqlTrimObject(96,(_resultSet.getObject(10)),null,true,false);
                    _rightTruncation|=wrk.c_credit_lim.setSqlTrimObject(0,(_resultSet.getObject(11)),null,true,false);
                    _rightTruncation|=wrk.c_discount.setSqlTrimObject(0,(_resultSet.getObject(12)),null,true,false);
                    _rightTruncation|=wrk.c_balance.setSqlTrimObject(0,(_resultSet.getObject(13)),null,true,false);
                    _rightTruncation|=wrk.c_since.setSqlTrimObject(96,(_resultSet.getObject(14)),null,true,false);
                    
                    if(_resultSet.next()) throw new java.sql.SQLException("Elastic COBOL SQL: 21000: Unexpected next row in ResultSet","21000",-811); // verify no next row
                    if(_rightTruncation>=SqlContext.CAN_STORE_ERROR) throw new java.sql.SQLException("Elastic COBOL SQL: 22001.C6: Data Truncation","22001");
                    if(_rightTruncation>=SqlContext.CAN_STORE_WARNING) throw new java.sql.SQLException("Elastic COBOL SQL: 01004.C6: Data Truncation","01004");
                }
                else
                {
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C5: No next row in resultset","02000");
                }
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlCursor.getSQLWarning(),_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    if(!_sqlCursor.close()) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Cannot close an already closed cursor","24000");
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            // EXEC JAVA
            ctt5.close();
            // END-EXEC JAVA
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{8});
                wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
        }
        lnk.cid_OF_payment_data_OF_dfhcommarea.move(wrk.c_id);
        lnk.cfirst_OF_payment_data_OF_dfhcommarea.move(wrk.c_first);
        lnk.cmiddle_OF_payment_data_OF_dfhcommarea.move(wrk.c_middle);
        lnk.clast_OF_payment_data_OF_dfhcommarea.move(wrk.c_last);
        lnk.cstreet1_OF_payment_data_OF_dfhcommarea.move(wrk.c_street_1);
        lnk.cstreet2_OF_payment_data_OF_dfhcommarea.move(wrk.c_street_2);
        lnk.ccity_OF_payment_data_OF_dfhcommarea.move(wrk.c_city);
        lnk.cstate_OF_payment_data_OF_dfhcommarea.move(wrk.c_state);
        _sizeError=false;
        _defaultPointerIndex.move(1);
        _sizeError|=lnk.czip_OF_payment_data_OF_dfhcommarea.string(wrk.c_zip.ref(_NCONSTANT_3.toInt(),_NCONSTANT_4.toInt()),_defaultPointerIndex);
        _sizeError|=lnk.czip_OF_payment_data_OF_dfhcommarea.string((String)"-",_defaultPointerIndex);
        _sizeError|=lnk.czip_OF_payment_data_OF_dfhcommarea.string(wrk.c_zip.ref(_NCONSTANT_5.toInt(),_NCONSTANT_1.toInt()),_defaultPointerIndex);
        _sizeError=false;
        _defaultPointerIndex.move(1);
        _sizeError|=lnk.cphone_OF_payment_data_OF_dfhcommarea.string(wrk.c_phone.ref(_NCONSTANT_3.toInt(),_NCONSTANT_5.toInt()),_defaultPointerIndex);
        _sizeError|=lnk.cphone_OF_payment_data_OF_dfhcommarea.string((String)"-",_defaultPointerIndex);
        _sizeError|=lnk.cphone_OF_payment_data_OF_dfhcommarea.string(wrk.c_phone.ref(_NCONSTANT_8.toInt(),_NCONSTANT_9.toInt()),_defaultPointerIndex);
        _sizeError|=lnk.cphone_OF_payment_data_OF_dfhcommarea.string((String)"-",_defaultPointerIndex);
        _sizeError|=lnk.cphone_OF_payment_data_OF_dfhcommarea.string(wrk.c_phone.ref(_NCONSTANT_10.toInt(),_NCONSTANT_9.toInt()),_defaultPointerIndex);
        _sizeError|=lnk.cphone_OF_payment_data_OF_dfhcommarea.string((String)"-",_defaultPointerIndex);
        _sizeError|=lnk.cphone_OF_payment_data_OF_dfhcommarea.string(wrk.c_phone.ref(_NCONSTANT_11.toInt(),_NCONSTANT_1.toInt()),_defaultPointerIndex);
        _sizeError=false;
        _defaultPointerIndex.move(1);
        _sizeError|=lnk.csince_OF_payment_data_OF_dfhcommarea.string(wrk.c_since.ref(_NCONSTANT_12.toInt(),_NCONSTANT_7.toInt()),_defaultPointerIndex);
        _sizeError|=lnk.csince_OF_payment_data_OF_dfhcommarea.string((String)"-",_defaultPointerIndex);
        _sizeError|=lnk.csince_OF_payment_data_OF_dfhcommarea.string(wrk.c_since.ref(_NCONSTANT_5.toInt(),_NCONSTANT_7.toInt()),_defaultPointerIndex);
        _sizeError|=lnk.csince_OF_payment_data_OF_dfhcommarea.string((String)"-",_defaultPointerIndex);
        _sizeError|=lnk.csince_OF_payment_data_OF_dfhcommarea.string(wrk.c_since.ref(_NCONSTANT_3.toInt(),_NCONSTANT_1.toInt()),_defaultPointerIndex);
        lnk.ccredit_OF_payment_data_OF_dfhcommarea.move(wrk.c_credit);
        lnk.ccreditlim_OF_payment_data_OF_dfhcommarea.move(wrk.c_credit_lim);
        lnk.cdiscount_OF_payment_data_OF_dfhcommarea.move(wrk.c_discount);
        wrk.c_balance.sub(wrk.h_amount);
        
        lnk.cbalance_OF_payment_data_OF_dfhcommarea.move(wrk.c_balance);
        if((wrk.c_credit.compare("BC")==0))
        {
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{9});
                wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.trace_sql_select_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("Cu");
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_1);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            // EXEC JAVA
            CountTheTime ctt6 = new
            CountTheTime("SQLPAYM-SelectFromCustomer2");
            // END-EXEC JAVA
            _sqlCursor=null;
            try
            {
                _sqlCursor=_context.getSqlContext().getCursors().allocate("default");
                _sqlCursor.declare(_getConnection(null).prepareStatement("SELECT c_data FROM customer WHERE c_w_id= ? AND c_d_id= ? AND c_id= ?")); // ps1
                _sqlCursor.setObject(wrk.c_w_id,null);
                _sqlCursor.setObject(wrk.c_d_id,null);
                _sqlCursor.setObject(wrk.c_id,null);
                if(!_sqlCursor.open()) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Cannot open an already opened cursor","24000");
                java.sql.ResultSet _resultSet=_sqlCursor.getResultSet();
                if(_resultSet.next())
                {
                    int _rightTruncation=0;
                    _rightTruncation|=wrk.c_data.setSqlTrimObject(9,(_resultSet.getObject(1)),null,true,false);
                    
                    if(_resultSet.next()) throw new java.sql.SQLException("Elastic COBOL SQL: 21000: Unexpected next row in ResultSet","21000",-811); // verify no next row
                    if(_rightTruncation>=SqlContext.CAN_STORE_ERROR) throw new java.sql.SQLException("Elastic COBOL SQL: 22001.C6: Data Truncation","22001");
                    if(_rightTruncation>=SqlContext.CAN_STORE_WARNING) throw new java.sql.SQLException("Elastic COBOL SQL: 01004.C6: Data Truncation","01004");
                }
                else
                {
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C5: No next row in resultset","02000");
                }
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlCursor.getSQLWarning(),_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    if(!_sqlCursor.close()) throw new java.sql.SQLException("Elastic COBOL SQL: 24000: Cannot close an already closed cursor","24000");
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            // EXEC JAVA
            ctt6.close();
            // END-EXEC JAVA
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{9});
                wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            _sizeError=false;
            _defaultPointerIndex.move(1);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string((String)"\357\277\275 ",_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string(lnk.cid_OF_payment_data_OF_dfhcommarea,_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string((String)" ",_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string(lnk.cdid_OF_payment_data_OF_dfhcommarea,_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string((String)" ",_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string(lnk.cwid_OF_payment_data_OF_dfhcommarea,_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string((String)" ",_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string(lnk.did_OF_payment_data_OF_dfhcommarea,_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string((String)" ",_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string(lnk.wid_OF_payment_data_OF_dfhcommarea,_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string((String)" ",_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string(lnk.hamount_OF_payment_data_OF_dfhcommarea,_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string((String)" ",_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string(lnk.hdate_OF_payment_data_OF_dfhcommarea,_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string((String)" ",_defaultPointerIndex);
            _sizeError|=wrk.c_new_data_data_OF_c_new_data.string(wrk.c_data_data_OF_c_data,_defaultPointerIndex);
            wrk.c_new_data_len_OF_c_new_data.move(new Numeric( wrk.c_new_data_data_OF_c_new_data.lengthForLengthOfSyntax()));
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{10});
                wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.trace_sql_update_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("Cu");
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_1);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            // EXEC JAVA
            CountTheTime ctt7 = new
            CountTheTime("SQLPAYM-UpdateCustomer");
            // END-EXEC JAVA
            java.sql.PreparedStatement _sqlPreparedStatement=null;
            try
            {
                _sqlPreparedStatement=_getConnection(null).prepareStatement("UPDATE customer SET c_balance = ?, c_data = ?, c_ytd_payment = c_ytd_payment + ?, c_payment_cnt = c_payment_cnt + 1 WHERE c_w_id = ? AND c_d_id = ? AND c_id = ?"); // ps4
                Object _sqlObject=null;
                _sqlObject=wrk.c_balance.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(1,_sqlObject);
                _sqlObject=wrk.c_new_data.getSqlObject(9,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(2,_sqlObject);
                _sqlObject=wrk.h_amount.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(3,_sqlObject);
                _sqlObject=wrk.c_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(4,_sqlObject);
                _sqlObject=wrk.c_d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(5,_sqlObject);
                _sqlObject=wrk.c_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(6,_sqlObject);
                int _rowCount=_sqlPreparedStatement.executeUpdate();
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlPreparedStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            // EXEC JAVA
            ctt7.close();
            // END-EXEC JAVA
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{10});
                wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            lnk.cdata_OF_payment_data_OF_dfhcommarea.move(wrk.c_new_data);
        }
        else
        {
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{11});
                wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.trace_sql_update_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("Cu");
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_1);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            // EXEC JAVA
            CountTheTime ctt8 = new
            CountTheTime("SQLPAYM-UpdateCustomer2");
            // END-EXEC JAVA
            java.sql.PreparedStatement _sqlPreparedStatement=null;
            try
            {
                _sqlPreparedStatement=_getConnection(null).prepareStatement("UPDATE customer SET c_balance = ?, c_ytd_payment = c_ytd_payment + ?, c_payment_cnt = c_payment_cnt + 1 WHERE c_w_id = ? AND c_d_id = ? AND c_id = ?"); // ps4
                Object _sqlObject=null;
                _sqlObject=wrk.c_balance.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(1,_sqlObject);
                _sqlObject=wrk.h_amount.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(2,_sqlObject);
                _sqlObject=wrk.c_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(3,_sqlObject);
                _sqlObject=wrk.c_d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(4,_sqlObject);
                _sqlObject=wrk.c_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(5,_sqlObject);
                int _rowCount=_sqlPreparedStatement.executeUpdate();
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlPreparedStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            // EXEC JAVA
            ctt8.close();
            // END-EXEC JAVA
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{11});
                wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            lnk.cdata_OF_payment_data_OF_dfhcommarea.moveSpaces();
        }
        _sizeError=false;
        _defaultPointerIndex.move(1);
        _sizeError|=wrk.h_data.string(wrk.w_name,_defaultPointerIndex);
        _sizeError|=wrk.h_data.string(wrk.d_name,_defaultPointerIndex);
        _sizeError|=wrk.h_data.string((String)"    ",_defaultPointerIndex);
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{12});
            wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.trace_sql_insert_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("Hi");
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_1);
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        // EXEC JAVA
        CountTheTime ctt9 = new
        CountTheTime("SQLPAYM-InsertIntoHistory");
        // END-EXEC JAVA
        java.sql.PreparedStatement _sqlPreparedStatement=null;
        try
        {
            _sqlPreparedStatement=_getConnection(null).prepareStatement("INSERT INTO history (h_c_d_id, h_c_w_id, h_c_id, h_d_id, h_w_id, h_date, h_amount, h_data) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?)"); // ps4
            Object _sqlObject=null;
            _sqlObject=wrk.c_d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(1,_sqlObject);
            _sqlObject=wrk.c_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(2,_sqlObject);
            _sqlObject=wrk.c_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(3,_sqlObject);
            _sqlObject=wrk.d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(4,_sqlObject);
            _sqlObject=wrk.w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(5,_sqlObject);
            _sqlObject=wrk.datetime.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(6,_sqlObject);
            _sqlObject=wrk.h_amount.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(7,_sqlObject);
            _sqlObject=wrk.h_data.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(8,_sqlObject);
            int _rowCount=_sqlPreparedStatement.executeUpdate();
            wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
            if(_rowCount==0)
                throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
            _sqlClear();
            int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        catch(java.sql.SQLException _sqlException)
        {
            int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        catch(Exception _otherException)
        {
            int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        finally
        {
            try
            {
                _sqlPreparedStatement.close();
            }
            catch(Exception _statementCloseException)
            {
                ;
            }
        }
        // EXEC JAVA
        ctt9.close();
        // END-EXEC JAVA
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{12});
            wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{13});
            wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.trace_sql_update_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("Di");
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_1);
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        // EXEC JAVA
        CountTheTime ctt10 = new
        CountTheTime("SQLPAYM-UpdateDistrict");
        // END-EXEC JAVA
        _sqlPreparedStatement=null;
        try
        {
            _sqlPreparedStatement=_getConnection(null).prepareStatement("UPDATE district SET d_ytd = d_ytd + ? WHERE d_w_id= ? AND d_id= ?"); // ps4
            Object _sqlObject=null;
            _sqlObject=wrk.h_amount.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(1,_sqlObject);
            _sqlObject=wrk.w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(2,_sqlObject);
            _sqlObject=wrk.d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(3,_sqlObject);
            int _rowCount=_sqlPreparedStatement.executeUpdate();
            wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
            if(_rowCount==0)
                throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
            _sqlClear();
            int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        catch(java.sql.SQLException _sqlException)
        {
            int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        catch(Exception _otherException)
        {
            int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        finally
        {
            try
            {
                _sqlPreparedStatement.close();
            }
            catch(Exception _statementCloseException)
            {
                ;
            }
        }
        // EXEC JAVA
        ctt10.close();
        // END-EXEC JAVA
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{13});
            wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{14});
            wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.trace_sql_update_OF_tpc_trace_sql_function_OF_filler_6__OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_info_OF_filler_6__OF_tpc_trace_data_block.move("Wh");
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_1);
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        // EXEC JAVA
        CountTheTime ctt11 = new
        CountTheTime("SQLPAYM-UPDATEWAREHOUSE");
        // END-EXEC JAVA
        _sqlPreparedStatement=null;
        try
        {
            _sqlPreparedStatement=_getConnection(null).prepareStatement("UPDATE warehouse SET w_ytd = w_ytd + ? WHERE w_id= ?"); // ps4
            Object _sqlObject=null;
            _sqlObject=wrk.h_amount.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(1,_sqlObject);
            _sqlObject=wrk.w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
            _sqlPreparedStatement.setObject(2,_sqlObject);
            int _rowCount=_sqlPreparedStatement.executeUpdate();
            wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
            if(_rowCount==0)
                throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
            _sqlClear();
            int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        catch(java.sql.SQLException _sqlException)
        {
            int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        catch(Exception _otherException)
        {
            int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,_sqlerr_OF_defaultsection_0_Label,-1,_sqlerr_OF_defaultsection_0_Label);
            if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
        }
        finally
        {
            try
            {
                _sqlPreparedStatement.close();
            }
            catch(Exception _statementCloseException)
            {
                ;
            }
        }
        // EXEC JAVA
        ctt11.close();
        // END-EXEC JAVA
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_payment_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_sqlpaym_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{14});
            wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_2);
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_0,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_0,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_0,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        lnk.result_code_OF_common_data_OF_payment_data_OF_dfhcommarea.move(_NCONSTANT_2);
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x0e08);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("RETURN",_TAGCONSTANT_1,_transactionParameters);
            if(_programControl!=null) _programControl.returnControl(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("RETURN",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            if(true) throw new UnwindException(UnwindException.RETURN);
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0e08));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _cust_not_found_OF_defaultsection_0_Label=5;
    
    public final int cust_not_found_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_2,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_2,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_2,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        lnk.err_OF_common_data_OF_payment_data_OF_dfhcommarea.move("Customer name is not valid");
        lnk.result_code_OF_common_data_OF_payment_data_OF_dfhcommarea.move(_NCONSTANT_3);
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x0e08);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("RETURN",_TAGCONSTANT_1,_transactionParameters);
            if(_programControl!=null) _programControl.returnControl(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("RETURN",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            if(true) throw new UnwindException(UnwindException.RETURN);
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0e08));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _sqlerr_OF_defaultsection_0_Label=3;
    
    public final int sqlerr_OF_defaultsection_0()
    {
        final Wrk wrk=this.wrk;
        wrk.csqlcode.move(wrk.sqlcode_OF_sqlca);
        boolean _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=lnk.err_OF_common_data_OF_payment_data_OF_dfhcommarea.string((String)"SQL Error: CODE=",_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_payment_data_OF_dfhcommarea.string(wrk.csqlcode,_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_payment_data_OF_dfhcommarea.string((String)" STATE=",_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_payment_data_OF_dfhcommarea.string(wrk.sqlstate,_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_payment_data_OF_dfhcommarea.string((String)" ",_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_payment_data_OF_dfhcommarea.string(wrk.sqlerrmc_OF_sqlerrm_OF_sqlca,_defaultPointerIndex);
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_2,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_2,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_2,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        lnk.result_code_OF_common_data_OF_payment_data_OF_dfhcommarea.move(_NCONSTANT_13);
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x0e08);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("RETURN",_TAGCONSTANT_1,_transactionParameters);
            if(_programControl!=null) _programControl.returnControl(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("RETURN",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            if(true) throw new UnwindException(UnwindException.RETURN);
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0e08));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    public int defaultsection_0()
    {
        perform(2,2);
        return 0;
    }
    
    
    /**
     * Dfheiblk property (length 2131)
     * @return property value of Dfheiblk
     */
    public String getDfheiblk()
    {
        if(_context==null) setup(null);
        return lnk.dfheiblk.toText();
    }
    
    /**
     * Dfheiblk property (length 2131)
     * @return property value of Dfheiblk
     */
    public String getDfheiblkAsString()
    {
        if(_context==null) setup(null);
        return lnk.dfheiblk.toText();
    }
    
    /**
     * Dfhcommarea property (length 837)
     * @return property value of Dfhcommarea
     */
    public String getDfhcommarea()
    {
        if(_context==null) setup(null);
        return lnk.dfhcommarea.toText();
    }
    
    /**
     * Dfhcommarea property (length 837)
     * @return property value of Dfhcommarea
     */
    public String getDfhcommareaAsString()
    {
        if(_context==null) setup(null);
        return lnk.dfhcommarea.toText();
    }
    
    /**
     * Dfheiblk property (length 2131)
     * @param paramValue parameter property value of Dfheiblk
     */
    public void setDfheiblk(String _paramValue)
    {
        if(_context==null) setup(null);
        lnk.eibtime_OF_dfheiblk.move(_paramValue.length());
        lnk.eibdate_OF_dfheiblk.moveMax(_paramValue);
    }
    
    /**
     * Dfhcommarea property (length 837)
     * @param paramValue parameter property value of Dfhcommarea
     */
    public void setDfhcommarea(String _paramValue)
    {
        if(_context==null) setup(null);
        lnk.dfhcommarea.move(_paramValue);
    }
    public int getElasticCobolMajorVersion() { return 17; }
    public int getElasticCobolMinorVersion() { return 8; }
    public int getElasticCobolSubminorVersion() { return 24; }
    public String getElasticCobolBuildTimestamp() { return "(Build Aug 29 2017 11:46:34)"; }
    
    public void link(com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _transactionEnvironment,com.heirloomcomputing.etp.transaction.link.CommArea _commArea,com.heirloomcomputing.etp.transaction.bridge.BridgeFacility _facility,com.heirloomcomputing.etp.transaction.link.Environment _environment)
    {
        _setTransactionEnvironment(_transactionEnvironment);
        // Setup basic program functionality
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        com.heirloomcomputing.etp.transaction.link.CommArea _previousCommArea=_transactionEnvironment.getCommArea();
        _transactionEnvironment.setCommArea(_commArea);
        if(_commArea!=null)
        {
            lnk.dfhcommarea.setPointerToBytes(_commArea.toByteArrayNoCopy());
        }
        else
        {
            lnk.dfhcommarea.setPointerToBytes((byte[])null);
        }
        lnk.dfheiblk.setPointerToBytes(_transactionEnvironment.getEIB());
        java.util.Calendar _cal=_transactionEnvironment.getTaskStartTime();
        if(_cal!=null)
        {
            int _cal_c=_cal.get(java.util.Calendar.YEAR)/100-19;
            int _cal_y=_cal.get(java.util.Calendar.YEAR)%100;
            int _cal_d=_cal.get(java.util.Calendar.DAY_OF_YEAR);
            lnk.eibdate_OF_dfheiblk.move(_cal_c*100000+_cal_y*1000+_cal_d);
            int _cal_h=_cal.get(java.util.Calendar.HOUR_OF_DAY);
            int _cal_m=_cal.get(java.util.Calendar.MINUTE);
            int _cal_s=_cal.get(java.util.Calendar.SECOND);
            lnk.eibtime_OF_dfheiblk.move(_cal_h*10000+_cal_m*100+_cal_s);
        }
        lnk.eibtaskn_OF_dfheiblk.move(_transactionEnvironment.getTransactionNumber());
        lnk.eibtrmid_OF_dfheiblk.move(_transactionEnvironment.getTerminalId());
        lnk.eibtrnid_OF_dfheiblk.move(_transactionEnvironment.getTransactionId());
        lnk.eibcposn_OF_dfheiblk.move(_transactionEnvironment.getCursorPosition());
        lnk.eibaid_OF_dfheiblk.move(_transactionEnvironment.getAID());
        if(_commArea!=null)
        {
            lnk.eibcalen_OF_dfheiblk.move(_commArea.getLength());
        }
        else
        {
            lnk.eibcalen_OF_dfheiblk.move(0);
        }
        _callArrayInitializer();
        // Call program
        try
        {
            this.run(-1,0);
        }
        finally
        {
            _transactionEnvironment.setCommArea(_previousCommArea);
        }
        _callArrayFinalizer();
    }
    
    
    public void run() // Runnable
    {
        try
        {
            run(-1,-1);
        }
        catch(UnwindException _unwindException)
        {
            return; // completely unwound
        }
        catch(Throwable _anyException)
        {
            CobolException.runtimeError(_context,_anyException);
        }
    }
    
    public void run(int _thread,int _entry) // ICobolInterface
    {
        if(_context==null)
        {
            if(_entry<0) _entry=0;
            setup(null);
        }
        else
        {
            if(_entry<0) _entry=_context.getEntryParagraph();
            _context.setEntryParagraph(0);
        }
        try
        {
            perform(_entry,-1);
            return;
        }
        catch(ExitProgramException _exitProgramException)
        {
            return; // goback
        }
    }
    
    public String redirectCall()
    {
        return null;
    }
    
    static public void main(String _args[]) // application entry
    {
        sqlpaym _programInstance=null;
        try
        {
            _programInstance = new sqlpaym();
            Context.initializeApplication(_programInstance,_args);
            if(_args!=null && _args.length>0)
            {
                _programInstance.setup(null);
                if(_args.length>0) _programInstance.setDfheiblk(_args[0]);
                if(_args.length>1) _programInstance.setDfhcommarea(_args[1]);
            }
            _programInstance.run(-1,-1);
            _programInstance._transenv.end();
            _programInstance._context.exit();
        }
        catch(Throwable _throwableException)
        {
            if (_programInstance != null && _programInstance._context != null && _programInstance._context.getReturnInt() == 0) 
            {
                   _programInstance._context.setReturnCode(1);
                   Context.appReturnCode = _programInstance._context.getReturnInt();
            }
            if(_programInstance!=null&&_programInstance._transenv!=null) _programInstance._transenv.abend(_throwableException,CobolException.isDumpRequested(_throwableException),CobolException.getDumpMessage(_throwableException));
        }
        Context.applicationExit();
    }
    
    public transient Context _context;
    
    public Context setup(Context _passContext)
    {
        _context=_passContext;
        if(_context==null) // create fresh context
        {
            _context=new Context(_passContext,_programId,this);
        }
        else
            _context.setupContext(_passContext,_programId,this);
        wrk=(Wrk)_context.getWrk();
        lnk=(Lnk)_context.getLnk();
        boolean doInitWrk=false;
        boolean doDeclareWrk=false;
        boolean doInitLnk=false;
        boolean doDeclareLnk=false;
        if(wrk==null)
        {
            doInitWrk=true;
            doDeclareWrk=true;
            _context.setWrk(wrk=new Wrk());
        }
        if(lnk==null)
        {
            doInitLnk=true;
            doDeclareLnk=true;
            _context.setLnk(lnk=new Lnk());
        }
        if(doInitWrk) wrk.doInitializations();
        if(doInitLnk) lnk.doInitializations();
        
        
        if(doDeclareWrk) wrk.doDeclarations();
        if(doDeclareLnk) lnk.doDeclarations();
        // Set the transaction environment from Context
        if(_passContext!=null) _setTransactionEnvironment((com.heirloomcomputing.etp.transaction.api.TransactionEnvironment)_passContext.getTransactionEnvironment());
        return _context;
    }
    com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _transenv;
    com.heirloomcomputing.etp.transaction.api.Recovery _recovery=null;
    com.heirloomcomputing.etp.transaction.api.ProgramControl _programControl=null;
    
    public void _setTransactionEnvironment(com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _environment)
    {
        if(_environment==_transenv || _environment==null) return;
        if(_context==null) setup(null);
        _transenv=_environment;
        _recovery=_transenv.obtainServiceRecovery(null);
        _programControl=_transenv.obtainServiceProgramControl(null);
        _context.setTransactionEnvironment(_transenv);
    }
    
    
    public void cancel() // close open files, chance for custom action
    {
    } // end cancel
    
    
    public void close() // close any resources that might have been left open
    {
        if(_context.getExistingSqlContext() != null)
        {
            _context.getExistingSqlContext().getCursors().closeAll();
        }
    } // end close
    
    public void perform(int _procedure) // ICobolInterface
    {
        perform(_procedure,_procedure); // only procedure
    }
    
    public void perform(int _begin,int _end) // ICobolInterface
    {
        _debug_loadWatchpoints(_context.getProgramName());
        try
        {
            for(;;) // forever until stopped
            {
                switch(_begin)
                {
                    
                    case 0: // Initial Paragraph
                    _begin=2; break; // starting paragraph
                    case 2: if( (_begin=main_OF_defaultsection_0()) != 0) break;
                    
                    if( (_begin=cust_not_found_OF_defaultsection_0()) != 0) break;
                    
                    case 3: if( (_begin=sqlerr_OF_defaultsection_0()) != 0) break;
                    
                    if(_end==2) { return   ; } // end SECTION -=-=-=-=-=-=-
                    
                    default: throw ExitProgramException.EXIT_DEFAULT;
                } // end switch
            } // end forever
        }
        catch(UnwindException _unwindException)
        {
            perform(_unwindException.unwind(_context,this),_end);
            return;
        }
        catch(ExitProgramException _exitProgramException)
        {
            throw _exitProgramException;
        }
        catch(Throwable _runtimeException)
        {
            int _resumeAt=_exceptionHandler(_runtimeException,false);
            if(_resumeAt>0) perform(_resumeAt,_resumeAt);
            else throw ExitProgramException.EXIT_RESUME;
        }
    } // end perform(int,int)
    
    public int _exceptionHandler(Throwable _exception,boolean _nextStatementAvailable)
    {
        $X$_exceptionInfo = String.valueOf(_exception.getStackTrace()[0].getLineNumber());
        // if debugging in Eclipse pause 
        CobolExceptionPause cbp = new CobolExceptionPause();
        if(_exception instanceof RuntimeException) throw (RuntimeException)_exception;
        if(_exception instanceof Error) throw (Error)_exception;
        throw new com.heirloomcomputing.ecs.exception.EcObject(_exception);
    }
    public void _sqlClear()
    {
        wrk.sqlcode_OF_sqlca.move(0);
        wrk.sqlstate.move("00000"); // successful execution
        wrk.sqlwarn_OF_sqlca.moveSpaces(); // no warnings
        wrk.sqlerrmc_OF_sqlerrm_OF_sqlca.moveSpaces();
        wrk.sqlerrml_OF_sqlerrm_OF_sqlca.moveZeroes();
    }
    
    public java.sql.Connection _getConnection(String _name) throws java.sql.SQLException
    {
        java.sql.Connection _connection=_transenv.getSqlConnection(_name);
        if(_connection!=null)
        {
            _context.getSqlContext().setConnection(_name,_connection);
        }
        else
        {
            _connection=_context.getSqlContext().getConnection(_name);
            if(_connection!=null)
            {
                _transenv.setSqlConnection(_name,_connection);
            }
        }
        return _connection;
    }
    
    public void _setConnection(Object _reference) throws java.sql.SQLException
    {
        if (_reference instanceof String)
        {
            _transenv.setSqlConnection(_getConnection((String) _reference));
        }
        else
        {
            java.sql.Connection _connection=_transenv.setSqlConnection(_reference);
            _context.getSqlContext().setConnection(_connection);
        }
    }
    
    public int _sqlVendorCode(int _vendorCode,int _desiredCode)
    {
        switch(_desiredCode)
        {
            case  -1: if(_vendorCode>0) return -_vendorCode;
                      if(_vendorCode==0) return -1;
                      return _vendorCode;
            case   0: return 0;
            case 100: return 100;
        }
        return _vendorCode;
    }
    
    public int _sqlWarningHandler(java.sql.SQLWarning _sqlException,int _notFoundLabel,int _warningLabel,int _errorLabel)
    {
        if(_sqlException==null) return -1;
        int _errorCode=_sqlException.getErrorCode();
        String _sqlResult=SqlContext.obtainSqlState(_sqlException);
        wrk.sqlstate.move(_sqlResult);
        if(_sqlResult.startsWith("01"))
        {
            wrk.sqlwarn0_OF_sqlwarn_OF_sqlca.move("W");
            if(_warningLabel!=-1) return _warningLabel; // WHENEVER SQLWARNING HANDLER
        }
        else if(_sqlResult.startsWith("02"))
        {
            if(_notFoundLabel!=-1) return _notFoundLabel; // WHENEVER NOT FOUND HANDLER
        }
        return -1;
    } // end _sqlWarningHandler
    
    public int _sqlExceptionHandler(Throwable _otherException,int _notFoundLabel,int _warningLabel,int _errorLabel)
    {
        String _sqlExceptionText=_otherException.getMessage();
        if(_sqlExceptionText==null) _sqlExceptionText=_otherException.toString();
        wrk.sqlerrmc_OF_sqlerrm_OF_sqlca.move(_sqlExceptionText);
        wrk.sqlerrml_OF_sqlerrm_OF_sqlca.move(_sqlExceptionText.length());
        String _sqlResult=null;
        int _errorCode=-1;
        wrk.sqlstate.move("01000");
        _sqlResult="01";
        if(_sqlResult.startsWith("01"))
        {
            wrk.sqlwarn0_OF_sqlwarn_OF_sqlca.move("W");
            wrk.sqlcode_OF_sqlca.move(_sqlVendorCode(_errorCode,100));
            if(_warningLabel!=-1) return _warningLabel; // WHENEVER SQLWARNING HANDLER
        }
        return -1;
    }
    
    public int _sqlExceptionHandler(java.sql.SQLException _sqlException,int _notFoundLabel,int _warningLabel,int _errorLabel)
    {
        String _sqlExceptionText=_sqlException.getMessage();
        if(_sqlExceptionText==null) _sqlExceptionText=_sqlException.toString();
        wrk.sqlerrmc_OF_sqlerrm_OF_sqlca.move(_sqlExceptionText);
        wrk.sqlerrml_OF_sqlerrm_OF_sqlca.move(_sqlExceptionText.length());
        String _sqlResult=null;
        int _errorCode=0;
        if(_sqlException!=null)
        {
            _errorCode=_sqlException.getErrorCode();
            _sqlResult=SqlContext.obtainSqlState(_sqlException);
            wrk.sqlstate.move(_sqlResult);
        }
        else
        {
            _errorCode=-1;
            wrk.sqlstate.move("01000");
            _sqlResult="01";
        }
        if(_sqlResult.startsWith("01"))
        {
            wrk.sqlwarn0_OF_sqlwarn_OF_sqlca.move("W");
            wrk.sqlcode_OF_sqlca.move(_sqlVendorCode(_errorCode,100));
            if(_warningLabel!=-1) return _warningLabel; // WHENEVER SQLWARNING HANDLER
        }
        else if(_sqlResult.startsWith("02"))
        {
            wrk.sqlcode_OF_sqlca.move(_sqlVendorCode(_errorCode,100));
            if(_notFoundLabel!=-1) return _notFoundLabel; // WHENEVER NOT FOUND HANDLER
        }
        else if(!_sqlResult.startsWith("00"))
        {
            wrk.sqlcode_OF_sqlca.move(_sqlVendorCode(_errorCode,-1));
            if(_errorLabel!=-1) return _errorLabel; // WHENEVER ERROR HANDLER
        } // end if
        return -1;
    } // end _sqlExceptionHandler
    
    
    static public final String _localNameConverter[][]=null;
    static public final Numeric _NCONSTANT_1=(Numeric)(new Numeric("4"));
    static public final Numeric _NCONSTANT_2=(Numeric)(new Numeric("0"));
    static public final Numeric _NCONSTANT_3=(Numeric)(new Numeric("1"));
    static public final Numeric _NCONSTANT_4=(Numeric)(new Numeric("5"));
    static public final Numeric _NCONSTANT_5=(Numeric)(new Numeric("6"));
    static public final Numeric _NCONSTANT_6=(Numeric)(new Numeric("8"));
    static public final Numeric _NCONSTANT_7=(Numeric)(new Numeric("2"));
    static public final Numeric _NCONSTANT_8=(Numeric)(new Numeric("7"));
    static public final Numeric _NCONSTANT_9=(Numeric)(new Numeric("3"));
    static public final Numeric _NCONSTANT_10=(Numeric)(new Numeric("10"));
    static public final Numeric _NCONSTANT_11=(Numeric)(new Numeric("13"));
    static public final Numeric _NCONSTANT_12=(Numeric)(new Numeric("9"));
    static public final Numeric _NCONSTANT_13=(Numeric)(new Numeric("-1"));
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_0=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBERR","EIBERRCD","EIBSYNRB","SYNCPOINT"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_1=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBRSRCE","RETURN"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_2=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBERR","EIBERRCD","EIBSYNRB","ROLLBACK","SYNCPOINT"});
    
    public void _callArrayInitializer()
    {
        Variable.initializeInternalArray();
    }
    
    public void _callArrayFinalizer()
    {
        Variable.finalizeInternalArray();
    }
    
} // end program sqlpaym