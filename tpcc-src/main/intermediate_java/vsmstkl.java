/*
 * Elastic COBOL --> Java Source Code
 *
 * This is a cross-compiler generated Java source-code file whose original
 * source was a COBOL program of the same name.
 *
 * If you want to switch from COBOL maintenance to Java maintenance, you must:
 * 1. edit this file as you see fit,
 * 2. move the resultant file to the java_source folder, and
 * 3. delete the originally named COBOL source file.
 *
 * This program requires ecobol.jar and may also require etrans.jar to execute.
 * These are the Elastic COBOL runtime services (used under license).
 */

import com.heirloomcomputing.ecs.exec.*;

/*
 * PROGRAM-ID vsmstkl
 * Compiled on 2018-02-05 at 12:07:22
 *
 * Generated by:
 * 
 * Elastic COBOL
 * V17.8.24 (Build Aug 29 2017 11:46:34)
 * Copyright (C) 2010-2017 Heirloom Computing
 */

@SuppressWarnings("all")
public class vsmstkl extends CobolBase
implements ICobolProgram, com.heirloomcomputing.ecs.api.ICallTarget, com.heirloomcomputing.ecs.api.ICancelTarget , com.heirloomcomputing.etp.transaction.link.Linkable
{
    static public final String _programId="vsmstkl";
    BreakClass breakPoint = new BreakClass();
    
    static // initializer
    {
        RuntimeEnvironment.setGlobalParameter("DT","1");
        Variable.completeInitialization();
    }
    
    
    @SuppressWarnings("all")
    public class Wrk              implements Section
    {
        public void doDeclarations()
        {
            try
            {
                declarations();
            }
            catch(Exception _initializerException)
            {
                CobolException.runtimeError(_context,"INTERNAL ERROR: Cannot initialize variable storage for vsmstkl section 'Wrk'",_initializerException);
            }
        }
        
        
        public void doInitializations()
        {
            w_id_OF_warehouse_key_OF_w_record=new DisplayP();
            warehouse_key_OF_w_record=new Variable();
            w_record=new Variable();
            d_w_id_OF_district_key_OF_d_record=new DisplayP();
            d_id_OF_district_key_OF_d_record=new DisplayP();
            district_key_OF_d_record=new Variable();
            d_name_OF_d_record=new Variable();
            d_street_1_OF_d_record=new Variable();
            d_street_2_OF_d_record=new Variable();
            d_city_OF_d_record=new Variable();
            d_state_OF_d_record=new Variable();
            d_zip_OF_d_record=new Variable();
            d_tax_OF_d_record=new DisplayP();
            d_ytd_OF_d_record=new DisplayP();
            d_next_o_id_OF_d_record=new DisplayP();
            d_record=new Variable();
            o_id_OF_order_key_OF_o_record=new DisplayP();
            order_key_OF_o_record=new Variable();
            o_record=new Variable();
            ol_w_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record=new DisplayP();
            ol_d_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record=new DisplayP();
            ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record=new DisplayP();
            order_line_alt_key_OF_order_line_key_OF_ol_record=new Variable();
            order_line_key_OF_ol_record=new Variable();
            ol_i_id_OF_ol_record=new DisplayP();
            ol_supply_w_id_OF_ol_record=new DisplayP();
            ol_delivery_d_OF_ol_record=new Variable();
            ol_quantity_OF_ol_record=new DisplayP();
            ol_amount_OF_ol_record=new DisplayP();
            ol_dist_info_OF_ol_record=new Variable();
            ol_record=new Variable();
            s_w_id_OF_stock_key_OF_s_record=new DisplayP();
            s_i_id_OF_stock_key_OF_s_record=new DisplayP();
            stock_key_OF_s_record=new Variable();
            s_quantity_OF_s_record=new DisplayP();
            s_dist_01_OF_s_record=new Variable();
            s_dist_02_OF_s_record=new Variable();
            s_dist_03_OF_s_record=new Variable();
            s_dist_04_OF_s_record=new Variable();
            s_dist_05_OF_s_record=new Variable();
            s_dist_06_OF_s_record=new Variable();
            s_dist_07_OF_s_record=new Variable();
            s_dist_08_OF_s_record=new Variable();
            s_dist_09_OF_s_record=new Variable();
            s_dist_10_OF_s_record=new Variable();
            s_ytd_OF_s_record=new DisplayP();
            s_order_cnt_OF_s_record=new DisplayP();
            s_remote_cnt_OF_s_record=new DisplayP();
            s_data_OF_s_record=new Variable();
            s_record=new Variable();
            datetime=new Variable();
            i=new Binary();
            stock_ind=new Binary();
            t_s_i_id_OF_stock_tab_OF_filler_6_=new Binary();
            stock_tab_OF_filler_6_=new Variable();
            filler_6_=new Variable();
            response=new Binary();
            cresponse=new DisplayP();
            cresponse2=new DisplayP();
            err_name=new Variable();
            err_fn=new Variable();
            tpc_trace_module_id_OF_tpc_trace_data_block=new Variable();
            trace_vsmstkl_OF_tpc_trace_module_id_OF_tpc_trace_data_block=new Level88("trace_vsmstkl_OF_tpc_trace_module_id_OF_tpc_trace_data_block",tpc_trace_module_id_OF_tpc_trace_data_block, new byte[]{-34}, null, null, null, new Object[]{new byte[]{-34}});
            tpc_trace_call_seq_OF_tpc_trace_data_block=new Variable();
            tpc_trace_call_type_OF_tpc_trace_data_block=new Variable();
            trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block=new Level88("trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block",tpc_trace_call_type_OF_tpc_trace_data_block, new byte[]{3}, null, null, null, new Object[]{new byte[]{3}});
            trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block=new Level88("trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block",tpc_trace_call_type_OF_tpc_trace_data_block, new byte[]{4}, null, null, null, new Object[]{new byte[]{4}});
            tpc_trace_data_length_OF_tpc_trace_data_block=new Binary();
            tpc_trace_data_OF_tpc_trace_data_block=new Variable();
            tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block=new Variable();
            trace_vsm_read_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block=new Level88("trace_vsm_read_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block",tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block, "R ", null, null, null, new Object[]{"R "});
            trace_vsm_read_next_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block=new Level88("trace_vsm_read_next_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block",tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block, "RN", null, null, null, new Object[]{"RN"});
            trace_vsm_start_br_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block=new Level88("trace_vsm_start_br_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block",tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block, "SB", null, null, null, new Object[]{"SB"});
            tpc_trace_info_OF_filler_7__OF_tpc_trace_data_block=new Variable();
            filler_7__OF_tpc_trace_data_block=new Variable();
            tpc_trace_data_block=new Variable();
        }
        
        public void declarations()
        {
            final Memory _memory=this._memory;
            w_id_OF_warehouse_key_OF_w_record.declare(_memory,8,9,"w_id",9,null,warehouse_key_OF_w_record,null,null,0x04400000);
            warehouse_key_OF_w_record.declare(_memory,8,9,"warehouse_key",null,null,w_record,w_id_OF_warehouse_key_OF_w_record,null,0x00000000);
            w_record.declare(_memory,8,106,"w_record",null,null,null,warehouse_key_OF_w_record,d_record,0x00000000);
            d_w_id_OF_district_key_OF_d_record.declare(_memory,114,9,"d_w_id",9,null,district_key_OF_d_record,null,d_id_OF_district_key_OF_d_record,0x04400000);
            d_id_OF_district_key_OF_d_record.declare(_memory,123,9,"d_id",9,null,district_key_OF_d_record,null,null,0x04400000);
            district_key_OF_d_record.declare(_memory,114,18,"district_key",null,null,d_record,d_w_id_OF_district_key_OF_d_record,d_name_OF_d_record,0x00000000);
            d_name_OF_d_record.declare(_memory,132,10,"d_name",null,null,d_record,null,d_street_1_OF_d_record,0x00000000);
            d_street_1_OF_d_record.declare(_memory,142,20,"d_street_1",null,null,d_record,null,d_street_2_OF_d_record,0x00000000);
            d_street_2_OF_d_record.declare(_memory,162,20,"d_street_2",null,null,d_record,null,d_city_OF_d_record,0x00000000);
            d_city_OF_d_record.declare(_memory,182,20,"d_city",null,null,d_record,null,d_state_OF_d_record,0x00000000);
            d_state_OF_d_record.declare(_memory,202,2,"d_state",null,null,d_record,null,d_zip_OF_d_record,0x00000000);
            d_zip_OF_d_record.declare(_memory,204,9,"d_zip",null,null,d_record,null,d_tax_OF_d_record,0x00000000);
            d_tax_OF_d_record.declare(_memory,213,4,"d_tax",4,null,d_record,null,d_ytd_OF_d_record,0x04400000,4,0);
            d_ytd_OF_d_record.declare(_memory,217,12,"d_ytd",12,null,d_record,null,d_next_o_id_OF_d_record,0x04400000,2,0);
            d_next_o_id_OF_d_record.declare(_memory,229,9,"d_next_o_id",9,null,d_record,null,null,0x04400000);
            d_record.declare(_memory,114,124,"d_record",null,null,null,district_key_OF_d_record,o_record,0x00000000);
            o_id_OF_order_key_OF_o_record.declare(_memory,1114,9,"o_id",9,null,order_key_OF_o_record,null,null,0x04400000);
            order_key_OF_o_record.declare(_memory,1096,27,"order_key",null,null,o_record,o_id_OF_order_key_OF_o_record,null,0x00000000);
            o_record.declare(_memory,1096,101,"o_record",null,null,null,order_key_OF_o_record,ol_record,0x00000000);
            ol_w_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.declare(_memory,1197,9,"ol_w_id",9,null,order_line_alt_key_OF_order_line_key_OF_ol_record,null,ol_d_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record,0x04400000);
            ol_d_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.declare(_memory,1206,9,"ol_d_id",9,null,order_line_alt_key_OF_order_line_key_OF_ol_record,null,ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record,0x04400000);
            ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.declare(_memory,1215,9,"ol_o_id",9,null,order_line_alt_key_OF_order_line_key_OF_ol_record,null,null,0x04400000);
            order_line_alt_key_OF_order_line_key_OF_ol_record.declare(_memory,1197,27,"order_line_alt_key",null,null,order_line_key_OF_ol_record,ol_w_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record,null,0x00000000);
            order_line_key_OF_ol_record.declare(_memory,1197,36,"order_line_key",null,null,ol_record,order_line_alt_key_OF_order_line_key_OF_ol_record,ol_i_id_OF_ol_record,0x00000000);
            ol_i_id_OF_ol_record.declare(_memory,1233,9,"ol_i_id",9,null,ol_record,null,ol_supply_w_id_OF_ol_record,0x04400000);
            ol_supply_w_id_OF_ol_record.declare(_memory,1242,9,"ol_supply_w_id",9,null,ol_record,null,ol_delivery_d_OF_ol_record,0x04400000);
            ol_delivery_d_OF_ol_record.declare(_memory,1251,20,"ol_delivery_d",null,null,ol_record,null,ol_quantity_OF_ol_record,0x00000000);
            ol_quantity_OF_ol_record.declare(_memory,1271,9,"ol_quantity",9,null,ol_record,null,ol_amount_OF_ol_record,0x04400000);
            ol_amount_OF_ol_record.declare(_memory,1280,9,"ol_amount",9,null,ol_record,null,ol_dist_info_OF_ol_record,0x04400000);
            ol_dist_info_OF_ol_record.declare(_memory,1289,24,"ol_dist_info",null,null,ol_record,null,null,0x00000000);
            ol_record.declare(_memory,1197,116,"ol_record",null,null,null,order_line_key_OF_ol_record,s_record,0x00000000);
            s_w_id_OF_stock_key_OF_s_record.declare(_memory,1410,9,"s_w_id",9,null,stock_key_OF_s_record,null,s_i_id_OF_stock_key_OF_s_record,0x04400000);
            s_i_id_OF_stock_key_OF_s_record.declare(_memory,1419,9,"s_i_id",9,null,stock_key_OF_s_record,null,null,0x04400000);
            stock_key_OF_s_record.declare(_memory,1410,18,"stock_key",null,null,s_record,s_w_id_OF_stock_key_OF_s_record,s_quantity_OF_s_record,0x00000000);
            s_quantity_OF_s_record.declare(_memory,1428,4,"s_quantity",4,null,s_record,null,s_dist_01_OF_s_record,0x04400000);
            s_dist_01_OF_s_record.declare(_memory,1432,24,"s_dist_01",null,null,s_record,null,s_dist_02_OF_s_record,0x00000000);
            s_dist_02_OF_s_record.declare(_memory,1456,24,"s_dist_02",null,null,s_record,null,s_dist_03_OF_s_record,0x00000000);
            s_dist_03_OF_s_record.declare(_memory,1480,24,"s_dist_03",null,null,s_record,null,s_dist_04_OF_s_record,0x00000000);
            s_dist_04_OF_s_record.declare(_memory,1504,24,"s_dist_04",null,null,s_record,null,s_dist_05_OF_s_record,0x00000000);
            s_dist_05_OF_s_record.declare(_memory,1528,24,"s_dist_05",null,null,s_record,null,s_dist_06_OF_s_record,0x00000000);
            s_dist_06_OF_s_record.declare(_memory,1552,24,"s_dist_06",null,null,s_record,null,s_dist_07_OF_s_record,0x00000000);
            s_dist_07_OF_s_record.declare(_memory,1576,24,"s_dist_07",null,null,s_record,null,s_dist_08_OF_s_record,0x00000000);
            s_dist_08_OF_s_record.declare(_memory,1600,24,"s_dist_08",null,null,s_record,null,s_dist_09_OF_s_record,0x00000000);
            s_dist_09_OF_s_record.declare(_memory,1624,24,"s_dist_09",null,null,s_record,null,s_dist_10_OF_s_record,0x00000000);
            s_dist_10_OF_s_record.declare(_memory,1648,24,"s_dist_10",null,null,s_record,null,s_ytd_OF_s_record,0x00000000);
            s_ytd_OF_s_record.declare(_memory,1672,8,"s_ytd",8,null,s_record,null,s_order_cnt_OF_s_record,0x04400000);
            s_order_cnt_OF_s_record.declare(_memory,1680,4,"s_order_cnt",4,null,s_record,null,s_remote_cnt_OF_s_record,0x04400000);
            s_remote_cnt_OF_s_record.declare(_memory,1684,4,"s_remote_cnt",4,null,s_record,null,s_data_OF_s_record,0x04400000);
            s_data_OF_s_record.declare(_memory,1688,50,"s_data",null,null,s_record,null,null,0x00000000);
            s_record.declare(_memory,1410,328,"s_record",null,null,null,stock_key_OF_s_record,datetime,0x00000000);
            datetime.declare(_memory,1752,19,"datetime",null,null,null,null,i,0x00000000);
            i.declare(_memory,1771,4,"i",9,null,null,null,stock_ind,0x04400000);
            stock_ind.declare(_memory,1779,4,"stock_ind",9,null,null,null,filler_6_,0x04400000);
            t_s_i_id_OF_stock_tab_OF_filler_6_.declare(_memory,1785,4,"t_s_i_id",9,null,stock_tab_OF_filler_6_,null,null,0x04400000);
            stock_tab_OF_filler_6_.declare(_memory,1785,8,"stock_tab",null,null,filler_6_,t_s_i_id_OF_stock_tab_OF_filler_6_,null,0x00000000,0,300,stock_ind);
            filler_6_.declare(_memory,1785,2400,"filler_6_",null,null,null,stock_tab_OF_filler_6_,response,0x00000080);
            response.declare(_memory,4185,4,"response",9,null,null,null,cresponse,0x04400000);
            cresponse.declare(_memory,4189,3,"cresponse",3,null,null,null,cresponse2,0x04000000);
            cresponse2.declare(_memory,4192,3,"cresponse2",3,null,null,null,err_name,0x04000000);
            err_name.declare(_memory,4195,24,"err_name",null,null,null,null,err_fn,0x00000000);
            err_fn.declare(_memory,4219,24,"err_fn",null,null,null,null,tpc_trace_data_block,0x00000000);
            tpc_trace_module_id_OF_tpc_trace_data_block.declare(_memory,4327,1,"tpc_trace_module_id",null,null,tpc_trace_data_block,null,tpc_trace_call_seq_OF_tpc_trace_data_block,0x00000000);
            tpc_trace_call_seq_OF_tpc_trace_data_block.declare(_memory,4328,1,"tpc_trace_call_seq",null,null,tpc_trace_data_block,null,tpc_trace_call_type_OF_tpc_trace_data_block,0x00000000);
            tpc_trace_call_type_OF_tpc_trace_data_block.declare(_memory,4329,1,"tpc_trace_call_type",null,null,tpc_trace_data_block,null,tpc_trace_data_length_OF_tpc_trace_data_block,0x00000000);
            tpc_trace_data_length_OF_tpc_trace_data_block.declare(_memory,4330,2,"tpc_trace_data_length",4,null,tpc_trace_data_block,null,tpc_trace_data_OF_tpc_trace_data_block,0x04000000);
            tpc_trace_data_OF_tpc_trace_data_block.declare(_memory,4332,128,"tpc_trace_data",null,null,tpc_trace_data_block,null,filler_7__OF_tpc_trace_data_block,0x00000000);
            tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block.declare(_memory,4334,2,"tpc_trace_vsm_function",null,null,filler_7__OF_tpc_trace_data_block,null,tpc_trace_info_OF_filler_7__OF_tpc_trace_data_block,0x00000000);
            tpc_trace_info_OF_filler_7__OF_tpc_trace_data_block.declare(_memory,4336,124,"tpc_trace_info",null,null,filler_7__OF_tpc_trace_data_block,null,null,0x00000000);
            filler_7__OF_tpc_trace_data_block.declare(_memory,4332,128,"filler_7_",null,null,tpc_trace_data_block,tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block,null,0x00100080,1,1,tpc_trace_data_OF_tpc_trace_data_block);
            tpc_trace_data_block.declare(_memory,4327,133,"tpc_trace_data_block",null,null,null,tpc_trace_module_id_OF_tpc_trace_data_block,null,0x00000000);
            Variable.setUnusedVarsSizes(wrk.w_record);
            
            
            // Declare Java Arrays
            t_s_i_id_OF_stock_tab_OF_filler_6___1=t_s_i_id_OF_stock_tab_OF_filler_6_.createNumericArray1();            
            
        } // end declarations
        
        public  DisplayP w_id_OF_warehouse_key_OF_w_record;
        public  Variable warehouse_key_OF_w_record;
        public  Variable w_record;
        public  DisplayP d_w_id_OF_district_key_OF_d_record;
        public  DisplayP d_id_OF_district_key_OF_d_record;
        public  Variable district_key_OF_d_record;
        public  Variable d_name_OF_d_record;
        public  Variable d_street_1_OF_d_record;
        public  Variable d_street_2_OF_d_record;
        public  Variable d_city_OF_d_record;
        public  Variable d_state_OF_d_record;
        public  Variable d_zip_OF_d_record;
        public  DisplayP d_tax_OF_d_record;
        public  DisplayP d_ytd_OF_d_record;
        public  DisplayP d_next_o_id_OF_d_record;
        public  Variable d_record;
        public  DisplayP o_id_OF_order_key_OF_o_record;
        public  Variable order_key_OF_o_record;
        public  Variable o_record;
        public  DisplayP ol_w_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record;
        public  DisplayP ol_d_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record;
        public  DisplayP ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record;
        public  Variable order_line_alt_key_OF_order_line_key_OF_ol_record;
        public  Variable order_line_key_OF_ol_record;
        public  DisplayP ol_i_id_OF_ol_record;
        public  DisplayP ol_supply_w_id_OF_ol_record;
        public  Variable ol_delivery_d_OF_ol_record;
        public  DisplayP ol_quantity_OF_ol_record;
        public  DisplayP ol_amount_OF_ol_record;
        public  Variable ol_dist_info_OF_ol_record;
        public  Variable ol_record;
        public  DisplayP s_w_id_OF_stock_key_OF_s_record;
        public  DisplayP s_i_id_OF_stock_key_OF_s_record;
        public  Variable stock_key_OF_s_record;
        public  DisplayP s_quantity_OF_s_record;
        public  Variable s_dist_01_OF_s_record;
        public  Variable s_dist_02_OF_s_record;
        public  Variable s_dist_03_OF_s_record;
        public  Variable s_dist_04_OF_s_record;
        public  Variable s_dist_05_OF_s_record;
        public  Variable s_dist_06_OF_s_record;
        public  Variable s_dist_07_OF_s_record;
        public  Variable s_dist_08_OF_s_record;
        public  Variable s_dist_09_OF_s_record;
        public  Variable s_dist_10_OF_s_record;
        public  DisplayP s_ytd_OF_s_record;
        public  DisplayP s_order_cnt_OF_s_record;
        public  DisplayP s_remote_cnt_OF_s_record;
        public  Variable s_data_OF_s_record;
        public  Variable s_record;
        public  Variable datetime;
        public  Binary i;
        public  Binary stock_ind;
        public  Binary t_s_i_id_OF_stock_tab_OF_filler_6_;
        public final Index n_OF_stock_tab_OF_filler_6_=new Index(300);
        public  Variable stock_tab_OF_filler_6_;
        public  Variable filler_6_;
        public  Binary response;
        public  DisplayP cresponse;
        public  DisplayP cresponse2;
        public  Variable err_name;
        public  Variable err_fn;
        public  Variable tpc_trace_module_id_OF_tpc_trace_data_block;
        public Level88 trace_vsmstkl_OF_tpc_trace_module_id_OF_tpc_trace_data_block;
        public  Variable tpc_trace_call_seq_OF_tpc_trace_data_block;
        public  Variable tpc_trace_call_type_OF_tpc_trace_data_block;
        public Level88 trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block;
        public Level88 trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block;
        public  Binary tpc_trace_data_length_OF_tpc_trace_data_block;
        public  Variable tpc_trace_data_OF_tpc_trace_data_block;
        public  Variable tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block;
        public Level88 trace_vsm_read_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block;
        public Level88 trace_vsm_read_next_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block;
        public Level88 trace_vsm_start_br_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block;
        public  Variable tpc_trace_info_OF_filler_7__OF_tpc_trace_data_block;
        public  Variable filler_7__OF_tpc_trace_data_block;
        public  Variable tpc_trace_data_block;
        
        
        // Create Java Arrays
        public Numeric t_s_i_id_OF_stock_tab_OF_filler_6___1[];        
        
        protected final Memory _memory=new UnbufferedMemory(4460,"vsmstkl.Wrk");
        
    } // end Wrk
    public transient Wrk wrk=null; // instance accessor for data section
    
    
    @SuppressWarnings("all")
    public class Lnk              implements Section
    {
        public void doDeclarations()
        {
            try
            {
                declarations();
            }
            catch(Exception _initializerException)
            {
                CobolException.runtimeError(_context,"INTERNAL ERROR: Cannot initialize variable storage for vsmstkl section 'Lnk'",_initializerException);
            }
        }
        
        
        public void doInitializations()
        {
            wid_OF_stock_level_data_OF_dfhcommarea=new DisplayP();
            did_OF_stock_level_data_OF_dfhcommarea=new DisplayP();
            threshold_OF_stock_level_data_OF_dfhcommarea=new DisplayP();
            stockcount_OF_stock_level_data_OF_dfhcommarea=new DisplayP();
            err_OF_common_data_OF_stock_level_data_OF_dfhcommarea=new Variable();
            result_code_OF_common_data_OF_stock_level_data_OF_dfhcommarea=new Binary();
            tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea=new Variable();
            tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea=new Level88("tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea",tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea, "Y", null, null, null, new Object[]{"Y"});
            td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea=new Variable();
            common_data_OF_stock_level_data_OF_dfhcommarea=new Variable();
            stock_level_data_OF_dfhcommarea=new Variable();
            dfhcommarea=new Variable();
            eibtime_OF_dfheiblk=new PackedDecimalI();
            eibdate_OF_dfheiblk=new PackedDecimalI();
            eibtrnid_OF_dfheiblk=new Variable();
            eibtaskn_OF_dfheiblk=new PackedDecimalI();
            eibtrmid_OF_dfheiblk=new Variable();
            dfheigdi_OF_dfheiblk=new Binary();
            eibcposn_OF_dfheiblk=new Binary();
            eibcalen_OF_dfheiblk=new Binary();
            eibaid_OF_dfheiblk=new Variable();
            eibfn_OF_dfheiblk=new Variable();
            eibrcode_OF_dfheiblk=new Variable();
            eibds_OF_dfheiblk=new Variable();
            eibreqid_OF_dfheiblk=new Variable();
            eibrsrce_OF_dfheiblk=new Variable();
            eibsync_OF_dfheiblk=new Variable();
            eibfree_OF_dfheiblk=new Variable();
            eibrecv_OF_dfheiblk=new Variable();
            eibfil01_OF_dfheiblk=new Variable();
            eibatt_OF_dfheiblk=new Variable();
            eibeoc_OF_dfheiblk=new Variable();
            eibfmh_OF_dfheiblk=new Variable();
            eibcompl_OF_dfheiblk=new Variable();
            eibsig_OF_dfheiblk=new Variable();
            eibconf_OF_dfheiblk=new Variable();
            eiberr_OF_dfheiblk=new Variable();
            eiberrcd_OF_dfheiblk=new Variable();
            eibsynrb_OF_dfheiblk=new Variable();
            eibnodat_OF_dfheiblk=new Variable();
            eibresp_OF_dfheiblk=new Binary();
            eibresp2_OF_dfheiblk=new Binary();
            eibrldbk_OF_dfheiblk=new Variable();
            eibsend_OF_dfheiblk=new Variable();
            eiberrmsg_OF_dfheiblk=new Variable();
            dibver_OF_dfheiblk=new Variable();
            dibstat_OF_dfheiblk=new Variable();
            dibsegm_OF_dfheiblk=new Variable();
            dibseglv_OF_dfheiblk=new Variable();
            dibkfbl_OF_dfheiblk=new Binary();
            dibdbdnm_OF_dfheiblk=new Variable();
            dibdborg_OF_dfheiblk=new Variable();
            dfheiblk=new Variable();
        }
        
        public void declarations()
        {
            final Memory _memory=this._memory;
            wid_OF_stock_level_data_OF_dfhcommarea.declare(_memory,0,4,"wid",4,null,stock_level_data_OF_dfhcommarea,null,did_OF_stock_level_data_OF_dfhcommarea,0x04000000);
            did_OF_stock_level_data_OF_dfhcommarea.declare(_memory,4,2,"did",2,null,stock_level_data_OF_dfhcommarea,null,threshold_OF_stock_level_data_OF_dfhcommarea,0x04000000);
            threshold_OF_stock_level_data_OF_dfhcommarea.declare(_memory,6,2,"threshold",2,null,stock_level_data_OF_dfhcommarea,null,stockcount_OF_stock_level_data_OF_dfhcommarea,0x04000000);
            stockcount_OF_stock_level_data_OF_dfhcommarea.declare(_memory,8,3,"stockcount",3,null,stock_level_data_OF_dfhcommarea,null,common_data_OF_stock_level_data_OF_dfhcommarea,0x04000000);
            err_OF_common_data_OF_stock_level_data_OF_dfhcommarea.declare(_memory,11,80,"err",null,null,common_data_OF_stock_level_data_OF_dfhcommarea,null,result_code_OF_common_data_OF_stock_level_data_OF_dfhcommarea,0x00000000);
            result_code_OF_common_data_OF_stock_level_data_OF_dfhcommarea.declare(_memory,171,4,"result_code",9,null,common_data_OF_stock_level_data_OF_dfhcommarea,null,tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea,0x04400000);
            tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea.declare(_memory,175,1,"tpc_trace_flag",null,null,common_data_OF_stock_level_data_OF_dfhcommarea,null,td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea,0x00000000);
            td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.declare(_memory,176,120,"td_data",null,null,common_data_OF_stock_level_data_OF_dfhcommarea,null,null,0x00000000);
            common_data_OF_stock_level_data_OF_dfhcommarea.declare(_memory,11,285,"common_data",null,null,stock_level_data_OF_dfhcommarea,err_OF_common_data_OF_stock_level_data_OF_dfhcommarea,null,0x00000000);
            stock_level_data_OF_dfhcommarea.declare(_memory,0,296,"stock_level_data",null,null,dfhcommarea,wid_OF_stock_level_data_OF_dfhcommarea,null,0x00000000);
            dfhcommarea.declare(_memory,0,296,"dfhcommarea",null,null,null,stock_level_data_OF_dfhcommarea,dfheiblk,0x00000000);
            eibtime_OF_dfheiblk.declare(_memory,296,4,"eibtime",7,Intrinsic.sr_current_julian_time(),dfheiblk,null,eibdate_OF_dfheiblk,0x04400000);
            eibdate_OF_dfheiblk.declare(_memory,300,4,"eibdate",7,Intrinsic.sr_current_julian_date(),dfheiblk,null,eibtrnid_OF_dfheiblk,0x04400000);
            eibtrnid_OF_dfheiblk.declare(_memory,304,4,"eibtrnid",null,null,dfheiblk,null,eibtaskn_OF_dfheiblk,0x00000000);
            eibtaskn_OF_dfheiblk.declare(_memory,308,4,"eibtaskn",7,null,dfheiblk,null,eibtrmid_OF_dfheiblk,0x04400000);
            eibtrmid_OF_dfheiblk.declare(_memory,312,4,"eibtrmid",null,null,dfheiblk,null,dfheigdi_OF_dfheiblk,0x00000000);
            dfheigdi_OF_dfheiblk.declare(_memory,316,2,"dfheigdi",4,null,dfheiblk,null,eibcposn_OF_dfheiblk,0x04400000);
            eibcposn_OF_dfheiblk.declare(_memory,318,2,"eibcposn",4,null,dfheiblk,null,eibcalen_OF_dfheiblk,0x04400000);
            eibcalen_OF_dfheiblk.declare(_memory,320,2,"eibcalen",4,null,dfheiblk,null,eibaid_OF_dfheiblk,0x04400000);
            eibaid_OF_dfheiblk.declare(_memory,322,1,"eibaid",null,null,dfheiblk,null,eibfn_OF_dfheiblk,0x00000000);
            eibfn_OF_dfheiblk.declare(_memory,323,2,"eibfn",null,null,dfheiblk,null,eibrcode_OF_dfheiblk,0x00000000);
            eibrcode_OF_dfheiblk.declare(_memory,325,6,"eibrcode",null,null,dfheiblk,null,eibds_OF_dfheiblk,0x00000000);
            eibds_OF_dfheiblk.declare(_memory,331,8,"eibds",null,null,dfheiblk,null,eibreqid_OF_dfheiblk,0x00000000);
            eibreqid_OF_dfheiblk.declare(_memory,339,8,"eibreqid",null,null,dfheiblk,null,eibrsrce_OF_dfheiblk,0x00000000);
            eibrsrce_OF_dfheiblk.declare(_memory,347,8,"eibrsrce",null,null,dfheiblk,null,eibsync_OF_dfheiblk,0x00000000);
            eibsync_OF_dfheiblk.declare(_memory,355,1,"eibsync",null,null,dfheiblk,null,eibfree_OF_dfheiblk,0x00000000);
            eibfree_OF_dfheiblk.declare(_memory,356,1,"eibfree",null,null,dfheiblk,null,eibrecv_OF_dfheiblk,0x00000000);
            eibrecv_OF_dfheiblk.declare(_memory,357,1,"eibrecv",null,null,dfheiblk,null,eibfil01_OF_dfheiblk,0x00000000);
            eibfil01_OF_dfheiblk.declare(_memory,358,1,"eibfil01",null,null,dfheiblk,null,eibatt_OF_dfheiblk,0x00000000);
            eibatt_OF_dfheiblk.declare(_memory,359,1,"eibatt",null,null,dfheiblk,null,eibeoc_OF_dfheiblk,0x00000000);
            eibeoc_OF_dfheiblk.declare(_memory,360,1,"eibeoc",null,null,dfheiblk,null,eibfmh_OF_dfheiblk,0x00000000);
            eibfmh_OF_dfheiblk.declare(_memory,361,1,"eibfmh",null,null,dfheiblk,null,eibcompl_OF_dfheiblk,0x00000000);
            eibcompl_OF_dfheiblk.declare(_memory,362,1,"eibcompl",null,null,dfheiblk,null,eibsig_OF_dfheiblk,0x00000000);
            eibsig_OF_dfheiblk.declare(_memory,363,1,"eibsig",null,null,dfheiblk,null,eibconf_OF_dfheiblk,0x00000000);
            eibconf_OF_dfheiblk.declare(_memory,364,1,"eibconf",null,null,dfheiblk,null,eiberr_OF_dfheiblk,0x00000000);
            eiberr_OF_dfheiblk.declare(_memory,365,1,"eiberr",null,null,dfheiblk,null,eiberrcd_OF_dfheiblk,0x00000000);
            eiberrcd_OF_dfheiblk.declare(_memory,366,4,"eiberrcd",null,null,dfheiblk,null,eibsynrb_OF_dfheiblk,0x00000000);
            eibsynrb_OF_dfheiblk.declare(_memory,370,1,"eibsynrb",null,null,dfheiblk,null,eibnodat_OF_dfheiblk,0x00000000);
            eibnodat_OF_dfheiblk.declare(_memory,371,1,"eibnodat",null,null,dfheiblk,null,eibresp_OF_dfheiblk,0x00000000);
            eibresp_OF_dfheiblk.declare(_memory,372,4,"eibresp",8,null,dfheiblk,null,eibresp2_OF_dfheiblk,0x04400000);
            eibresp2_OF_dfheiblk.declare(_memory,376,4,"eibresp2",8,null,dfheiblk,null,eibrldbk_OF_dfheiblk,0x04400000);
            eibrldbk_OF_dfheiblk.declare(_memory,380,1,"eibrldbk",null,null,dfheiblk,null,eibsend_OF_dfheiblk,0x00000000);
            eibsend_OF_dfheiblk.declare(_memory,381,1,"eibsend",null,null,dfheiblk,null,eiberrmsg_OF_dfheiblk,0x00000000);
            eiberrmsg_OF_dfheiblk.declare(_memory,382,2013,"eiberrmsg",null,null,dfheiblk,null,dibver_OF_dfheiblk,0x00000000);
            dibver_OF_dfheiblk.declare(_memory,2395,2,"dibver",null,null,dfheiblk,null,dibstat_OF_dfheiblk,0x00000000);
            dibstat_OF_dfheiblk.declare(_memory,2397,2,"dibstat",null,null,dfheiblk,null,dibsegm_OF_dfheiblk,0x00000000);
            dibsegm_OF_dfheiblk.declare(_memory,2399,8,"dibsegm",null,null,dfheiblk,null,dibseglv_OF_dfheiblk,0x00000000);
            dibseglv_OF_dfheiblk.declare(_memory,2407,2,"dibseglv",null,null,dfheiblk,null,dibkfbl_OF_dfheiblk,0x00000000);
            dibkfbl_OF_dfheiblk.declare(_memory,2409,2,"dibkfbl",4,null,dfheiblk,null,dibdbdnm_OF_dfheiblk,0x04400000);
            dibdbdnm_OF_dfheiblk.declare(_memory,2411,8,"dibdbdnm",null,null,dfheiblk,null,dibdborg_OF_dfheiblk,0x00000000);
            dibdborg_OF_dfheiblk.declare(_memory,2419,8,"dibdborg",null,null,dfheiblk,null,null,0x00000000);
            dfheiblk.declare(_memory,296,2131,"dfheiblk",null,null,null,eibtime_OF_dfheiblk,null,0x00000000);
            Variable.setUnusedVarsSizes(lnk.dfhcommarea);
            
            
        } // end declarations
        
        public  DisplayP wid_OF_stock_level_data_OF_dfhcommarea;
        public  DisplayP did_OF_stock_level_data_OF_dfhcommarea;
        public  DisplayP threshold_OF_stock_level_data_OF_dfhcommarea;
        public  DisplayP stockcount_OF_stock_level_data_OF_dfhcommarea;
        public  Variable err_OF_common_data_OF_stock_level_data_OF_dfhcommarea;
        public  Binary result_code_OF_common_data_OF_stock_level_data_OF_dfhcommarea;
        public  Variable tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea;
        public Level88 tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea;
        public  Variable td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea;
        public  Variable common_data_OF_stock_level_data_OF_dfhcommarea;
        public  Variable stock_level_data_OF_dfhcommarea;
        public  Variable dfhcommarea;
        public  PackedDecimalI eibtime_OF_dfheiblk;
        public  PackedDecimalI eibdate_OF_dfheiblk;
        public  Variable eibtrnid_OF_dfheiblk;
        public  PackedDecimalI eibtaskn_OF_dfheiblk;
        public  Variable eibtrmid_OF_dfheiblk;
        public  Binary dfheigdi_OF_dfheiblk;
        public  Binary eibcposn_OF_dfheiblk;
        public  Binary eibcalen_OF_dfheiblk;
        public  Variable eibaid_OF_dfheiblk;
        public  Variable eibfn_OF_dfheiblk;
        public  Variable eibrcode_OF_dfheiblk;
        public  Variable eibds_OF_dfheiblk;
        public  Variable eibreqid_OF_dfheiblk;
        public  Variable eibrsrce_OF_dfheiblk;
        public  Variable eibsync_OF_dfheiblk;
        public  Variable eibfree_OF_dfheiblk;
        public  Variable eibrecv_OF_dfheiblk;
        public  Variable eibfil01_OF_dfheiblk;
        public  Variable eibatt_OF_dfheiblk;
        public  Variable eibeoc_OF_dfheiblk;
        public  Variable eibfmh_OF_dfheiblk;
        public  Variable eibcompl_OF_dfheiblk;
        public  Variable eibsig_OF_dfheiblk;
        public  Variable eibconf_OF_dfheiblk;
        public  Variable eiberr_OF_dfheiblk;
        public  Variable eiberrcd_OF_dfheiblk;
        public  Variable eibsynrb_OF_dfheiblk;
        public  Variable eibnodat_OF_dfheiblk;
        public  Binary eibresp_OF_dfheiblk;
        public  Binary eibresp2_OF_dfheiblk;
        public  Variable eibrldbk_OF_dfheiblk;
        public  Variable eibsend_OF_dfheiblk;
        public  Variable eiberrmsg_OF_dfheiblk;
        public  Variable dibver_OF_dfheiblk;
        public  Variable dibstat_OF_dfheiblk;
        public  Variable dibsegm_OF_dfheiblk;
        public  Variable dibseglv_OF_dfheiblk;
        public  Binary dibkfbl_OF_dfheiblk;
        public  Variable dibdbdnm_OF_dfheiblk;
        public  Variable dibdborg_OF_dfheiblk;
        public  Variable dfheiblk;
        
        
        protected final Memory _memory=new UnbufferedMemory(2427,"vsmstkl.Lnk");
        
    } // end Lnk
    public transient Lnk lnk=null; // instance accessor for data section
    
    public java.lang.Object call(Context _passContext)
    {
        setup(_passContext);
        return callGiving();
    }
    
    public java.lang.Object call(Context _passContext,parameterList _param)
    {
        setup(_passContext);
        return callGiving(_param);
    }
    
    public void call()
    {
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        run(-1,0); // parameters expected, leave at defaults
    } // end call
    
    public void call(parameterList _param)
    {
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        try
        {
            lnk.dfheiblk.ipc_init(_param,0);
            lnk.dfhcommarea.ipc_init(_param,1);
            Context _prevContext=Variable.setCurrContext(_context);
            Variable.setNarg(_param);
            _callArrayInitializer();
            Variable[] _variables=new Variable[]
            {
                lnk.dfheiblk,lnk.dfhcommarea
            };
            Variable.ipc_ready(_variables);
            this.run(-1,0);
            Variable.ipc_finish(_variables,_param,_programId);
            _callArrayFinalizer();
            Variable.ipc_final(_variables,_param);
            Variable.setCurrContext(_prevContext);
        }
        catch(ArrayIndexOutOfBoundsException _linkingExceptionOuter)
        {
            CobolException.runtimeError("Linking Error in Initiation of "+_programId,_linkingExceptionOuter);
        }
    }
    
    public java.lang.Object callGiving()
    {
        call();
        return _context.getReturnCode();
    }
    
    public java.lang.Object call(boolean[] _byRef,java.lang.Object[] _param)
    {
        return callGiving(new parameterList(_byRef,_param));
    }
    
    public java.lang.Object callGiving(parameterList _param)
    {
        call(_param);
        return _context.getReturnCode();
    }
    
    static public final int _main__Label=1;
    static public final int _main_para_OF_main_Label=2;
    
    public final int main_para_OF_main()
    {
        final Wrk wrk=this.wrk;
        wrk.datetime.move("YYYY-MM-DD-HH.MM.SS");
        wrk.w_id_OF_warehouse_key_OF_w_record.move(lnk.wid_OF_stock_level_data_OF_dfhcommarea);
        wrk.d_id_OF_district_key_OF_d_record.move(lnk.did_OF_stock_level_data_OF_dfhcommarea);
        wrk.d_w_id_OF_district_key_OF_d_record.move(wrk.w_id_OF_warehouse_key_OF_w_record);
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_vsmstkl_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{1});
            wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.trace_vsm_read_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_info_OF_filler_7__OF_tpc_trace_data_block.ref(_NCONSTANT_1.toInt(),_NCONSTANT_2.toInt()).move("Di");
            wrk.tpc_trace_info_OF_filler_7__OF_tpc_trace_data_block.ref(_NCONSTANT_3.toInt(),new Numeric( wrk.district_key_OF_d_record.lengthForLengthOfSyntax()).toInt()).move(wrk.district_key_OF_d_record);
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_4);
            boolean _sizeError=false;
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.add(new Numeric( wrk.district_key_OF_d_record.lengthForLengthOfSyntax()));
            
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x0602);
            final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"DISTRICT",wrk.d_record,null,wrk.district_key_OF_d_record};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("READ",_TAGCONSTANT_0,_transactionParameters);
            _fileControl.read(_transenv,_TAGCONSTANT_0,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("READ",_TAGCONSTANT_0,_transactionParameters);
            wrk.response.move(0);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("READ",_transactionException);
            wrk.response.move(_transactionException.getResponseCode());
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("READ",_transactionGeneralException);
            wrk.response.move(-1);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
        }
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_vsmstkl_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{1});
            wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_5);
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        if((wrk.response.compare(_NCONSTANT_5)!=0))
        {
            int _performResult=0;
            if((_performResult=cicserror_OF_main())>0) perform(_performResult,_cicserror_OF_main_Label);
        }
        wrk.o_id_OF_order_key_OF_o_record.move(wrk.d_next_o_id_OF_d_record);
        lnk.stockcount_OF_stock_level_data_OF_dfhcommarea.move(_NCONSTANT_5);
        wrk.ol_w_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.move(wrk.w_id_OF_warehouse_key_OF_w_record);
        wrk.ol_d_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.move(wrk.d_id_OF_district_key_OF_d_record);
        wrk.ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.move(wrk.o_id_OF_order_key_OF_o_record);
        boolean _sizeError=false;
        wrk.ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.sub(_NCONSTANT_6);
        
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_vsmstkl_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{2});
            wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.trace_vsm_start_br_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_info_OF_filler_7__OF_tpc_trace_data_block.ref(_NCONSTANT_1.toInt(),_NCONSTANT_2.toInt()).move("Ol");
            wrk.tpc_trace_info_OF_filler_7__OF_tpc_trace_data_block.ref(_NCONSTANT_3.toInt(),new Numeric( wrk.order_line_alt_key_OF_order_line_key_OF_ol_record.lengthForLengthOfSyntax()).toInt()).move(wrk.order_line_alt_key_OF_order_line_key_OF_ol_record);
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_4);
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.add(new Numeric( wrk.order_line_alt_key_OF_order_line_key_OF_ol_record.lengthForLengthOfSyntax()));
            
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x060c);
            final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"ORDLINE",null,new Integer(27),wrk.order_line_alt_key_OF_order_line_key_OF_ol_record,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("STARTBR",_TAGCONSTANT_1,_transactionParameters);
            _fileControl.startBr(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("STARTBR",_TAGCONSTANT_1,_transactionParameters);
            wrk.response.move(0);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("STARTBR",_transactionException);
            wrk.response.move(_transactionException.getResponseCode());
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x060c));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("STARTBR",_transactionGeneralException);
            wrk.response.move(-1);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
        }
        if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea.isTrue())
        {
            wrk.trace_vsmstkl_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{2});
            wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
            wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
            wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_5);
            boolean _callSuccess=true;
            try
            {
                _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(Throwable _callException)
            {
                _context.setThrowable(_callException);
                _callSuccess=false;
            }
            if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
            {
                throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
            }
        }
        if((wrk.response.compare(_NCONSTANT_5)!=0))
        {
            int _performResult=0;
            if((_performResult=cicserror_OF_main())>0) perform(_performResult,_cicserror_OF_main_Label);
        }
        do // PERFORM WITH TEST AFTER
        {
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_vsmstkl_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{3});
                wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.trace_vsm_read_next_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_info_OF_filler_7__OF_tpc_trace_data_block.ref(_NCONSTANT_1.toInt(),_NCONSTANT_2.toInt()).move("Ol");
                wrk.tpc_trace_info_OF_filler_7__OF_tpc_trace_data_block.ref(_NCONSTANT_3.toInt(),new Numeric( wrk.order_line_alt_key_OF_order_line_key_OF_ol_record.lengthForLengthOfSyntax()).toInt()).move(wrk.order_line_alt_key_OF_order_line_key_OF_ol_record);
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_4);
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.add(new Numeric( wrk.order_line_alt_key_OF_order_line_key_OF_ol_record.lengthForLengthOfSyntax()));
                
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x060e);
                final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"ORDLINE",wrk.ol_record,new Integer(27),null,wrk.order_line_alt_key_OF_order_line_key_OF_ol_record};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("READNEXT",_TAGCONSTANT_2,_transactionParameters);
                _fileControl.readNext(_transenv,_TAGCONSTANT_2,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("READNEXT",_TAGCONSTANT_2,_transactionParameters);
                wrk.response.move(0);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("READNEXT",_transactionException);
                wrk.response.move(_transactionException.getResponseCode());
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x060e));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("READNEXT",_transactionGeneralException);
                wrk.response.move(-1);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
            }
            if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea.isTrue())
            {
                wrk.trace_vsmstkl_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{3});
                wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
                wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_5);
                boolean _callSuccess=true;
                try
                {
                    _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(Throwable _callException)
                {
                    _context.setThrowable(_callException);
                    _callSuccess=false;
                }
                if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                {
                    throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                }
            }
            if((wrk.response.compare(_NCONSTANT_7)==0))
            {
                ; // CONTINUE
            }
            else
            {
                if((wrk.response.compare(_NCONSTANT_5)!=0))
                {
                    int _performResult=0;
                    if((_performResult=cicserror_OF_main())>0) perform(_performResult,_cicserror_OF_main_Label);
                }
                if((wrk.ol_w_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.compare(wrk.w_id_OF_warehouse_key_OF_w_record)!=0) || (wrk.ol_d_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.compare(wrk.d_id_OF_district_key_OF_d_record)!=0) || (wrk.ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.compare(wrk.o_id_OF_order_key_OF_o_record)>=0))
                {
                    ; // CONTINUE
                }
                else
                {
                    wrk.s_w_id_OF_stock_key_OF_s_record.move(wrk.w_id_OF_warehouse_key_OF_w_record);
                    wrk.s_i_id_OF_stock_key_OF_s_record.move(wrk.ol_i_id_OF_ol_record);
                    if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea.isTrue())
                    {
                        wrk.trace_vsmstkl_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                        wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{4});
                        wrk.trace_before_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                        wrk.trace_vsm_read_OF_tpc_trace_vsm_function_OF_filler_7__OF_tpc_trace_data_block.setStatus(true);
                        wrk.tpc_trace_info_OF_filler_7__OF_tpc_trace_data_block.ref(_NCONSTANT_1.toInt(),_NCONSTANT_2.toInt()).move("St");
                        wrk.tpc_trace_info_OF_filler_7__OF_tpc_trace_data_block.ref(_NCONSTANT_3.toInt(),new Numeric( wrk.stock_key_OF_s_record.lengthForLengthOfSyntax()).toInt()).move(wrk.stock_key_OF_s_record);
                        wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_4);
                        wrk.tpc_trace_data_length_OF_tpc_trace_data_block.add(new Numeric( wrk.stock_key_OF_s_record.lengthForLengthOfSyntax()));
                        
                        boolean _callSuccess=true;
                        try
                        {
                            _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                        }
                        catch(UnwindException _unwindException)
                        {
                            return _unwindException.unwind(_context,this);
                        }
                        catch(Throwable _callException)
                        {
                            _context.setThrowable(_callException);
                            _callSuccess=false;
                        }
                        if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                        {
                            throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                        }
                    }
                    try
                    {
                        lnk.eibfn_OF_dfheiblk.move(0x0602);
                        final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"STOCK",wrk.s_record,null,wrk.stock_key_OF_s_record};
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.traceEntry("READ",_TAGCONSTANT_0,_transactionParameters);
                        _fileControl.read(_transenv,_TAGCONSTANT_0,_transactionParameters);
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.traceExit("READ",_TAGCONSTANT_0,_transactionParameters);
                        wrk.response.move(0);
                        lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                        lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                        lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                        lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                    }
                    catch(UnwindException _unwindException)
                    {
                        return _unwindException.unwind(_context,this);
                    }
                    catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                    {
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.trace("READ",_transactionException);
                        wrk.response.move(_transactionException.getResponseCode());
                        lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0602));
                        lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                        lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                        lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                        lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    }
                    catch(java.lang.Throwable _transactionGeneralException)
                    {
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.trace("READ",_transactionGeneralException);
                        wrk.response.move(-1);
                        lnk.eibresp_OF_dfheiblk.move(-1);
                        lnk.eibresp2_OF_dfheiblk.move(0);
                    }
                    if(lnk.tpc_trace_reqd_OF_tpc_trace_flag_OF_common_data_OF_stock_level_data_OF_dfhcommarea.isTrue())
                    {
                        wrk.trace_vsmstkl_OF_tpc_trace_module_id_OF_tpc_trace_data_block.setStatus(true);
                        wrk.tpc_trace_call_seq_OF_tpc_trace_data_block.move(new byte[]{4});
                        wrk.trace_after_call_OF_tpc_trace_call_type_OF_tpc_trace_data_block.setStatus(true);
                        wrk.tpc_trace_data_OF_tpc_trace_data_block.move(Variable.LOW_VALUES);
                        wrk.tpc_trace_data_length_OF_tpc_trace_data_block.move(_NCONSTANT_5);
                        boolean _callSuccess=true;
                        try
                        {
                            _context.call("TPCTRACE","tpctrace",-1,_localNameConverter,new parameterList(new Object[] {wrk.tpc_trace_data_block},new boolean[] {true}),_context.getReturnCode());
                        }
                        catch(UnwindException _unwindException)
                        {
                            return _unwindException.unwind(_context,this);
                        }
                        catch(Throwable _callException)
                        {
                            _context.setThrowable(_callException);
                            _callSuccess=false;
                        }
                        if(!_callSuccess && _context.callFailure(true,"TPCTRACE"))
                        {
                            throw new com.heirloomcomputing.ecs.exception.StopRun("TPCTRACE");
                        }
                    }
                    if((wrk.response.compare(_NCONSTANT_5)!=0))
                    {
                        int _performResult=0;
                        if((_performResult=cicserror_OF_main())>0) perform(_performResult,_cicserror_OF_main_Label);
                    }
                    wrk.stock_ind.move(_NCONSTANT_5);
                    if((wrk.s_quantity_OF_s_record.compare(lnk.threshold_OF_stock_level_data_OF_dfhcommarea)<0))
                    {
                        wrk.n_OF_stock_tab_OF_filler_6_.setToValue(1);
                        wrk.i.move(_NCONSTANT_5);
                        int _searchHigh=0, _searchLow=0, _searchItem=0, _priorSearchItem=0, _searchResult=0;
                        boolean _searchEnd=false;
                        _searchEnd=false;
                        _sizeError=false;
                        
                        for(;;)
                        {
                            if(_searchEnd)
                            {
                                break;
                            }
                            else
                            {
                                if(_sizeError && (wrk.s_i_id_OF_stock_key_OF_s_record.compare(wrk.t_s_i_id_OF_stock_tab_OF_filler_6___1[wrk.n_OF_stock_tab_OF_filler_6_.toInt()])==0))
                                {
                                    wrk.i.move(_NCONSTANT_1);
                                    break;
                                }
                                else
                                {
                                    if(_sizeError) wrk.n_OF_stock_tab_OF_filler_6_.setUp(1);
                                    if(wrk.n_OF_stock_tab_OF_filler_6_.compare(wrk.stock_tab_OF_filler_6_.subOccurs())>0) _searchEnd=true;
                                    _sizeError=true;
                                } // end WHENs
                            } // end else _searchEnd
                        } // end when searchFound
                        if((wrk.i.compare(_NCONSTANT_5)==0))
                        {
                            lnk.stockcount_OF_stock_level_data_OF_dfhcommarea.add(1);
                            
                            wrk.stock_ind.add(1);
                            
                            wrk.t_s_i_id_OF_stock_tab_OF_filler_6___1[wrk.stock_ind.toInt()].move(wrk.s_i_id_OF_stock_key_OF_s_record);
                        }
                    }
                    wrk.stock_ind.move(_NCONSTANT_5);
                }
            }
        } while(!(((wrk.response.compare(_NCONSTANT_7)==0)) || ((wrk.ol_w_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.compare(wrk.w_id_OF_warehouse_key_OF_w_record)!=0) || (wrk.ol_d_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.compare(wrk.d_id_OF_district_key_OF_d_record)!=0) || (wrk.ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.compare(wrk.o_id_OF_order_key_OF_o_record)>=0)))); // end perform with test after
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_3,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_3,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_3,_transactionParameters);
            wrk.response.move(0);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            wrk.response.move(_transactionException.getResponseCode());
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            wrk.response.move(-1);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
        }
        if((wrk.response.compare(_NCONSTANT_5)!=0))
        {
            int _performResult=0;
            if((_performResult=cicserror_OF_main())>0) perform(_performResult,_cicserror_OF_main_Label);
        }
        lnk.result_code_OF_common_data_OF_stock_level_data_OF_dfhcommarea.move(_NCONSTANT_5);
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x0e08);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("RETURN",_TAGCONSTANT_4,_transactionParameters);
            if(_programControl!=null) _programControl.returnControl(_transenv,_TAGCONSTANT_4,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("RETURN",_TAGCONSTANT_4,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            if(true) throw new UnwindException(UnwindException.RETURN);
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0e08));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _cicserror_Label=5;
    static public final int _defaultpara_0_OF_cicserror_Label=6;
    
    public int defaultpara_0_OF_cicserror()
    {
        wrk.cresponse.move(lnk.eibresp_OF_dfheiblk);
        wrk.cresponse2.move(lnk.eibresp2_OF_dfheiblk);
        if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_5)==0)))
        {
            wrk.err_name.move("NORMAL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_1)==0)))
        {
            wrk.err_name.move("ERROR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_2)==0)))
        {
            wrk.err_name.move("RDATT");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_3)==0)))
        {
            wrk.err_name.move("WRBRK");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_8)==0)))
        {
            wrk.err_name.move("EOF");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_9)==0)))
        {
            wrk.err_name.move("EODS");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_4)==0)))
        {
            wrk.err_name.move("EOC");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_10)==0)))
        {
            wrk.err_name.move("INBFMH");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_11)==0)))
        {
            wrk.err_name.move("ENDINPT");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_12)==0)))
        {
            wrk.err_name.move("NONVAL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_13)==0)))
        {
            wrk.err_name.move("NOSTART");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_14)==0)))
        {
            wrk.err_name.move("TERMIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_15)==0)))
        {
            wrk.err_name.move("FILENOTFOUND");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_7)==0)))
        {
            wrk.err_name.move("NOTFND");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_16)==0)))
        {
            wrk.err_name.move("DUPREC");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_17)==0)))
        {
            wrk.err_name.move("DUPKEY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_18)==0)))
        {
            wrk.err_name.move("INVREQ");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_19)==0)))
        {
            wrk.err_name.move("IOERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_20)==0)))
        {
            wrk.err_name.move("NOSPACE");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_21)==0)))
        {
            wrk.err_name.move("NOTOPEN");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_6)==0)))
        {
            wrk.err_name.move("ENDFILE");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_22)==0)))
        {
            wrk.err_name.move("ILLOGIC");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_23)==0)))
        {
            wrk.err_name.move("LENGERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_24)==0)))
        {
            wrk.err_name.move("QZERO");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_25)==0)))
        {
            wrk.err_name.move("SIGNAL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_26)==0)))
        {
            wrk.err_name.move("QBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_27)==0)))
        {
            wrk.err_name.move("ITEMERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_28)==0)))
        {
            wrk.err_name.move("PGMIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_29)==0)))
        {
            wrk.err_name.move("TRANSIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_30)==0)))
        {
            wrk.err_name.move("ENDDATA");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_31)==0)))
        {
            wrk.err_name.move("EXPIRED");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_32)==0)))
        {
            wrk.err_name.move("RETPAGE");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_33)==0)))
        {
            wrk.err_name.move("RTEFAIL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_34)==0)))
        {
            wrk.err_name.move("RTESOME");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_35)==0)))
        {
            wrk.err_name.move("TSIOERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_36)==0)))
        {
            wrk.err_name.move("MAPFAIL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_37)==0)))
        {
            wrk.err_name.move("INVERRTERM");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_38)==0)))
        {
            wrk.err_name.move("INVMPSZ");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_39)==0)))
        {
            wrk.err_name.move("IGREQID");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_40)==0)))
        {
            wrk.err_name.move("OVERFLOW");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_41)==0)))
        {
            wrk.err_name.move("INVLDC");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_42)==0)))
        {
            wrk.err_name.move("NOSTG");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_43)==0)))
        {
            wrk.err_name.move("JIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_44)==0)))
        {
            wrk.err_name.move("QIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_45)==0)))
        {
            wrk.err_name.move("NOJBUFSP");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_46)==0)))
        {
            wrk.err_name.move("DSSTAT");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_47)==0)))
        {
            wrk.err_name.move("SELNERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_48)==0)))
        {
            wrk.err_name.move("FUNCERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_49)==0)))
        {
            wrk.err_name.move("UNEXPIN");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_50)==0)))
        {
            wrk.err_name.move("NOPASSBKRD");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_51)==0)))
        {
            wrk.err_name.move("NOPASSBKWR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_52)==0)))
        {
            wrk.err_name.move("SYSIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_53)==0)))
        {
            wrk.err_name.move("ISCINVREQ");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_54)==0)))
        {
            wrk.err_name.move("ENQBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_55)==0)))
        {
            wrk.err_name.move("ENVDEFERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_56)==0)))
        {
            wrk.err_name.move("IGREQCD");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_57)==0)))
        {
            wrk.err_name.move("SESSIONERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_58)==0)))
        {
            wrk.err_name.move("SYSBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_59)==0)))
        {
            wrk.err_name.move("SESSBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_60)==0)))
        {
            wrk.err_name.move("NOTALLOC");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_61)==0)))
        {
            wrk.err_name.move("CBIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_62)==0)))
        {
            wrk.err_name.move("INVEXITREQ");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_63)==0)))
        {
            wrk.err_name.move("INVPARTNSET");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_64)==0)))
        {
            wrk.err_name.move("INVPARTN");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_65)==0)))
        {
            wrk.err_name.move("PARTNFAIL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_66)==0)))
        {
            wrk.err_name.move("USERIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_67)==0)))
        {
            wrk.err_name.move("NOTAUTH");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_68)==0)))
        {
            wrk.err_name.move("SUPPRESSED");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_69)==0)))
        {
            wrk.err_name.move("NOSPOOL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_70)==0)))
        {
            wrk.err_name.move("TERMERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_71)==0)))
        {
            wrk.err_name.move("ROLLEDBACK");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_72)==0)))
        {
            wrk.err_name.move("END");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_73)==0)))
        {
            wrk.err_name.move("DISABLED");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_74)==0)))
        {
            wrk.err_name.move("ALLOCERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_75)==0)))
        {
            wrk.err_name.move("STRELERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_76)==0)))
        {
            wrk.err_name.move("OPENERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_77)==0)))
        {
            wrk.err_name.move("SPOLBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_78)==0)))
        {
            wrk.err_name.move("SPOLERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_79)==0)))
        {
            wrk.err_name.move("NODEIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_80)==0)))
        {
            wrk.err_name.move("TASKIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_81)==0)))
        {
            wrk.err_name.move("TCIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_82)==0)))
        {
            wrk.err_name.move("DSNNOTFOUND");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_83)==0)))
        {
            wrk.err_name.move("LOADING");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_84)==0)))
        {
            wrk.err_name.move("MODELIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_85)==0)))
        {
            wrk.err_name.move("OUTDESCRERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_86)==0)))
        {
            wrk.err_name.move("PARTNERIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_87)==0)))
        {
            wrk.err_name.move("PROFILEIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_88)==0)))
        {
            wrk.err_name.move("NETNAMERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_89)==0)))
        {
            wrk.err_name.move("LOCKED");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_90)==0)))
        {
            wrk.err_name.move("RECORDBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_91)==0)))
        {
            wrk.err_name.move("UOWNOTFOUND");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_92)==0)))
        {
            wrk.err_name.move("UOWLNOTFOUND");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_93)==0)))
        {
            wrk.err_name.move("LINKABEND");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_94)==0)))
        {
            wrk.err_name.move("CHANGED");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_95)==0)))
        {
            wrk.err_name.move("PROCESSBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_96)==0)))
        {
            wrk.err_name.move("ACTIVITYBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_97)==0)))
        {
            wrk.err_name.move("PROCESSERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_98)==0)))
        {
            wrk.err_name.move("ACTIVITYERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_99)==0)))
        {
            wrk.err_name.move("CONTAINERERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_100)==0)))
        {
            wrk.err_name.move("EVENTERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_101)==0)))
        {
            wrk.err_name.move("TOKENERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_102)==0)))
        {
            wrk.err_name.move("NOTFINISHED");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_103)==0)))
        {
            wrk.err_name.move("POOLERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_104)==0)))
        {
            wrk.err_name.move("TIMERERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_105)==0)))
        {
            wrk.err_name.move("SYMBOLERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_106)==0)))
        {
            wrk.err_name.move("TEMPLATERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_107)==0)))
        {
            wrk.err_name.move("RESUNAVAIL");
        } else 
        {
            ; // WHEN OTHER
        }
        boolean _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=lnk.err_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string((String)"CICS Error - EIBRESP=",_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string(wrk.cresponse,_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string((String)" RESP2=",_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string(wrk.cresponse2,_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string((String)" RSRCE=",_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string(lnk.eibrsrce_OF_dfheiblk,_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string((String)" (",_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string(wrk.err_name,(String)" ",_defaultPointerIndex);
        if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,2}))==0)))
        {
            wrk.err_fn.move("ADDRESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,4}))==0)))
        {
            wrk.err_fn.move("HANDLE_CONDITION");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,6}))==0)))
        {
            wrk.err_fn.move("HANDLE_AID");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,8}))==0)))
        {
            wrk.err_fn.move("ASSIGN");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,10}))==0)))
        {
            wrk.err_fn.move("IGNORE_CONDITION");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,12}))==0)))
        {
            wrk.err_fn.move("PUSH_HANDLE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,14}))==0)))
        {
            wrk.err_fn.move("POP_HANDLE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,16}))==0)))
        {
            wrk.err_fn.move("ADDRESS_SET");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,2}))==0)))
        {
            wrk.err_fn.move("RECEIVE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,4}))==0)))
        {
            wrk.err_fn.move("SEND");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,6}))==0)))
        {
            wrk.err_fn.move("CONVERSE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,8}))==0)))
        {
            wrk.err_fn.move("ISSUE_EODS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,10}))==0)))
        {
            wrk.err_fn.move("ISSUE_COPY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,12}))==0)))
        {
            wrk.err_fn.move("WAIT_TERMINAL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,14}))==0)))
        {
            wrk.err_fn.move("ISSUE_LOAD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,16}))==0)))
        {
            wrk.err_fn.move("WAIT_SIGNAL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,18}))==0)))
        {
            wrk.err_fn.move("ISSUE_RESET");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,20}))==0)))
        {
            wrk.err_fn.move("ISSUE_DISCONNECT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,22}))==0)))
        {
            wrk.err_fn.move("ISSUE_ENDOUTPUT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,24}))==0)))
        {
            wrk.err_fn.move("ISSUE_ERASEAUP");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,26}))==0)))
        {
            wrk.err_fn.move("ISSUE_ENDFILE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,28}))==0)))
        {
            wrk.err_fn.move("ISSUE_PRINT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,30}))==0)))
        {
            wrk.err_fn.move("ISSUE_SIGNAL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,32}))==0)))
        {
            wrk.err_fn.move("ALLOCATE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,34}))==0)))
        {
            wrk.err_fn.move("FREE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,36}))==0)))
        {
            wrk.err_fn.move("POINT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,38}))==0)))
        {
            wrk.err_fn.move("BUILD_ATTACH");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,40}))==0)))
        {
            wrk.err_fn.move("EXTRACT_ATTACH");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,42}))==0)))
        {
            wrk.err_fn.move("EXTRACT_TCT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,44}))==0)))
        {
            wrk.err_fn.move("WAIT_CONVID");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,46}))==0)))
        {
            wrk.err_fn.move("EXTRACT_PROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,48}))==0)))
        {
            wrk.err_fn.move("ISSUE_ABEND");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,50}))==0)))
        {
            wrk.err_fn.move("CONNECT_PROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,52}))==0)))
        {
            wrk.err_fn.move("ISSUE_CONFIRMATION");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,54}))==0)))
        {
            wrk.err_fn.move("ISSUE_ERROR");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,56}))==0)))
        {
            wrk.err_fn.move("ISSUE_PREPARE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,58}))==0)))
        {
            wrk.err_fn.move("ISSUE_PASS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,60}))==0)))
        {
            wrk.err_fn.move("EXTRACT_LOGONMSG");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,62}))==0)))
        {
            wrk.err_fn.move("EXTRACT_ATTRIBUTES");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,2}))==0)))
        {
            wrk.err_fn.move("READ");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,4}))==0)))
        {
            wrk.err_fn.move("WRITE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,6}))==0)))
        {
            wrk.err_fn.move("REWRITE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,8}))==0)))
        {
            wrk.err_fn.move("DELETE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,10}))==0)))
        {
            wrk.err_fn.move("UNLOCK");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,12}))==0)))
        {
            wrk.err_fn.move("STARTBR");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,14}))==0)))
        {
            wrk.err_fn.move("READNEXT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,16}))==0)))
        {
            wrk.err_fn.move("READPREV");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,18}))==0)))
        {
            wrk.err_fn.move("ENDBR");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,20}))==0)))
        {
            wrk.err_fn.move("RESETBR");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{8,2}))==0)))
        {
            wrk.err_fn.move("WRITEQ_TD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{8,4}))==0)))
        {
            wrk.err_fn.move("READQ_TD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{8,6}))==0)))
        {
            wrk.err_fn.move("DELETEQ_TD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{10,2}))==0)))
        {
            wrk.err_fn.move("WRITEQ_TS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{10,4}))==0)))
        {
            wrk.err_fn.move("READQ_TS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{10,6}))==0)))
        {
            wrk.err_fn.move("DELETEQ_TS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{12,2}))==0)))
        {
            wrk.err_fn.move("GETMAIN");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{12,4}))==0)))
        {
            wrk.err_fn.move("FREEMAIN");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,2}))==0)))
        {
            wrk.err_fn.move("LINK");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,4}))==0)))
        {
            wrk.err_fn.move("XCTL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,6}))==0)))
        {
            wrk.err_fn.move("LOAD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,8}))==0)))
        {
            wrk.err_fn.move("RETURN");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,10}))==0)))
        {
            wrk.err_fn.move("RELEASE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,12}))==0)))
        {
            wrk.err_fn.move("ABEND");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,14}))==0)))
        {
            wrk.err_fn.move("HANDLE_ABEND");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,2}))==0)))
        {
            wrk.err_fn.move("ASKTIME");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,4}))==0)))
        {
            wrk.err_fn.move("DELAY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,6}))==0)))
        {
            wrk.err_fn.move("POST");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,8}))==0)))
        {
            wrk.err_fn.move("START");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,8}))==0)))
        {
            wrk.err_fn.move("START_ATTACH");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,8}))==0)))
        {
            wrk.err_fn.move("START_BREXIT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,10}))==0)))
        {
            wrk.err_fn.move("RETRIEVE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,12}))==0)))
        {
            wrk.err_fn.move("CANCEL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{18,2}))==0)))
        {
            wrk.err_fn.move("WAIT_EVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{18,4}))==0)))
        {
            wrk.err_fn.move("ENQ");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{18,6}))==0)))
        {
            wrk.err_fn.move("DEQ");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{18,8}))==0)))
        {
            wrk.err_fn.move("SUSPEND");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{20,2}))==0)))
        {
            wrk.err_fn.move("WRITE_JOURNALNUM");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{20,4}))==0)))
        {
            wrk.err_fn.move("WAIT_JOURNALNUM");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{20,6}))==0)))
        {
            wrk.err_fn.move("WRITE_JOURNALNAME");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{20,8}))==0)))
        {
            wrk.err_fn.move("WAIT_JOURNALNAME");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{22,2}))==0)))
        {
            wrk.err_fn.move("SYNCPOINT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,2}))==0)))
        {
            wrk.err_fn.move("RECEIVE_MAP");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,4}))==0)))
        {
            wrk.err_fn.move("SEND_MAP");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,6}))==0)))
        {
            wrk.err_fn.move("SEND_TEXT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,8}))==0)))
        {
            wrk.err_fn.move("SEND_PAGE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,10}))==0)))
        {
            wrk.err_fn.move("PURGE_MESSAGE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,12}))==0)))
        {
            wrk.err_fn.move("ROUTE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,14}))==0)))
        {
            wrk.err_fn.move("RECEIVE_PARTN");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,16}))==0)))
        {
            wrk.err_fn.move("SEND_PARTNSET");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,18}))==0)))
        {
            wrk.err_fn.move("SEND_CONTROL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{28,2}))==0)))
        {
            wrk.err_fn.move("DUMP");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,2}))==0)))
        {
            wrk.err_fn.move("ISSUE_ADD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,4}))==0)))
        {
            wrk.err_fn.move("ISSUE_ERASE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,6}))==0)))
        {
            wrk.err_fn.move("ISSUE_REPLACE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,8}))==0)))
        {
            wrk.err_fn.move("ISSUE_ABORT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,10}))==0)))
        {
            wrk.err_fn.move("ISSUE_QUERY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,12}))==0)))
        {
            wrk.err_fn.move("ISSUE_END");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,14}))==0)))
        {
            wrk.err_fn.move("ISSUE_RECEIVE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,16}))==0)))
        {
            wrk.err_fn.move("ISSUE_NOTE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,18}))==0)))
        {
            wrk.err_fn.move("ISSUE_WAIT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,20}))==0)))
        {
            wrk.err_fn.move("ISSUE_SEND");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,2}))==0)))
        {
            wrk.err_fn.move("BIF_DEEDIT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,4}))==0)))
        {
            wrk.err_fn.move("DEFINE_COUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,6}))==0)))
        {
            wrk.err_fn.move("GET_COUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,8}))==0)))
        {
            wrk.err_fn.move("UPDATE_COUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,10}))==0)))
        {
            wrk.err_fn.move("DELETE_COUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,12}))==0)))
        {
            wrk.err_fn.move("REWIND_COUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,14}))==0)))
        {
            wrk.err_fn.move("QUERY_COUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,20}))==0)))
        {
            wrk.err_fn.move("DEFINE_DCOUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,22}))==0)))
        {
            wrk.err_fn.move("GET_DCOUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,24}))==0)))
        {
            wrk.err_fn.move("UPDATE_DCOUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,26}))==0)))
        {
            wrk.err_fn.move("DELETE_DCOUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,28}))==0)))
        {
            wrk.err_fn.move("REWIND_DCOUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,30}))==0)))
        {
            wrk.err_fn.move("QUERY_DCOUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,2}))==0)))
        {
            wrk.err_fn.move("DEFINE_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,4}))==0)))
        {
            wrk.err_fn.move("DEFINE_PROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,6}))==0)))
        {
            wrk.err_fn.move("RUN_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,8}))==0)))
        {
            wrk.err_fn.move("RUN_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,14}))==0)))
        {
            wrk.err_fn.move("ACQUIRE_PROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,16}))==0)))
        {
            wrk.err_fn.move("ACQUIRE_ACTIVITYID");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,18}))==0)))
        {
            wrk.err_fn.move("DELETE_CONTAINER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,20}))==0)))
        {
            wrk.err_fn.move("GET_CONTAINER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,22}))==0)))
        {
            wrk.err_fn.move("PUT_CONTAINER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,24}))==0)))
        {
            wrk.err_fn.move("RESET_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,26}))==0)))
        {
            wrk.err_fn.move("CHECK_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,28}))==0)))
        {
            wrk.err_fn.move("CANCEL_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,30}))==0)))
        {
            wrk.err_fn.move("CANCEL_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,32}))==0)))
        {
            wrk.err_fn.move("SUSPEND_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,34}))==0)))
        {
            wrk.err_fn.move("SUSPEND_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,36}))==0)))
        {
            wrk.err_fn.move("RESUME_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,38}))==0)))
        {
            wrk.err_fn.move("RESUME_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,40}))==0)))
        {
            wrk.err_fn.move("DELETE_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,42}))==0)))
        {
            wrk.err_fn.move("LINK_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,44}))==0)))
        {
            wrk.err_fn.move("LINK_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,46}))==0)))
        {
            wrk.err_fn.move("CANCEL_ACQACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,48}))==0)))
        {
            wrk.err_fn.move("RUN_ACQACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,50}))==0)))
        {
            wrk.err_fn.move("LINK_ACQACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,52}))==0)))
        {
            wrk.err_fn.move("SUSPEND_ACQACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,54}))==0)))
        {
            wrk.err_fn.move("RESUME_ACQACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,56}))==0)))
        {
            wrk.err_fn.move("CHECK_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,58}))==0)))
        {
            wrk.err_fn.move("CHECK_ACQACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,60}))==0)))
        {
            wrk.err_fn.move("RESET_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,2}))==0)))
        {
            wrk.err_fn.move("DEFINE_COMPOSITE_EVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,2}))==0)))
        {
            wrk.err_fn.move("DEFINE_INPUT_EVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,4}))==0)))
        {
            wrk.err_fn.move("DELETE_EVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,8}))==0)))
        {
            wrk.err_fn.move("ADD_SUBEVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,10}))==0)))
        {
            wrk.err_fn.move("REMOVE_SUBEVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,14}))==0)))
        {
            wrk.err_fn.move("TEST_EVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,16}))==0)))
        {
            wrk.err_fn.move("RETRIEVE_REATTACH_EVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,18}))==0)))
        {
            wrk.err_fn.move("RETRIEVE_SUBEVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,20}))==0)))
        {
            wrk.err_fn.move("DEFINE_TIMER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,22}))==0)))
        {
            wrk.err_fn.move("DELETE_TIMER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,24}))==0)))
        {
            wrk.err_fn.move("CHECK_TIMER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,26}))==0)))
        {
            wrk.err_fn.move("FORCE_TIMER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,2}))==0)))
        {
            wrk.err_fn.move("WEB_RECEIVE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,4}))==0)))
        {
            wrk.err_fn.move("WEB_END");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,6}))==0)))
        {
            wrk.err_fn.move("WEB_READ");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,8}))==0)))
        {
            wrk.err_fn.move("WEB_STARTBROWSE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,10}))==0)))
        {
            wrk.err_fn.move("WEB_READNEXT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,12}))==0)))
        {
            wrk.err_fn.move("WEB_ENDBROWSE_HTTPHEADER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,14}))==0)))
        {
            wrk.err_fn.move("WEB_WRITE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,16}))==0)))
        {
            wrk.err_fn.move("WEB_EXTRACT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,20}))==0)))
        {
            wrk.err_fn.move("WEB_RETRIEVE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{60,2}))==0)))
        {
            wrk.err_fn.move("DOCUMENT_CREATE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{60,4}))==0)))
        {
            wrk.err_fn.move("DOCUMENT_INSERT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{60,6}))==0)))
        {
            wrk.err_fn.move("DOCUMENT_RETRIEVE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{60,8}))==0)))
        {
            wrk.err_fn.move("DOCUMENT_SET");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{62,14}))==0)))
        {
            wrk.err_fn.move("EXTRACT_TCPIP");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{62,16}))==0)))
        {
            wrk.err_fn.move("EXTRACT_CERTIFICATE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{72,2}))==0)))
        {
            wrk.err_fn.move("ENTER_TRACENUM");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{72,4}))==0)))
        {
            wrk.err_fn.move("MONITOR");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{74,2}))==0)))
        {
            wrk.err_fn.move("ASKTIME_ABSTIME");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{74,4}))==0)))
        {
            wrk.err_fn.move("FORMATTIME");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{86,2}))==0)))
        {
            wrk.err_fn.move("SPOOLOPEN");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{86,4}))==0)))
        {
            wrk.err_fn.move("SPOOLREAD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{86,6}))==0)))
        {
            wrk.err_fn.move("SPOOLWRITE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{86,16}))==0)))
        {
            wrk.err_fn.move("SPOOLCLOSE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{94,6}))==0)))
        {
            wrk.err_fn.move("CHANGE_TASK");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{94,34}))==0)))
        {
            wrk.err_fn.move("WAIT_EXTERNAL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{94,50}))==0)))
        {
            wrk.err_fn.move("WAITCICS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{106,2}))==0)))
        {
            wrk.err_fn.move("QUERY_SECURITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{108,2}))==0)))
        {
            wrk.err_fn.move("WRITE_OPERATOR");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{108,18}))==0)))
        {
            wrk.err_fn.move("ISSUE_DFHWTO");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{116,2}))==0)))
        {
            wrk.err_fn.move("SIGNON");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{116,4}))==0)))
        {
            wrk.err_fn.move("SIGNOFF");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{116,6}))==0)))
        {
            wrk.err_fn.move("VERIFY_PASSWORD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{116,8}))==0)))
        {
            wrk.err_fn.move("CHANGE_PASSWORD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{126,2}))==0)))
        {
            wrk.err_fn.move("DUMP_TRANSACTION");
        } else 
        {
            ; // WHEN OTHER
        }
        _sizeError=false;
        _defaultPointerIndex.move(1);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string((String)"TRMID=",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string(lnk.eibtrmid_OF_dfheiblk,_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string((String)" TRNID=",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string(lnk.eibtrnid_OF_dfheiblk,_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string((String)" RESP=",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string(wrk.cresponse,_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string((String)" (",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string(wrk.err_name,(String)" ",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string((String)") RESP2=",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string(wrk.cresponse2,_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string((String)" RSRCE=",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string(lnk.eibrsrce_OF_dfheiblk,(String)" ",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string((String)" FN=",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea.string(wrk.err_fn,(String)" ",_defaultPointerIndex);
        final int _loopLimit2=6;
        for(int _loopIndex2=1;_loopIndex2<=_loopLimit2;_loopIndex2++)
        {
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0802);
                final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,lnk.td_data_OF_common_data_OF_stock_level_data_OF_dfhcommarea,new Integer(120),"TPCC",null,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("WRITEQ TD",_TAGCONSTANT_5,_transactionParameters);
                _transientDataControl.write(_transenv,_TAGCONSTANT_5,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("WRITEQ TD",_TAGCONSTANT_5,_transactionParameters);
                wrk.response.move(0);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITEQ TD",_transactionException);
                wrk.response.move(_transactionException.getResponseCode());
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0802));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITEQ TD",_transactionGeneralException);
                wrk.response.move(-1);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
            }
        } // end perform times
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_6,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_6,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_6,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x0e08);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("RETURN",_TAGCONSTANT_4,_transactionParameters);
            if(_programControl!=null) _programControl.returnControl(_transenv,_TAGCONSTANT_4,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("RETURN",_TAGCONSTANT_4,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            if(true) throw new UnwindException(UnwindException.RETURN);
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0e08));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    public int cicserror()
    {
        perform(5,5);
        return 0;
    }
    
    public int main_()
    {
        perform(1,1);
        return 0;
    }
    
    static public final int _cicserror_OF_main_Label=5;
    
    public final int cicserror_OF_main()
    {
        return cicserror();
    }
    
    
    /**
     * Dfheiblk property (length 2131)
     * @return property value of Dfheiblk
     */
    public String getDfheiblk()
    {
        if(_context==null) setup(null);
        return lnk.dfheiblk.toText();
    }
    
    /**
     * Dfheiblk property (length 2131)
     * @return property value of Dfheiblk
     */
    public String getDfheiblkAsString()
    {
        if(_context==null) setup(null);
        return lnk.dfheiblk.toText();
    }
    
    /**
     * Dfhcommarea property (length 296)
     * @return property value of Dfhcommarea
     */
    public String getDfhcommarea()
    {
        if(_context==null) setup(null);
        return lnk.dfhcommarea.toText();
    }
    
    /**
     * Dfhcommarea property (length 296)
     * @return property value of Dfhcommarea
     */
    public String getDfhcommareaAsString()
    {
        if(_context==null) setup(null);
        return lnk.dfhcommarea.toText();
    }
    
    /**
     * Dfheiblk property (length 2131)
     * @param paramValue parameter property value of Dfheiblk
     */
    public void setDfheiblk(String _paramValue)
    {
        if(_context==null) setup(null);
        lnk.eibtime_OF_dfheiblk.move(_paramValue.length());
        lnk.eibdate_OF_dfheiblk.moveMax(_paramValue);
    }
    
    /**
     * Dfhcommarea property (length 296)
     * @param paramValue parameter property value of Dfhcommarea
     */
    public void setDfhcommarea(String _paramValue)
    {
        if(_context==null) setup(null);
        lnk.dfhcommarea.move(_paramValue);
    }
    public int getElasticCobolMajorVersion() { return 17; }
    public int getElasticCobolMinorVersion() { return 8; }
    public int getElasticCobolSubminorVersion() { return 24; }
    public String getElasticCobolBuildTimestamp() { return "(Build Aug 29 2017 11:46:34)"; }
    
    public void link(com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _transactionEnvironment,com.heirloomcomputing.etp.transaction.link.CommArea _commArea,com.heirloomcomputing.etp.transaction.bridge.BridgeFacility _facility,com.heirloomcomputing.etp.transaction.link.Environment _environment)
    {
        _setTransactionEnvironment(_transactionEnvironment);
        // Setup basic program functionality
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        com.heirloomcomputing.etp.transaction.link.CommArea _previousCommArea=_transactionEnvironment.getCommArea();
        _transactionEnvironment.setCommArea(_commArea);
        if(_commArea!=null)
        {
            lnk.dfhcommarea.setPointerToBytes(_commArea.toByteArrayNoCopy());
        }
        else
        {
            lnk.dfhcommarea.setPointerToBytes((byte[])null);
        }
        lnk.dfheiblk.setPointerToBytes(_transactionEnvironment.getEIB());
        java.util.Calendar _cal=_transactionEnvironment.getTaskStartTime();
        if(_cal!=null)
        {
            int _cal_c=_cal.get(java.util.Calendar.YEAR)/100-19;
            int _cal_y=_cal.get(java.util.Calendar.YEAR)%100;
            int _cal_d=_cal.get(java.util.Calendar.DAY_OF_YEAR);
            lnk.eibdate_OF_dfheiblk.move(_cal_c*100000+_cal_y*1000+_cal_d);
            int _cal_h=_cal.get(java.util.Calendar.HOUR_OF_DAY);
            int _cal_m=_cal.get(java.util.Calendar.MINUTE);
            int _cal_s=_cal.get(java.util.Calendar.SECOND);
            lnk.eibtime_OF_dfheiblk.move(_cal_h*10000+_cal_m*100+_cal_s);
        }
        lnk.eibtaskn_OF_dfheiblk.move(_transactionEnvironment.getTransactionNumber());
        lnk.eibtrmid_OF_dfheiblk.move(_transactionEnvironment.getTerminalId());
        lnk.eibtrnid_OF_dfheiblk.move(_transactionEnvironment.getTransactionId());
        lnk.eibcposn_OF_dfheiblk.move(_transactionEnvironment.getCursorPosition());
        lnk.eibaid_OF_dfheiblk.move(_transactionEnvironment.getAID());
        if(_commArea!=null)
        {
            lnk.eibcalen_OF_dfheiblk.move(_commArea.getLength());
        }
        else
        {
            lnk.eibcalen_OF_dfheiblk.move(0);
        }
        _callArrayInitializer();
        // Call program
        try
        {
            this.run(-1,0);
        }
        finally
        {
            _transactionEnvironment.setCommArea(_previousCommArea);
        }
        _callArrayFinalizer();
    }
    
    
    public void run() // Runnable
    {
        try
        {
            run(-1,-1);
        }
        catch(UnwindException _unwindException)
        {
            return; // completely unwound
        }
        catch(Throwable _anyException)
        {
            CobolException.runtimeError(_context,_anyException);
        }
    }
    
    public void run(int _thread,int _entry) // ICobolInterface
    {
        if(_context==null)
        {
            if(_entry<0) _entry=0;
            setup(null);
        }
        else
        {
            if(_entry<0) _entry=_context.getEntryParagraph();
            _context.setEntryParagraph(0);
        }
        try
        {
            perform(_entry,-1);
            return;
        }
        catch(ExitProgramException _exitProgramException)
        {
            return; // goback
        }
    }
    
    public String redirectCall()
    {
        return null;
    }
    
    static public void main(String _args[]) // application entry
    {
        vsmstkl _programInstance=null;
        try
        {
            _programInstance = new vsmstkl();
            Context.initializeApplication(_programInstance,_args);
            if(_args!=null && _args.length>0)
            {
                _programInstance.setup(null);
                if(_args.length>0) _programInstance.setDfheiblk(_args[0]);
                if(_args.length>1) _programInstance.setDfhcommarea(_args[1]);
            }
            _programInstance.run(-1,-1);
            _programInstance._transenv.end();
            _programInstance._context.exit();
        }
        catch(Throwable _throwableException)
        {
            if (_programInstance != null && _programInstance._context != null && _programInstance._context.getReturnInt() == 0) 
            {
                   _programInstance._context.setReturnCode(1);
                   Context.appReturnCode = _programInstance._context.getReturnInt();
            }
            if(_programInstance!=null&&_programInstance._transenv!=null) _programInstance._transenv.abend(_throwableException,CobolException.isDumpRequested(_throwableException),CobolException.getDumpMessage(_throwableException));
        }
        Context.applicationExit();
    }
    
    public transient Context _context;
    
    public Context setup(Context _passContext)
    {
        _context=_passContext;
        if(_context==null) // create fresh context
        {
            _context=new Context(_passContext,_programId,this);
        }
        else
            _context.setupContext(_passContext,_programId,this);
        wrk=(Wrk)_context.getWrk();
        lnk=(Lnk)_context.getLnk();
        boolean doInitWrk=false;
        boolean doDeclareWrk=false;
        boolean doInitLnk=false;
        boolean doDeclareLnk=false;
        if(wrk==null)
        {
            doInitWrk=true;
            doDeclareWrk=true;
            _context.setWrk(wrk=new Wrk());
        }
        if(lnk==null)
        {
            doInitLnk=true;
            doDeclareLnk=true;
            _context.setLnk(lnk=new Lnk());
        }
        if(doInitWrk) wrk.doInitializations();
        if(doInitLnk) lnk.doInitializations();
        
        
        if(doDeclareWrk) wrk.doDeclarations();
        if(doDeclareLnk) lnk.doDeclarations();
        // Set the transaction environment from Context
        if(_passContext!=null) _setTransactionEnvironment((com.heirloomcomputing.etp.transaction.api.TransactionEnvironment)_passContext.getTransactionEnvironment());
        return _context;
    }
    com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _transenv;
    com.heirloomcomputing.etp.transaction.api.FileControl _fileControl=null;
    com.heirloomcomputing.etp.transaction.api.Recovery _recovery=null;
    com.heirloomcomputing.etp.transaction.api.ProgramControl _programControl=null;
    com.heirloomcomputing.etp.transaction.api.TransientDataControl _transientDataControl=null;
    
    public void _setTransactionEnvironment(com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _environment)
    {
        if(_environment==_transenv || _environment==null) return;
        if(_context==null) setup(null);
        _transenv=_environment;
        _fileControl=_transenv.obtainServiceFileControl(null);
        _recovery=_transenv.obtainServiceRecovery(null);
        _programControl=_transenv.obtainServiceProgramControl(null);
        _transientDataControl=_transenv.obtainServiceTransientDataControl(null);
        _context.setTransactionEnvironment(_transenv);
    }
    
    
    public void cancel() // close open files, chance for custom action
    {
    } // end cancel
    
    
    public void close() // close any resources that might have been left open
    {
        if(_context.getExistingSqlContext() != null)
        {
            _context.getExistingSqlContext().getCursors().closeAll();
        }
    } // end close
    
    public void perform(int _procedure) // ICobolInterface
    {
        perform(_procedure,_procedure); // only procedure
    }
    
    public void perform(int _begin,int _end) // ICobolInterface
    {
        _debug_loadWatchpoints(_context.getProgramName());
        try
        {
            for(;;) // forever until stopped
            {
                switch(_begin)
                {
                    
                    case 0: // Initial Paragraph
                    case 1: if( (_begin=main_para_OF_main()) != 0) break;
                    
                    if(_end==1) { return  ; }
                    
                    case 5: if( (_begin=defaultpara_0_OF_cicserror()) != 0) break;
                    
                    if(_end==5) { return   ; } // end SECTION -=-=-=-=-=-=-
                    
                    default: throw ExitProgramException.EXIT_DEFAULT;
                } // end switch
            } // end forever
        }
        catch(UnwindException _unwindException)
        {
            perform(_unwindException.unwind(_context,this),_end);
            return;
        }
        catch(ExitProgramException _exitProgramException)
        {
            throw _exitProgramException;
        }
        catch(Throwable _runtimeException)
        {
            int _resumeAt=_exceptionHandler(_runtimeException,false);
            if(_resumeAt>0) perform(_resumeAt,_resumeAt);
            else throw ExitProgramException.EXIT_RESUME;
        }
    } // end perform(int,int)
    
    public int _exceptionHandler(Throwable _exception,boolean _nextStatementAvailable)
    {
        $X$_exceptionInfo = String.valueOf(_exception.getStackTrace()[0].getLineNumber());
        // if debugging in Eclipse pause 
        CobolExceptionPause cbp = new CobolExceptionPause();
        if(_exception instanceof RuntimeException) throw (RuntimeException)_exception;
        if(_exception instanceof Error) throw (Error)_exception;
        throw new com.heirloomcomputing.ecs.exception.EcObject(_exception);
    }
    
    static public final String _localNameConverter[][]=null;
    static public final Numeric _NCONSTANT_1=(Numeric)(new Numeric("1"));
    static public final Numeric _NCONSTANT_2=(Numeric)(new Numeric("2"));
    static public final Numeric _NCONSTANT_3=(Numeric)(new Numeric("3"));
    static public final Numeric _NCONSTANT_4=(Numeric)(new Numeric("6"));
    static public final Numeric _NCONSTANT_5=(Numeric)(new Numeric("0"));
    static public final Numeric _NCONSTANT_6=(Numeric)(new Numeric("20"));
    static public final Numeric _NCONSTANT_7=(Numeric)(new Numeric("13"));
    static public final Numeric _NCONSTANT_8=(Numeric)(new Numeric("4"));
    static public final Numeric _NCONSTANT_9=(Numeric)(new Numeric("5"));
    static public final Numeric _NCONSTANT_10=(Numeric)(new Numeric("7"));
    static public final Numeric _NCONSTANT_11=(Numeric)(new Numeric("8"));
    static public final Numeric _NCONSTANT_12=(Numeric)(new Numeric("9"));
    static public final Numeric _NCONSTANT_13=(Numeric)(new Numeric("10"));
    static public final Numeric _NCONSTANT_14=(Numeric)(new Numeric("11"));
    static public final Numeric _NCONSTANT_15=(Numeric)(new Numeric("12"));
    static public final Numeric _NCONSTANT_16=(Numeric)(new Numeric("14"));
    static public final Numeric _NCONSTANT_17=(Numeric)(new Numeric("15"));
    static public final Numeric _NCONSTANT_18=(Numeric)(new Numeric("16"));
    static public final Numeric _NCONSTANT_19=(Numeric)(new Numeric("17"));
    static public final Numeric _NCONSTANT_20=(Numeric)(new Numeric("18"));
    static public final Numeric _NCONSTANT_21=(Numeric)(new Numeric("19"));
    static public final Numeric _NCONSTANT_22=(Numeric)(new Numeric("21"));
    static public final Numeric _NCONSTANT_23=(Numeric)(new Numeric("22"));
    static public final Numeric _NCONSTANT_24=(Numeric)(new Numeric("23"));
    static public final Numeric _NCONSTANT_25=(Numeric)(new Numeric("24"));
    static public final Numeric _NCONSTANT_26=(Numeric)(new Numeric("25"));
    static public final Numeric _NCONSTANT_27=(Numeric)(new Numeric("26"));
    static public final Numeric _NCONSTANT_28=(Numeric)(new Numeric("27"));
    static public final Numeric _NCONSTANT_29=(Numeric)(new Numeric("28"));
    static public final Numeric _NCONSTANT_30=(Numeric)(new Numeric("29"));
    static public final Numeric _NCONSTANT_31=(Numeric)(new Numeric("31"));
    static public final Numeric _NCONSTANT_32=(Numeric)(new Numeric("32"));
    static public final Numeric _NCONSTANT_33=(Numeric)(new Numeric("33"));
    static public final Numeric _NCONSTANT_34=(Numeric)(new Numeric("34"));
    static public final Numeric _NCONSTANT_35=(Numeric)(new Numeric("35"));
    static public final Numeric _NCONSTANT_36=(Numeric)(new Numeric("36"));
    static public final Numeric _NCONSTANT_37=(Numeric)(new Numeric("37"));
    static public final Numeric _NCONSTANT_38=(Numeric)(new Numeric("38"));
    static public final Numeric _NCONSTANT_39=(Numeric)(new Numeric("39"));
    static public final Numeric _NCONSTANT_40=(Numeric)(new Numeric("40"));
    static public final Numeric _NCONSTANT_41=(Numeric)(new Numeric("41"));
    static public final Numeric _NCONSTANT_42=(Numeric)(new Numeric("42"));
    static public final Numeric _NCONSTANT_43=(Numeric)(new Numeric("43"));
    static public final Numeric _NCONSTANT_44=(Numeric)(new Numeric("44"));
    static public final Numeric _NCONSTANT_45=(Numeric)(new Numeric("45"));
    static public final Numeric _NCONSTANT_46=(Numeric)(new Numeric("46"));
    static public final Numeric _NCONSTANT_47=(Numeric)(new Numeric("47"));
    static public final Numeric _NCONSTANT_48=(Numeric)(new Numeric("48"));
    static public final Numeric _NCONSTANT_49=(Numeric)(new Numeric("49"));
    static public final Numeric _NCONSTANT_50=(Numeric)(new Numeric("50"));
    static public final Numeric _NCONSTANT_51=(Numeric)(new Numeric("51"));
    static public final Numeric _NCONSTANT_52=(Numeric)(new Numeric("53"));
    static public final Numeric _NCONSTANT_53=(Numeric)(new Numeric("54"));
    static public final Numeric _NCONSTANT_54=(Numeric)(new Numeric("55"));
    static public final Numeric _NCONSTANT_55=(Numeric)(new Numeric("56"));
    static public final Numeric _NCONSTANT_56=(Numeric)(new Numeric("57"));
    static public final Numeric _NCONSTANT_57=(Numeric)(new Numeric("58"));
    static public final Numeric _NCONSTANT_58=(Numeric)(new Numeric("59"));
    static public final Numeric _NCONSTANT_59=(Numeric)(new Numeric("60"));
    static public final Numeric _NCONSTANT_60=(Numeric)(new Numeric("61"));
    static public final Numeric _NCONSTANT_61=(Numeric)(new Numeric("62"));
    static public final Numeric _NCONSTANT_62=(Numeric)(new Numeric("63"));
    static public final Numeric _NCONSTANT_63=(Numeric)(new Numeric("64"));
    static public final Numeric _NCONSTANT_64=(Numeric)(new Numeric("65"));
    static public final Numeric _NCONSTANT_65=(Numeric)(new Numeric("66"));
    static public final Numeric _NCONSTANT_66=(Numeric)(new Numeric("69"));
    static public final Numeric _NCONSTANT_67=(Numeric)(new Numeric("70"));
    static public final Numeric _NCONSTANT_68=(Numeric)(new Numeric("72"));
    static public final Numeric _NCONSTANT_69=(Numeric)(new Numeric("80"));
    static public final Numeric _NCONSTANT_70=(Numeric)(new Numeric("81"));
    static public final Numeric _NCONSTANT_71=(Numeric)(new Numeric("82"));
    static public final Numeric _NCONSTANT_72=(Numeric)(new Numeric("83"));
    static public final Numeric _NCONSTANT_73=(Numeric)(new Numeric("84"));
    static public final Numeric _NCONSTANT_74=(Numeric)(new Numeric("85"));
    static public final Numeric _NCONSTANT_75=(Numeric)(new Numeric("86"));
    static public final Numeric _NCONSTANT_76=(Numeric)(new Numeric("87"));
    static public final Numeric _NCONSTANT_77=(Numeric)(new Numeric("88"));
    static public final Numeric _NCONSTANT_78=(Numeric)(new Numeric("89"));
    static public final Numeric _NCONSTANT_79=(Numeric)(new Numeric("90"));
    static public final Numeric _NCONSTANT_80=(Numeric)(new Numeric("91"));
    static public final Numeric _NCONSTANT_81=(Numeric)(new Numeric("92"));
    static public final Numeric _NCONSTANT_82=(Numeric)(new Numeric("93"));
    static public final Numeric _NCONSTANT_83=(Numeric)(new Numeric("94"));
    static public final Numeric _NCONSTANT_84=(Numeric)(new Numeric("95"));
    static public final Numeric _NCONSTANT_85=(Numeric)(new Numeric("96"));
    static public final Numeric _NCONSTANT_86=(Numeric)(new Numeric("97"));
    static public final Numeric _NCONSTANT_87=(Numeric)(new Numeric("98"));
    static public final Numeric _NCONSTANT_88=(Numeric)(new Numeric("99"));
    static public final Numeric _NCONSTANT_89=(Numeric)(new Numeric("100"));
    static public final Numeric _NCONSTANT_90=(Numeric)(new Numeric("101"));
    static public final Numeric _NCONSTANT_91=(Numeric)(new Numeric("102"));
    static public final Numeric _NCONSTANT_92=(Numeric)(new Numeric("103"));
    static public final Numeric _NCONSTANT_93=(Numeric)(new Numeric("104"));
    static public final Numeric _NCONSTANT_94=(Numeric)(new Numeric("105"));
    static public final Numeric _NCONSTANT_95=(Numeric)(new Numeric("106"));
    static public final Numeric _NCONSTANT_96=(Numeric)(new Numeric("107"));
    static public final Numeric _NCONSTANT_97=(Numeric)(new Numeric("108"));
    static public final Numeric _NCONSTANT_98=(Numeric)(new Numeric("109"));
    static public final Numeric _NCONSTANT_99=(Numeric)(new Numeric("110"));
    static public final Numeric _NCONSTANT_100=(Numeric)(new Numeric("111"));
    static public final Numeric _NCONSTANT_101=(Numeric)(new Numeric("112"));
    static public final Numeric _NCONSTANT_102=(Numeric)(new Numeric("113"));
    static public final Numeric _NCONSTANT_103=(Numeric)(new Numeric("114"));
    static public final Numeric _NCONSTANT_104=(Numeric)(new Numeric("115"));
    static public final Numeric _NCONSTANT_105=(Numeric)(new Numeric("116"));
    static public final Numeric _NCONSTANT_106=(Numeric)(new Numeric("117"));
    static public final Numeric _NCONSTANT_107=(Numeric)(new Numeric("121"));
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_0=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBDS","FILE","INTO","READ","RIDFLD"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_1=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBDS","FILE","GENERIC","KEYLENGTH","RIDFLD","STARTBR"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_2=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBDS","FILE","INTO","KEYLENGTH","READNEXT","RIDFLD"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_3=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBERR","EIBERRCD","EIBSYNRB","SYNCPOINT"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_4=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBRSRCE","RETURN"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_5=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBRSRCE","FROM","LENGTH","QUEUE","TD","WRITEQ"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_6=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBERR","EIBERRCD","EIBSYNRB","ROLLBACK","SYNCPOINT"});
    
    public void _callArrayInitializer()
    {
        Variable.initializeInternalArray();
    }
    
    public void _callArrayFinalizer()
    {
        Variable.finalizeInternalArray();
    }
    
} // end program vsmstkl