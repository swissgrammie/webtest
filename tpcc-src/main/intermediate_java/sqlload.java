/*
 * Elastic COBOL --> Java Source Code
 *
 * This is a cross-compiler generated Java source-code file whose original
 * source was a COBOL program of the same name.
 *
 * If you want to switch from COBOL maintenance to Java maintenance, you must:
 * 1. edit this file as you see fit,
 * 2. move the resultant file to the java_source folder, and
 * 3. delete the originally named COBOL source file.
 *
 * This program requires ecobol.jar and may also require etrans.jar to execute.
 * These are the Elastic COBOL runtime services (used under license).
 */

import com.heirloomcomputing.ecs.exec.*;

/*
 * PROGRAM-ID sqlload
 * Compiled on 2018-02-05 at 12:07:22
 *
 * Generated by:
 * 
 * Elastic COBOL
 * V17.8.24 (Build Aug 29 2017 11:46:34)
 * Copyright (C) 2010-2017 Heirloom Computing
 */

@SuppressWarnings("all")
public class sqlload extends CobolBase
implements ICobolProgram, com.heirloomcomputing.ecs.api.ICallTarget, com.heirloomcomputing.ecs.api.ICancelTarget , com.heirloomcomputing.etp.transaction.link.Linkable
{
    static public final String _programId="sqlload";
    BreakClass breakPoint = new BreakClass();
    
    static // initializer
    {
        RuntimeEnvironment.setGlobalParameter("DT","1");
        Variable.completeInitialization();
    }
    
    
    @SuppressWarnings("all")
    public class Wrk              implements Section
    {
        public void doDeclarations()
        {
            try
            {
                declarations();
            }
            catch(Exception _initializerException)
            {
                CobolException.runtimeError(_context,"INTERNAL ERROR: Cannot initialize variable storage for sqlload section 'Wrk'",_initializerException);
            }
        }
        
        
        public void doInitializations()
        {
            l_maxitems=new Binary();
            l_dist_per_ware=new Binary();
            l_cust_per_dist=new Binary();
            l_ord_per_dist=new Binary();
            l_undel_ord_base=new Binary();
            l_min_name=new Binary();
            l_max_name=new Binary();
            l_name_a=new Binary();
            l_name_c=new Binary();
            s_maxitems=new Binary();
            s_dist_per_ware=new Binary();
            s_cust_per_dist=new Binary();
            s_ord_per_dist=new Binary();
            s_undel_ord_base=new Binary();
            s_min_name=new Binary();
            s_max_name=new Binary();
            s_name_a=new Binary();
            s_name_c=new Binary();
            maxitems=new Binary();
            dist_per_ware=new Binary();
            cust_per_dist=new Binary();
            ord_per_dist=new Binary();
            undel_ord_base=new Binary();
            name_min=new Binary();
            name_max=new Binary();
            name_a=new Binary();
            name_c=new Binary();
            ws_time_start=new DisplayP();
            ws_time_end=new DisplayP();
            ws_timer_start_OF_ws_timer_msg=new Variable();
            _Variable=new Variable();
            ws_timer_end_OF_ws_timer_msg=new Variable();
            ws_timer_msg=new Variable();
            sqlstate=new Variable();
            sqlcode_OF_sqlca=new Binary();
            sqlerrml_OF_sqlerrm_OF_sqlca=new Binary();
            sqlerrmc_OF_sqlerrm_OF_sqlca=new Variable();
            sqlerrm_OF_sqlca=new Variable();
            sqlerrd_OF_sqlca=new Binary();
            sqlwarn0_OF_sqlwarn_OF_sqlca=new Variable();
            sqlwarn_OF_sqlca=new Variable();
            sqlca=new Variable();
            tstamp=new Variable();
            count_ware=new Binary();
            w_id=new Binary();
            w_name=new Variable();
            w_street_1=new Variable();
            w_street_2=new Variable();
            w_city=new Variable();
            w_state=new Variable();
            w_zip=new Variable();
            w_tax=new PackedDecimalI();
            w_ytd=new PackedDecimalI();
            i_id=new Binary();
            i_name=new Variable();
            i_price=new PackedDecimalI();
            i_data=new Variable();
            s_i_id=new Binary();
            s_w_id=new Binary();
            s_quantity=new PackedDecimalI();
            s_dist_01=new Variable();
            s_dist_02=new Variable();
            s_dist_03=new Variable();
            s_dist_04=new Variable();
            s_dist_05=new Variable();
            s_dist_06=new Variable();
            s_dist_07=new Variable();
            s_dist_08=new Variable();
            s_dist_09=new Variable();
            s_dist_10=new Variable();
            s_data=new Variable();
            o_id=new Binary();
            o_d_id=new Binary();
            o_w_id=new Binary();
            o_c_id=new Binary();
            o_carrier_id=new Binary();
            o_ol_cnt=new Binary();
            ol_number=new Binary();
            ol_i_id=new Binary();
            ol_supply_w_id=new Binary();
            ol_quantity=new Binary();
            ol_amount=new Binary();
            ol_dist_info=new Variable();
            d_id=new Binary();
            d_w_id=new Binary();
            d_name=new Variable();
            d_street_1=new Variable();
            d_street_2=new Variable();
            d_city=new Variable();
            d_state=new Variable();
            d_zip=new Variable();
            d_tax=new PackedDecimalI();
            d_ytd=new PackedDecimalI();
            d_next_o_id=new Binary();
            c_id=new Binary();
            c_d_id=new Binary();
            c_w_id=new Binary();
            c_first=new Variable();
            c_middle=new Variable();
            c_last=new Variable();
            c_street_1=new Variable();
            c_street_2=new Variable();
            c_city=new Variable();
            c_state=new Variable();
            c_zip=new Variable();
            c_phone=new Variable();
            c_credit=new Variable();
            c_credit_lim=new PackedDecimalI();
            c_discount=new PackedDecimalI();
            c_balance=new PackedDecimalI();
            c_data_len_OF_c_data=new Binary();
            c_data_data_OF_c_data=new Variable();
            c_data=new Variable();
            h_amount=new PackedDecimalI();
            h_data=new Variable();
            csqlcode=new Variable();
            ws_row_OF_ws_display=new Binary();
            ws_col_OF_ws_display=new Binary();
            ws_cpos_OF_ws_display=new Binary();
            ws_num_OF_ws_display=new Variable();
            ws_display_line_OF_ws_display=new Variable();
            ws_d_tax_OF_ws_display=new Variable();
            ws_w_tax_OF_ws_display=new Variable();
            ws_i_price_OF_ws_display=new Variable();
            ws_ol_amount_OF_ws_display=new Variable();
            ws_display_nbr_OF_ws_display=new Variable();
            ws_display_nb2_OF_ws_display=new Variable();
            ws_display_nb3_OF_ws_display=new Variable();
            ws_display_nb4_OF_ws_display=new Variable();
            ws_display=new Variable();
            i=new Binary();
            todaysdate_OF_current_tstamp=new DisplayP();
            time_in_secs_OF_current_tstamp=new DisplayP();
            current_tstamp=new Variable();
            a=new Binary();
            c=new Binary();
            rand=new Comp2();
            rand_min=new Binary();
            rand_min1=new Binary();
            rand_max=new Binary();
            rand_max1=new Binary();
            rand_num=new Binary();
            rand_num1=new Binary();
            temp=new Binary();
            sub1=new Binary();
            sub2=new Binary();
            sub3=new Binary();
            name_num=new Binary();
            name_res=new Variable();
            chars=new Variable();
            digits=new Variable();
            str_min=new Binary();
            str_max=new Binary();
            str_ind=new Binary();
            str_len=new Binary();
            str_val=new Variable();
            adr_str1=new Variable();
            adr_str2=new Variable();
            adr_city=new Variable();
            adr_state=new Variable();
            adr_zip=new Variable();
            nn_OF_filler_2_=new Variable();
            n_OF_filler_2_=new Variable();
            filler_2_=new Variable();
            cust_temp=new Binary();
            cust_perm_OF_filler_d_=new Binary();
            filler_d_=new Variable();
            sdatasiz=new Binary();
            idatasiz=new Binary();
            orig_OF_filler_e_=new Binary();
            filler_e_=new Variable();
            posn=new Binary();
        }
        
        public void declarations()
        {
            final Memory _memory=this._memory;
            l_maxitems.declare(_memory,8,4,"l_maxitems",9,"100000",null,null,l_dist_per_ware,0x04000000);
            l_dist_per_ware.declare(_memory,12,4,"l_dist_per_ware",9,"10",null,null,l_cust_per_dist,0x04000000);
            l_cust_per_dist.declare(_memory,16,4,"l_cust_per_dist",9,"3000",null,null,l_ord_per_dist,0x04000000);
            l_ord_per_dist.declare(_memory,20,4,"l_ord_per_dist",9,"3000",null,null,l_undel_ord_base,0x04000000);
            l_undel_ord_base.declare(_memory,24,4,"l_undel_ord_base",9,"2100",null,null,l_min_name,0x04000000);
            l_min_name.declare(_memory,28,4,"l_min_name",9,"0",null,null,l_max_name,0x04000000);
            l_max_name.declare(_memory,32,4,"l_max_name",9,"999",null,null,l_name_a,0x04000000);
            l_name_a.declare(_memory,36,4,"l_name_a",9,"255",null,null,l_name_c,0x04000000);
            l_name_c.declare(_memory,40,4,"l_name_c",9,"17",null,null,s_maxitems,0x04000000);
            s_maxitems.declare(_memory,44,4,"s_maxitems",9,"1000",null,null,s_dist_per_ware,0x04000000);
            s_dist_per_ware.declare(_memory,48,4,"s_dist_per_ware",9,"2",null,null,s_cust_per_dist,0x04000000);
            s_cust_per_dist.declare(_memory,52,4,"s_cust_per_dist",9,"300",null,null,s_ord_per_dist,0x04000000);
            s_ord_per_dist.declare(_memory,56,4,"s_ord_per_dist",9,"300",null,null,s_undel_ord_base,0x04000000);
            s_undel_ord_base.declare(_memory,60,4,"s_undel_ord_base",9,"210",null,null,s_min_name,0x04000000);
            s_min_name.declare(_memory,64,4,"s_min_name",9,"0",null,null,s_max_name,0x04000000);
            s_max_name.declare(_memory,68,4,"s_max_name",9,"99",null,null,s_name_a,0x04000000);
            s_name_a.declare(_memory,72,4,"s_name_a",9,"23",null,null,s_name_c,0x04000000);
            s_name_c.declare(_memory,76,4,"s_name_c",9,"3",null,null,maxitems,0x04000000);
            maxitems.declare(_memory,80,4,"maxitems",9,null,null,null,dist_per_ware,0x04000000);
            dist_per_ware.declare(_memory,84,4,"dist_per_ware",9,null,null,null,cust_per_dist,0x04000000);
            cust_per_dist.declare(_memory,88,4,"cust_per_dist",9,null,null,null,ord_per_dist,0x04000000);
            ord_per_dist.declare(_memory,92,4,"ord_per_dist",9,null,null,null,undel_ord_base,0x04000000);
            undel_ord_base.declare(_memory,96,4,"undel_ord_base",9,null,null,null,name_min,0x04000000);
            name_min.declare(_memory,100,4,"name_min",9,null,null,null,name_max,0x04000000);
            name_max.declare(_memory,104,4,"name_max",9,null,null,null,name_a,0x04000000);
            name_a.declare(_memory,108,4,"name_a",9,null,null,null,name_c,0x04000000);
            name_c.declare(_memory,112,4,"name_c",9,null,null,null,ws_time_start,0x04000000);
            ws_time_start.declare(_memory,116,8,"ws_time_start",8,null,null,null,ws_time_end,0x04000000);
            ws_time_end.declare(_memory,124,8,"ws_time_end",8,null,null,null,ws_timer_msg,0x04000000);
            ws_timer_start_OF_ws_timer_msg.declare(_memory,140,20,"ws_timer_start",null,"Started at: hh:mm:ss",ws_timer_msg,null,ws_timer_end_OF_ws_timer_msg,0x00000000);
            _Variable.reset().declare(_memory,160,2,null,null,", ",ws_timer_msg,null,null,0x00000000).notifyParent();
            ws_timer_end_OF_ws_timer_msg.declare(_memory,162,18,"ws_timer_end",null,"Ended at: hh:mm:ss",ws_timer_msg,null,null,0x00000000);
            ws_timer_msg.declare(_memory,140,40,"ws_timer_msg",null,null,null,ws_timer_start_OF_ws_timer_msg,sqlstate,0x00000000);
            sqlstate.declare(_memory,180,5,"sqlstate",null,null,null,null,sqlca,0x00000000);
            sqlcode_OF_sqlca.declare(_memory,197,4,"sqlcode",9,null,sqlca,null,sqlerrm_OF_sqlca,0x04400000);
            sqlerrml_OF_sqlerrm_OF_sqlca.declare(_memory,201,2,"sqlerrml",4,null,sqlerrm_OF_sqlca,null,sqlerrmc_OF_sqlerrm_OF_sqlca,0x04400000);
            sqlerrmc_OF_sqlerrm_OF_sqlca.declare(_memory,203,270,"sqlerrmc",null,null,sqlerrm_OF_sqlca,null,null,0x00000000);
            sqlerrm_OF_sqlca.declare(_memory,201,272,"sqlerrm",null,null,sqlca,sqlerrml_OF_sqlerrm_OF_sqlca,sqlerrd_OF_sqlca,0x00002000);
            sqlerrd_OF_sqlca.declare(_memory,481,4,"sqlerrd",9,null,sqlca,null,sqlwarn_OF_sqlca,0x04400000,1,6,null);
            sqlwarn0_OF_sqlwarn_OF_sqlca.declare(_memory,505,1,"sqlwarn0",null," ",sqlwarn_OF_sqlca,null,null,0x00000000).move(Variable.SPACES);
            _Variable.reset().declare(_memory,506,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,507,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,508,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,509,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,510,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,511,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,512,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,513,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,514,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            _Variable.reset().declare(_memory,515,1,null,null," ",sqlwarn_OF_sqlca,null,null,0x00000000).notifyParent().move(Variable.SPACES);
            sqlwarn_OF_sqlca.declare(_memory,505,11,"sqlwarn",null,null,sqlca,sqlwarn0_OF_sqlwarn_OF_sqlca,null,0x00000000);
            sqlca.declare(_memory,185,331,"sqlca",null,null,null,sqlcode_OF_sqlca,tstamp,0x00000000);
            tstamp.declare(_memory,516,20,"tstamp",null,null,null,null,count_ware,0x00000000);
            count_ware.declare(_memory,536,4,"count_ware",9,null,null,null,w_id,0x04400000);
            w_id.declare(_memory,540,4,"w_id",9,null,null,null,w_name,0x04400000);
            w_name.declare(_memory,544,10,"w_name",null,null,null,null,w_street_1,0x00000000);
            w_street_1.declare(_memory,554,20,"w_street_1",null,null,null,null,w_street_2,0x00000000);
            w_street_2.declare(_memory,574,20,"w_street_2",null,null,null,null,w_city,0x00000000);
            w_city.declare(_memory,594,20,"w_city",null,null,null,null,w_state,0x00000000);
            w_state.declare(_memory,614,2,"w_state",null,null,null,null,w_zip,0x00000000);
            w_zip.declare(_memory,616,9,"w_zip",null,null,null,null,w_tax,0x00000000);
            w_tax.declare(_memory,625,3,"w_tax",4,null,null,null,w_ytd,0x04400000,4,0);
            w_ytd.declare(_memory,628,7,"w_ytd",12,null,null,null,i_id,0x04400000,2,0);
            i_id.declare(_memory,635,4,"i_id",9,null,null,null,i_name,0x04400000);
            i_name.declare(_memory,643,24,"i_name",null,null,null,null,i_price,0x00000000);
            i_price.declare(_memory,667,3,"i_price",5,null,null,null,i_data,0x04400000,2,0);
            i_data.declare(_memory,670,50,"i_data",null,null,null,null,s_i_id,0x00000000);
            s_i_id.declare(_memory,720,4,"s_i_id",9,null,null,null,s_w_id,0x04400000);
            s_w_id.declare(_memory,724,4,"s_w_id",9,null,null,null,s_quantity,0x04400000);
            s_quantity.declare(_memory,728,3,"s_quantity",4,null,null,null,s_dist_01,0x04400000);
            s_dist_01.declare(_memory,731,24,"s_dist_01",null,null,null,null,s_dist_02,0x00000000);
            s_dist_02.declare(_memory,755,24,"s_dist_02",null,null,null,null,s_dist_03,0x00000000);
            s_dist_03.declare(_memory,779,24,"s_dist_03",null,null,null,null,s_dist_04,0x00000000);
            s_dist_04.declare(_memory,803,24,"s_dist_04",null,null,null,null,s_dist_05,0x00000000);
            s_dist_05.declare(_memory,827,24,"s_dist_05",null,null,null,null,s_dist_06,0x00000000);
            s_dist_06.declare(_memory,851,24,"s_dist_06",null,null,null,null,s_dist_07,0x00000000);
            s_dist_07.declare(_memory,875,24,"s_dist_07",null,null,null,null,s_dist_08,0x00000000);
            s_dist_08.declare(_memory,899,24,"s_dist_08",null,null,null,null,s_dist_09,0x00000000);
            s_dist_09.declare(_memory,923,24,"s_dist_09",null,null,null,null,s_dist_10,0x00000000);
            s_dist_10.declare(_memory,947,24,"s_dist_10",null,null,null,null,s_data,0x00000000);
            s_data.declare(_memory,971,50,"s_data",null,null,null,null,o_id,0x00000000);
            o_id.declare(_memory,1021,4,"o_id",9,null,null,null,o_d_id,0x04400000);
            o_d_id.declare(_memory,1025,4,"o_d_id",9,null,null,null,o_w_id,0x04400000);
            o_w_id.declare(_memory,1029,4,"o_w_id",9,null,null,null,o_c_id,0x04400000);
            o_c_id.declare(_memory,1033,4,"o_c_id",9,null,null,null,o_carrier_id,0x04400000);
            o_carrier_id.declare(_memory,1037,4,"o_carrier_id",9,null,null,null,o_ol_cnt,0x04400000);
            o_ol_cnt.declare(_memory,1041,4,"o_ol_cnt",9,null,null,null,ol_number,0x04400000);
            ol_number.declare(_memory,1061,4,"ol_number",9,null,null,null,ol_i_id,0x04400000);
            ol_i_id.declare(_memory,1065,4,"ol_i_id",9,null,null,null,ol_supply_w_id,0x04400000);
            ol_supply_w_id.declare(_memory,1069,4,"ol_supply_w_id",9,null,null,null,ol_quantity,0x04400000);
            ol_quantity.declare(_memory,1073,4,"ol_quantity",9,null,null,null,ol_amount,0x04400000);
            ol_amount.declare(_memory,1077,4,"ol_amount",9,null,null,null,ol_dist_info,0x04400000);
            ol_dist_info.declare(_memory,1081,24,"ol_dist_info",null,null,null,null,d_id,0x00000000);
            d_id.declare(_memory,1112,4,"d_id",9,null,null,null,d_w_id,0x04400000);
            d_w_id.declare(_memory,1116,4,"d_w_id",9,null,null,null,d_name,0x04400000);
            d_name.declare(_memory,1120,10,"d_name",null,null,null,null,d_street_1,0x00000000);
            d_street_1.declare(_memory,1130,20,"d_street_1",null,null,null,null,d_street_2,0x00000000);
            d_street_2.declare(_memory,1150,20,"d_street_2",null,null,null,null,d_city,0x00000000);
            d_city.declare(_memory,1170,20,"d_city",null,null,null,null,d_state,0x00000000);
            d_state.declare(_memory,1190,2,"d_state",null,null,null,null,d_zip,0x00000000);
            d_zip.declare(_memory,1192,9,"d_zip",null,null,null,null,d_tax,0x00000000);
            d_tax.declare(_memory,1201,3,"d_tax",4,null,null,null,d_ytd,0x04400000,4,0);
            d_ytd.declare(_memory,1204,7,"d_ytd",12,null,null,null,d_next_o_id,0x04400000,2,0);
            d_next_o_id.declare(_memory,1211,4,"d_next_o_id",9,null,null,null,c_id,0x04400000);
            c_id.declare(_memory,1215,4,"c_id",9,null,null,null,c_d_id,0x04400000);
            c_d_id.declare(_memory,1219,4,"c_d_id",9,null,null,null,c_w_id,0x04400000);
            c_w_id.declare(_memory,1223,4,"c_w_id",9,null,null,null,c_first,0x04400000);
            c_first.declare(_memory,1227,16,"c_first",null,null,null,null,c_middle,0x00000000);
            c_middle.declare(_memory,1243,2,"c_middle",null,null,null,null,c_last,0x00000000);
            c_last.declare(_memory,1245,16,"c_last",null,null,null,null,c_street_1,0x00000000);
            c_street_1.declare(_memory,1261,20,"c_street_1",null,null,null,null,c_street_2,0x00000000);
            c_street_2.declare(_memory,1281,20,"c_street_2",null,null,null,null,c_city,0x00000000);
            c_city.declare(_memory,1301,20,"c_city",null,null,null,null,c_state,0x00000000);
            c_state.declare(_memory,1321,2,"c_state",null,null,null,null,c_zip,0x00000000);
            c_zip.declare(_memory,1323,9,"c_zip",null,null,null,null,c_phone,0x00000000);
            c_phone.declare(_memory,1332,16,"c_phone",null,null,null,null,c_credit,0x00000000);
            c_credit.declare(_memory,1368,2,"c_credit",null,null,null,null,c_credit_lim,0x00000000);
            c_credit_lim.declare(_memory,1370,7,"c_credit_lim",12,null,null,null,c_discount,0x04400000,2,0);
            c_discount.declare(_memory,1377,3,"c_discount",4,null,null,null,c_balance,0x04400000,4,0);
            c_balance.declare(_memory,1380,7,"c_balance",12,null,null,null,c_data,0x04400000,2,0);
            c_data_len_OF_c_data.declare(_memory,1398,2,"c_data_len",4,null,c_data,null,c_data_data_OF_c_data,0x04400000);
            c_data_data_OF_c_data.declare(_memory,1400,500,"c_data_data",null,null,c_data,null,null,0x00000000);
            c_data.declare(_memory,1398,502,"c_data",null,null,null,c_data_len_OF_c_data,h_amount,0x00002000);
            h_amount.declare(_memory,2402,4,"h_amount",6,null,null,null,h_data,0x04400000,2,0);
            h_data.declare(_memory,2406,24,"h_data",null,null,null,null,csqlcode,0x00000000);
            csqlcode.declare(_memory,2522,10,"csqlcode","+999999999","+999999999",null,null,null,ws_display,0x0c200000);
            ws_row_OF_ws_display.declare(_memory,2532,2,"ws_row",4,"0",ws_display,null,ws_col_OF_ws_display,0x04000000);
            ws_col_OF_ws_display.declare(_memory,2534,2,"ws_col",4,"0",ws_display,null,ws_cpos_OF_ws_display,0x04000000);
            ws_cpos_OF_ws_display.declare(_memory,2536,2,"ws_cpos",4,null,ws_display,null,ws_num_OF_ws_display,0x04000000);
            ws_num_OF_ws_display.declare(_memory,2538,10,"ws_num","+999999999","+999999999",null,ws_display,null,ws_display_line_OF_ws_display,0x0c200000);
            ws_display_line_OF_ws_display.declare(_memory,2548,79,"ws_display_line",null,null,ws_display,null,ws_d_tax_OF_ws_display,0x00000000);
            ws_d_tax_OF_ws_display.declare(_memory,2627,6,"ws_d_tax","-.9999","-.9999",null,ws_display,null,ws_w_tax_OF_ws_display,0x0c200000,4,0);
            ws_w_tax_OF_ws_display.declare(_memory,2633,6,"ws_w_tax","-.9999","-.9999",null,ws_display,null,ws_i_price_OF_ws_display,0x0c200000,4,0);
            ws_i_price_OF_ws_display.declare(_memory,2639,7,"ws_i_price","-999.99","-999.99",null,ws_display,null,ws_ol_amount_OF_ws_display,0x0c200000,2,0);
            ws_ol_amount_OF_ws_display.declare(_memory,2646,9,"ws_ol_amount","-99999.99","-99999.99",null,ws_display,null,ws_display_nbr_OF_ws_display,0x0c200000,2,0);
            ws_display_nbr_OF_ws_display.declare(_memory,2655,7,"ws_display_nbr","ZZZZZ9-","ZZZZZ9-",null,ws_display,null,ws_display_nb2_OF_ws_display,0x0c400000);
            ws_display_nb2_OF_ws_display.declare(_memory,2662,7,"ws_display_nb2","ZZZZZ9-","ZZZZZ9-",null,ws_display,null,ws_display_nb3_OF_ws_display,0x0c400000);
            ws_display_nb3_OF_ws_display.declare(_memory,2669,7,"ws_display_nb3","ZZZZZ9-","ZZZZZ9-",null,ws_display,null,ws_display_nb4_OF_ws_display,0x0c400000);
            ws_display_nb4_OF_ws_display.declare(_memory,2676,7,"ws_display_nb4","ZZZZZ9-","ZZZZZ9-",null,ws_display,null,null,0x0c400000);
            ws_display.declare(_memory,2532,151,"ws_display",null,null,null,ws_row_OF_ws_display,i,0x00000000);
            i.declare(_memory,2683,4,"i",9,null,null,null,current_tstamp,0x04400000);
            todaysdate_OF_current_tstamp.declare(_memory,2687,8,"todaysdate",8,null,current_tstamp,null,time_in_secs_OF_current_tstamp,0x04000000);
            time_in_secs_OF_current_tstamp.declare(_memory,2696,8,"time_in_secs",8,null,current_tstamp,null,null,0x04000000);
            current_tstamp.declare(_memory,2687,17,"current_tstamp",null,null,null,todaysdate_OF_current_tstamp,a,0x00000000);
            a.declare(_memory,2704,4,"a",9,null,null,null,c,0x04400000);
            c.declare(_memory,2708,4,"c",9,null,null,null,rand,0x04400000);
            rand.declare(_memory,2712,8,"rand",null,null,null,null,rand_min,0x04000000);
            rand_min.declare(_memory,2720,4,"rand_min",9,null,null,null,rand_min1,0x04400000);
            rand_min1.declare(_memory,2724,4,"rand_min1",9,null,null,null,rand_max,0x04400000);
            rand_max.declare(_memory,2728,4,"rand_max",9,null,null,null,rand_max1,0x04400000);
            rand_max1.declare(_memory,2732,4,"rand_max1",9,null,null,null,rand_num,0x04400000);
            rand_num.declare(_memory,2736,4,"rand_num",9,null,null,null,rand_num1,0x04400000);
            rand_num1.declare(_memory,2740,4,"rand_num1",9,null,null,null,temp,0x04400000);
            temp.declare(_memory,2744,4,"temp",9,null,null,null,sub1,0x04400000);
            sub1.declare(_memory,2748,4,"sub1",9,null,null,null,sub2,0x04400000);
            sub2.declare(_memory,2752,4,"sub2",9,null,null,null,sub3,0x04400000);
            sub3.declare(_memory,2756,4,"sub3",9,null,null,null,name_num,0x04400000);
            name_num.declare(_memory,2760,4,"name_num",9,null,null,null,name_res,0x04400000);
            name_res.declare(_memory,2764,15,"name_res",null,null,null,null,chars,0x00000000);
            chars.declare(_memory,2779,62,"chars",null,"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",null,null,digits,0x00000000);
            digits.declare(_memory,2841,10,"digits",null,"0123456789",null,null,str_min,0x00000000);
            str_min.declare(_memory,2851,4,"str_min",9,null,null,null,str_max,0x04400000);
            str_max.declare(_memory,2855,4,"str_max",9,null,null,null,str_ind,0x04400000);
            str_ind.declare(_memory,2859,4,"str_ind",9,null,null,null,str_len,0x04400000);
            str_len.declare(_memory,2863,4,"str_len",9,null,null,null,str_val,0x04400000);
            str_val.declare(_memory,2867,500,"str_val",null,null,null,null,adr_str1,0x00000000);
            adr_str1.declare(_memory,3367,20,"adr_str1",null,null,null,null,adr_str2,0x00000000);
            adr_str2.declare(_memory,3387,20,"adr_str2",null,null,null,null,adr_city,0x00000000);
            adr_city.declare(_memory,3407,20,"adr_city",null,null,null,null,adr_state,0x00000000);
            adr_state.declare(_memory,3427,2,"adr_state",null,null,null,null,adr_zip,0x00000000);
            adr_zip.declare(_memory,3429,9,"adr_zip",null,null,null,null,filler_2_,0x00000000);
            _Variable.reset().declare(_memory,3438,5,null,null,"BAR",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3443,5,null,null,"OUGHT",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3448,5,null,null,"ABLE",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3453,5,null,null,"PRI",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3458,5,null,null,"PRES",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3463,5,null,null,"ESE",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3468,5,null,null,"ANTI",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3473,5,null,null,"CALLY",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3478,5,null,null,"ATION",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3483,5,null,null,"EING",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            nn_OF_filler_2_.declare(_memory,3438,50,"nn",null,null,filler_2_,null,n_OF_filler_2_,0x00000000);
            n_OF_filler_2_.declare(_memory,3438,5,"n",null,null,filler_2_,null,null,0x00100000,1,10,nn_OF_filler_2_);
            filler_2_.declare(_memory,3438,50,"filler_2_",null,null,null,nn_OF_filler_2_,cust_temp,0x00000080);
            cust_temp.declare(_memory,3488,4,"cust_temp",9,null,null,null,filler_d_,0x04400000);
            cust_perm_OF_filler_d_.declare(_memory,3492,4,"cust_perm",9,null,filler_d_,null,null,0x04400000,1,3000,null);
            filler_d_.declare(_memory,3492,12000,"filler_d_",null,null,null,cust_perm_OF_filler_d_,sdatasiz,0x00000080);
            sdatasiz.declare(_memory,15492,4,"sdatasiz",9,null,null,null,idatasiz,0x04400000);
            idatasiz.declare(_memory,15496,4,"idatasiz",9,null,null,null,filler_e_,0x04400000);
            orig_OF_filler_e_.declare(_memory,15500,4,"orig",9,null,filler_e_,null,null,0x04400000,1,100000,null);
            filler_e_.declare(_memory,15500,400000,"filler_e_",null,null,null,orig_OF_filler_e_,posn,0x00000080);
            posn.declare(_memory,415500,4,"posn",9,null,null,null,null,0x04400000);
            Variable.setUnusedVarsSizes(wrk.l_maxitems);
            
            
            // Declare Java Arrays
            sqlerrd_OF_sqlca__1=sqlerrd_OF_sqlca.createNumericArray1();            
            orig_OF_filler_e___1=orig_OF_filler_e_.createNumericArray1();            
            cust_perm_OF_filler_d___1=cust_perm_OF_filler_d_.createNumericArray1();            
            n_OF_filler_2___1=n_OF_filler_2_.createArray1();            
            
        } // end declarations
        
        public  Binary l_maxitems;
        public  Binary l_dist_per_ware;
        public  Binary l_cust_per_dist;
        public  Binary l_ord_per_dist;
        public  Binary l_undel_ord_base;
        public  Binary l_min_name;
        public  Binary l_max_name;
        public  Binary l_name_a;
        public  Binary l_name_c;
        public  Binary s_maxitems;
        public  Binary s_dist_per_ware;
        public  Binary s_cust_per_dist;
        public  Binary s_ord_per_dist;
        public  Binary s_undel_ord_base;
        public  Binary s_min_name;
        public  Binary s_max_name;
        public  Binary s_name_a;
        public  Binary s_name_c;
        public  Binary maxitems;
        public  Binary dist_per_ware;
        public  Binary cust_per_dist;
        public  Binary ord_per_dist;
        public  Binary undel_ord_base;
        public  Binary name_min;
        public  Binary name_max;
        public  Binary name_a;
        public  Binary name_c;
        public  DisplayP ws_time_start;
        public  DisplayP ws_time_end;
        public  Variable ws_timer_start_OF_ws_timer_msg;
        public Variable _Variable;
        public  Variable ws_timer_end_OF_ws_timer_msg;
        public  Variable ws_timer_msg;
        public  Variable sqlstate;
        public  Binary sqlcode_OF_sqlca;
        public  Binary sqlerrml_OF_sqlerrm_OF_sqlca;
        public  Variable sqlerrmc_OF_sqlerrm_OF_sqlca;
        public  Variable sqlerrm_OF_sqlca;
        public  Binary sqlerrd_OF_sqlca;
        public  Variable sqlwarn0_OF_sqlwarn_OF_sqlca;
        public  Variable sqlwarn_OF_sqlca;
        public  Variable sqlca;
        public  Variable tstamp;
        public  Binary count_ware;
        public  Binary w_id;
        public  Variable w_name;
        public  Variable w_street_1;
        public  Variable w_street_2;
        public  Variable w_city;
        public  Variable w_state;
        public  Variable w_zip;
        public  PackedDecimalI w_tax;
        public  PackedDecimalI w_ytd;
        public  Binary i_id;
        public  Variable i_name;
        public  PackedDecimalI i_price;
        public  Variable i_data;
        public  Binary s_i_id;
        public  Binary s_w_id;
        public  PackedDecimalI s_quantity;
        public  Variable s_dist_01;
        public  Variable s_dist_02;
        public  Variable s_dist_03;
        public  Variable s_dist_04;
        public  Variable s_dist_05;
        public  Variable s_dist_06;
        public  Variable s_dist_07;
        public  Variable s_dist_08;
        public  Variable s_dist_09;
        public  Variable s_dist_10;
        public  Variable s_data;
        public  Binary o_id;
        public  Binary o_d_id;
        public  Binary o_w_id;
        public  Binary o_c_id;
        public  Binary o_carrier_id;
        public  Binary o_ol_cnt;
        public  Binary ol_number;
        public  Binary ol_i_id;
        public  Binary ol_supply_w_id;
        public  Binary ol_quantity;
        public  Binary ol_amount;
        public  Variable ol_dist_info;
        public  Binary d_id;
        public  Binary d_w_id;
        public  Variable d_name;
        public  Variable d_street_1;
        public  Variable d_street_2;
        public  Variable d_city;
        public  Variable d_state;
        public  Variable d_zip;
        public  PackedDecimalI d_tax;
        public  PackedDecimalI d_ytd;
        public  Binary d_next_o_id;
        public  Binary c_id;
        public  Binary c_d_id;
        public  Binary c_w_id;
        public  Variable c_first;
        public  Variable c_middle;
        public  Variable c_last;
        public  Variable c_street_1;
        public  Variable c_street_2;
        public  Variable c_city;
        public  Variable c_state;
        public  Variable c_zip;
        public  Variable c_phone;
        public  Variable c_credit;
        public  PackedDecimalI c_credit_lim;
        public  PackedDecimalI c_discount;
        public  PackedDecimalI c_balance;
        public  Binary c_data_len_OF_c_data;
        public  Variable c_data_data_OF_c_data;
        public  Variable c_data;
        public  PackedDecimalI h_amount;
        public  Variable h_data;
        public  Variable csqlcode;
        public  Binary ws_row_OF_ws_display;
        public  Binary ws_col_OF_ws_display;
        public  Binary ws_cpos_OF_ws_display;
        public  Variable ws_num_OF_ws_display;
        public  Variable ws_display_line_OF_ws_display;
        public  Variable ws_d_tax_OF_ws_display;
        public  Variable ws_w_tax_OF_ws_display;
        public  Variable ws_i_price_OF_ws_display;
        public  Variable ws_ol_amount_OF_ws_display;
        public  Variable ws_display_nbr_OF_ws_display;
        public  Variable ws_display_nb2_OF_ws_display;
        public  Variable ws_display_nb3_OF_ws_display;
        public  Variable ws_display_nb4_OF_ws_display;
        public  Variable ws_display;
        public  Binary i;
        public  DisplayP todaysdate_OF_current_tstamp;
        public  DisplayP time_in_secs_OF_current_tstamp;
        public  Variable current_tstamp;
        public  Binary a;
        public  Binary c;
        public  Comp2 rand;
        public  Binary rand_min;
        public  Binary rand_min1;
        public  Binary rand_max;
        public  Binary rand_max1;
        public  Binary rand_num;
        public  Binary rand_num1;
        public  Binary temp;
        public  Binary sub1;
        public  Binary sub2;
        public  Binary sub3;
        public  Binary name_num;
        public  Variable name_res;
        public  Variable chars;
        public  Variable digits;
        public  Binary str_min;
        public  Binary str_max;
        public  Binary str_ind;
        public  Binary str_len;
        public  Variable str_val;
        public  Variable adr_str1;
        public  Variable adr_str2;
        public  Variable adr_city;
        public  Variable adr_state;
        public  Variable adr_zip;
        public  Variable nn_OF_filler_2_;
        public  Variable n_OF_filler_2_;
        public  Variable filler_2_;
        public  Binary cust_temp;
        public  Binary cust_perm_OF_filler_d_;
        public  Variable filler_d_;
        public  Binary sdatasiz;
        public  Binary idatasiz;
        public  Binary orig_OF_filler_e_;
        public  Variable filler_e_;
        public  Binary posn;
        
        
        // Create Java Arrays
        public Numeric sqlerrd_OF_sqlca__1[];        
        public Numeric orig_OF_filler_e___1[];        
        public Numeric cust_perm_OF_filler_d___1[];        
        public Variable n_OF_filler_2___1[];        
        
        protected final Memory _memory=new UnbufferedMemory(415504,"sqlload.Wrk");
        
    } // end Wrk
    public transient Wrk wrk=null; // instance accessor for data section
    
    
    @SuppressWarnings("all")
    public class Lnk              implements Section
    {
        public void doDeclarations()
        {
            try
            {
                declarations();
            }
            catch(Exception _initializerException)
            {
                CobolException.runtimeError(_context,"INTERNAL ERROR: Cannot initialize variable storage for sqlload section 'Lnk'",_initializerException);
            }
        }
        
        
        public void doInitializations()
        {
            option_count_OF_option_array_OF_dfhcommarea=new Binary();
            option_debug_OF_option_array_OF_dfhcommarea=new Binary();
            option_remove_OF_option_array_OF_dfhcommarea=new Binary();
            option_erase_OF_option_array_OF_dfhcommarea=new Binary();
            option_create_OF_option_array_OF_dfhcommarea=new Binary();
            option_load_OF_option_array_OF_dfhcommarea=new Binary();
            option_size_OF_option_array_OF_dfhcommarea=new Binary();
            option_display_OF_option_array_OF_dfhcommarea=new Binary();
            option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea=new Level88("option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea",option_display_OF_option_array_OF_dfhcommarea, $N$option_return_display_88, null, null, null, new Object[]{$N$option_return_display_88});
            option_array_OF_dfhcommarea=new Variable();
            dfhcommarea=new Variable();
            eibtime_OF_dfheiblk=new PackedDecimalI();
            eibdate_OF_dfheiblk=new PackedDecimalI();
            eibtrnid_OF_dfheiblk=new Variable();
            eibtaskn_OF_dfheiblk=new PackedDecimalI();
            eibtrmid_OF_dfheiblk=new Variable();
            dfheigdi_OF_dfheiblk=new Binary();
            eibcposn_OF_dfheiblk=new Binary();
            eibcalen_OF_dfheiblk=new Binary();
            eibaid_OF_dfheiblk=new Variable();
            eibfn_OF_dfheiblk=new Variable();
            eibrcode_OF_dfheiblk=new Variable();
            eibds_OF_dfheiblk=new Variable();
            eibreqid_OF_dfheiblk=new Variable();
            eibrsrce_OF_dfheiblk=new Variable();
            eibsync_OF_dfheiblk=new Variable();
            eibfree_OF_dfheiblk=new Variable();
            eibrecv_OF_dfheiblk=new Variable();
            eibfil01_OF_dfheiblk=new Variable();
            eibatt_OF_dfheiblk=new Variable();
            eibeoc_OF_dfheiblk=new Variable();
            eibfmh_OF_dfheiblk=new Variable();
            eibcompl_OF_dfheiblk=new Variable();
            eibsig_OF_dfheiblk=new Variable();
            eibconf_OF_dfheiblk=new Variable();
            eiberr_OF_dfheiblk=new Variable();
            eiberrcd_OF_dfheiblk=new Variable();
            eibsynrb_OF_dfheiblk=new Variable();
            eibnodat_OF_dfheiblk=new Variable();
            eibresp_OF_dfheiblk=new Binary();
            eibresp2_OF_dfheiblk=new Binary();
            eibrldbk_OF_dfheiblk=new Variable();
            eibsend_OF_dfheiblk=new Variable();
            eiberrmsg_OF_dfheiblk=new Variable();
            dibver_OF_dfheiblk=new Variable();
            dibstat_OF_dfheiblk=new Variable();
            dibsegm_OF_dfheiblk=new Variable();
            dibseglv_OF_dfheiblk=new Variable();
            dibkfbl_OF_dfheiblk=new Binary();
            dibdbdnm_OF_dfheiblk=new Variable();
            dibdborg_OF_dfheiblk=new Variable();
            dfheiblk=new Variable();
        }
        
        public void declarations()
        {
            final Memory _memory=this._memory;
            option_count_OF_option_array_OF_dfhcommarea.declare(_memory,0,4,"option_count",9,null,option_array_OF_dfhcommarea,null,option_debug_OF_option_array_OF_dfhcommarea,0x04400000);
            option_debug_OF_option_array_OF_dfhcommarea.declare(_memory,4,4,"option_debug",9,null,option_array_OF_dfhcommarea,null,option_remove_OF_option_array_OF_dfhcommarea,0x04400000);
            option_remove_OF_option_array_OF_dfhcommarea.declare(_memory,8,4,"option_remove",9,null,option_array_OF_dfhcommarea,null,option_erase_OF_option_array_OF_dfhcommarea,0x04400000);
            option_erase_OF_option_array_OF_dfhcommarea.declare(_memory,12,4,"option_erase",9,null,option_array_OF_dfhcommarea,null,option_create_OF_option_array_OF_dfhcommarea,0x04400000);
            option_create_OF_option_array_OF_dfhcommarea.declare(_memory,16,4,"option_create",9,null,option_array_OF_dfhcommarea,null,option_load_OF_option_array_OF_dfhcommarea,0x04400000);
            option_load_OF_option_array_OF_dfhcommarea.declare(_memory,20,4,"option_load",9,null,option_array_OF_dfhcommarea,null,option_size_OF_option_array_OF_dfhcommarea,0x04400000);
            option_size_OF_option_array_OF_dfhcommarea.declare(_memory,24,4,"option_size",9,null,option_array_OF_dfhcommarea,null,option_display_OF_option_array_OF_dfhcommarea,0x04400000);
            option_display_OF_option_array_OF_dfhcommarea.declare(_memory,28,4,"option_display",9,null,option_array_OF_dfhcommarea,null,null,0x04400000);
            option_array_OF_dfhcommarea.declare(_memory,0,2237,"option_array",null,null,dfhcommarea,option_count_OF_option_array_OF_dfhcommarea,null,0x00000000);
            dfhcommarea.declare(_memory,0,2237,"dfhcommarea",null,null,null,option_array_OF_dfhcommarea,dfheiblk,0x00000000);
            eibtime_OF_dfheiblk.declare(_memory,2237,4,"eibtime",7,Intrinsic.sr_current_julian_time(),dfheiblk,null,eibdate_OF_dfheiblk,0x04400000);
            eibdate_OF_dfheiblk.declare(_memory,2241,4,"eibdate",7,Intrinsic.sr_current_julian_date(),dfheiblk,null,eibtrnid_OF_dfheiblk,0x04400000);
            eibtrnid_OF_dfheiblk.declare(_memory,2245,4,"eibtrnid",null,null,dfheiblk,null,eibtaskn_OF_dfheiblk,0x00000000);
            eibtaskn_OF_dfheiblk.declare(_memory,2249,4,"eibtaskn",7,null,dfheiblk,null,eibtrmid_OF_dfheiblk,0x04400000);
            eibtrmid_OF_dfheiblk.declare(_memory,2253,4,"eibtrmid",null,null,dfheiblk,null,dfheigdi_OF_dfheiblk,0x00000000);
            dfheigdi_OF_dfheiblk.declare(_memory,2257,2,"dfheigdi",4,null,dfheiblk,null,eibcposn_OF_dfheiblk,0x04400000);
            eibcposn_OF_dfheiblk.declare(_memory,2259,2,"eibcposn",4,null,dfheiblk,null,eibcalen_OF_dfheiblk,0x04400000);
            eibcalen_OF_dfheiblk.declare(_memory,2261,2,"eibcalen",4,null,dfheiblk,null,eibaid_OF_dfheiblk,0x04400000);
            eibaid_OF_dfheiblk.declare(_memory,2263,1,"eibaid",null,null,dfheiblk,null,eibfn_OF_dfheiblk,0x00000000);
            eibfn_OF_dfheiblk.declare(_memory,2264,2,"eibfn",null,null,dfheiblk,null,eibrcode_OF_dfheiblk,0x00000000);
            eibrcode_OF_dfheiblk.declare(_memory,2266,6,"eibrcode",null,null,dfheiblk,null,eibds_OF_dfheiblk,0x00000000);
            eibds_OF_dfheiblk.declare(_memory,2272,8,"eibds",null,null,dfheiblk,null,eibreqid_OF_dfheiblk,0x00000000);
            eibreqid_OF_dfheiblk.declare(_memory,2280,8,"eibreqid",null,null,dfheiblk,null,eibrsrce_OF_dfheiblk,0x00000000);
            eibrsrce_OF_dfheiblk.declare(_memory,2288,8,"eibrsrce",null,null,dfheiblk,null,eibsync_OF_dfheiblk,0x00000000);
            eibsync_OF_dfheiblk.declare(_memory,2296,1,"eibsync",null,null,dfheiblk,null,eibfree_OF_dfheiblk,0x00000000);
            eibfree_OF_dfheiblk.declare(_memory,2297,1,"eibfree",null,null,dfheiblk,null,eibrecv_OF_dfheiblk,0x00000000);
            eibrecv_OF_dfheiblk.declare(_memory,2298,1,"eibrecv",null,null,dfheiblk,null,eibfil01_OF_dfheiblk,0x00000000);
            eibfil01_OF_dfheiblk.declare(_memory,2299,1,"eibfil01",null,null,dfheiblk,null,eibatt_OF_dfheiblk,0x00000000);
            eibatt_OF_dfheiblk.declare(_memory,2300,1,"eibatt",null,null,dfheiblk,null,eibeoc_OF_dfheiblk,0x00000000);
            eibeoc_OF_dfheiblk.declare(_memory,2301,1,"eibeoc",null,null,dfheiblk,null,eibfmh_OF_dfheiblk,0x00000000);
            eibfmh_OF_dfheiblk.declare(_memory,2302,1,"eibfmh",null,null,dfheiblk,null,eibcompl_OF_dfheiblk,0x00000000);
            eibcompl_OF_dfheiblk.declare(_memory,2303,1,"eibcompl",null,null,dfheiblk,null,eibsig_OF_dfheiblk,0x00000000);
            eibsig_OF_dfheiblk.declare(_memory,2304,1,"eibsig",null,null,dfheiblk,null,eibconf_OF_dfheiblk,0x00000000);
            eibconf_OF_dfheiblk.declare(_memory,2305,1,"eibconf",null,null,dfheiblk,null,eiberr_OF_dfheiblk,0x00000000);
            eiberr_OF_dfheiblk.declare(_memory,2306,1,"eiberr",null,null,dfheiblk,null,eiberrcd_OF_dfheiblk,0x00000000);
            eiberrcd_OF_dfheiblk.declare(_memory,2307,4,"eiberrcd",null,null,dfheiblk,null,eibsynrb_OF_dfheiblk,0x00000000);
            eibsynrb_OF_dfheiblk.declare(_memory,2311,1,"eibsynrb",null,null,dfheiblk,null,eibnodat_OF_dfheiblk,0x00000000);
            eibnodat_OF_dfheiblk.declare(_memory,2312,1,"eibnodat",null,null,dfheiblk,null,eibresp_OF_dfheiblk,0x00000000);
            eibresp_OF_dfheiblk.declare(_memory,2313,4,"eibresp",8,null,dfheiblk,null,eibresp2_OF_dfheiblk,0x04400000);
            eibresp2_OF_dfheiblk.declare(_memory,2317,4,"eibresp2",8,null,dfheiblk,null,eibrldbk_OF_dfheiblk,0x04400000);
            eibrldbk_OF_dfheiblk.declare(_memory,2321,1,"eibrldbk",null,null,dfheiblk,null,eibsend_OF_dfheiblk,0x00000000);
            eibsend_OF_dfheiblk.declare(_memory,2322,1,"eibsend",null,null,dfheiblk,null,eiberrmsg_OF_dfheiblk,0x00000000);
            eiberrmsg_OF_dfheiblk.declare(_memory,2323,2013,"eiberrmsg",null,null,dfheiblk,null,dibver_OF_dfheiblk,0x00000000);
            dibver_OF_dfheiblk.declare(_memory,4336,2,"dibver",null,null,dfheiblk,null,dibstat_OF_dfheiblk,0x00000000);
            dibstat_OF_dfheiblk.declare(_memory,4338,2,"dibstat",null,null,dfheiblk,null,dibsegm_OF_dfheiblk,0x00000000);
            dibsegm_OF_dfheiblk.declare(_memory,4340,8,"dibsegm",null,null,dfheiblk,null,dibseglv_OF_dfheiblk,0x00000000);
            dibseglv_OF_dfheiblk.declare(_memory,4348,2,"dibseglv",null,null,dfheiblk,null,dibkfbl_OF_dfheiblk,0x00000000);
            dibkfbl_OF_dfheiblk.declare(_memory,4350,2,"dibkfbl",4,null,dfheiblk,null,dibdbdnm_OF_dfheiblk,0x04400000);
            dibdbdnm_OF_dfheiblk.declare(_memory,4352,8,"dibdbdnm",null,null,dfheiblk,null,dibdborg_OF_dfheiblk,0x00000000);
            dibdborg_OF_dfheiblk.declare(_memory,4360,8,"dibdborg",null,null,dfheiblk,null,null,0x00000000);
            dfheiblk.declare(_memory,2237,2131,"dfheiblk",null,null,null,eibtime_OF_dfheiblk,null,0x00000000);
            Variable.setUnusedVarsSizes(lnk.dfhcommarea);
            
            
        } // end declarations
        
        public  Binary option_count_OF_option_array_OF_dfhcommarea;
        public  Binary option_debug_OF_option_array_OF_dfhcommarea;
        public  Binary option_remove_OF_option_array_OF_dfhcommarea;
        public  Binary option_erase_OF_option_array_OF_dfhcommarea;
        public  Binary option_create_OF_option_array_OF_dfhcommarea;
        public  Binary option_load_OF_option_array_OF_dfhcommarea;
        public  Binary option_size_OF_option_array_OF_dfhcommarea;
        public  Binary option_display_OF_option_array_OF_dfhcommarea;
        public Level88 option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea;
        public  Variable option_array_OF_dfhcommarea;
        public  Variable dfhcommarea;
        public  PackedDecimalI eibtime_OF_dfheiblk;
        public  PackedDecimalI eibdate_OF_dfheiblk;
        public  Variable eibtrnid_OF_dfheiblk;
        public  PackedDecimalI eibtaskn_OF_dfheiblk;
        public  Variable eibtrmid_OF_dfheiblk;
        public  Binary dfheigdi_OF_dfheiblk;
        public  Binary eibcposn_OF_dfheiblk;
        public  Binary eibcalen_OF_dfheiblk;
        public  Variable eibaid_OF_dfheiblk;
        public  Variable eibfn_OF_dfheiblk;
        public  Variable eibrcode_OF_dfheiblk;
        public  Variable eibds_OF_dfheiblk;
        public  Variable eibreqid_OF_dfheiblk;
        public  Variable eibrsrce_OF_dfheiblk;
        public  Variable eibsync_OF_dfheiblk;
        public  Variable eibfree_OF_dfheiblk;
        public  Variable eibrecv_OF_dfheiblk;
        public  Variable eibfil01_OF_dfheiblk;
        public  Variable eibatt_OF_dfheiblk;
        public  Variable eibeoc_OF_dfheiblk;
        public  Variable eibfmh_OF_dfheiblk;
        public  Variable eibcompl_OF_dfheiblk;
        public  Variable eibsig_OF_dfheiblk;
        public  Variable eibconf_OF_dfheiblk;
        public  Variable eiberr_OF_dfheiblk;
        public  Variable eiberrcd_OF_dfheiblk;
        public  Variable eibsynrb_OF_dfheiblk;
        public  Variable eibnodat_OF_dfheiblk;
        public  Binary eibresp_OF_dfheiblk;
        public  Binary eibresp2_OF_dfheiblk;
        public  Variable eibrldbk_OF_dfheiblk;
        public  Variable eibsend_OF_dfheiblk;
        public  Variable eiberrmsg_OF_dfheiblk;
        public  Variable dibver_OF_dfheiblk;
        public  Variable dibstat_OF_dfheiblk;
        public  Variable dibsegm_OF_dfheiblk;
        public  Variable dibseglv_OF_dfheiblk;
        public  Binary dibkfbl_OF_dfheiblk;
        public  Variable dibdbdnm_OF_dfheiblk;
        public  Variable dibdborg_OF_dfheiblk;
        public  Variable dfheiblk;
        
        
        protected final Memory _memory=new UnbufferedMemory(4368,"sqlload.Lnk");
        
    } // end Lnk
    public transient Lnk lnk=null; // instance accessor for data section
    
    public java.lang.Object call(Context _passContext)
    {
        setup(_passContext);
        return callGiving();
    }
    
    public java.lang.Object call(Context _passContext,parameterList _param)
    {
        setup(_passContext);
        return callGiving(_param);
    }
    
    public void call()
    {
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        run(-1,0); // parameters expected, leave at defaults
    } // end call
    
    public void call(parameterList _param)
    {
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        try
        {
            lnk.dfheiblk.ipc_init(_param,0);
            lnk.dfhcommarea.ipc_init(_param,1);
            Context _prevContext=Variable.setCurrContext(_context);
            Variable.setNarg(_param);
            _callArrayInitializer();
            Variable[] _variables=new Variable[]
            {
                lnk.dfheiblk,lnk.dfhcommarea
            };
            Variable.ipc_ready(_variables);
            this.run(-1,0);
            Variable.ipc_finish(_variables,_param,_programId);
            _callArrayFinalizer();
            Variable.ipc_final(_variables,_param);
            Variable.setCurrContext(_prevContext);
        }
        catch(ArrayIndexOutOfBoundsException _linkingExceptionOuter)
        {
            CobolException.runtimeError("Linking Error in Initiation of "+_programId,_linkingExceptionOuter);
        }
    }
    
    public java.lang.Object callGiving()
    {
        call();
        return _context.getReturnCode();
    }
    
    public java.lang.Object call(boolean[] _byRef,java.lang.Object[] _param)
    {
        return callGiving(new parameterList(_byRef,_param));
    }
    
    public java.lang.Object callGiving(parameterList _param)
    {
        call(_param);
        return _context.getReturnCode();
    }
    
    static public final int _main__Label=1;
    static public final int _main_para_OF_main_Label=2;
    
    public final int main_para_OF_main()
    {
        final Wrk wrk=this.wrk;
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1812);
            final Object[] _transactionParameters=new Object[] {null,lnk.eibrsrce_OF_dfheiblk,null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
            _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_0,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        if((lnk.option_remove_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_22)!=0))
        {
            wrk.ws_display_line_OF_ws_display.move("Remove Database");
            int _performResult=0;
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1602);
                final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                _context.getSqlContext().getCursors().closeAllNotHeld();
                _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
        }
        if((lnk.option_size_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_22)==0))
        {
            wrk.ws_display_line_OF_ws_display.move("Small Database");
            int _performResult=0;
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
            wrk.maxitems.move(wrk.s_maxitems);
            wrk.dist_per_ware.move(wrk.s_dist_per_ware);
            wrk.cust_per_dist.move(wrk.s_cust_per_dist);
            wrk.ord_per_dist.move(wrk.s_ord_per_dist);
            wrk.undel_ord_base.move(wrk.s_undel_ord_base);
            wrk.name_min.move(wrk.s_min_name);
            wrk.name_max.move(wrk.s_max_name);
            wrk.name_a.move(wrk.s_name_a);
            wrk.name_c.move(wrk.s_name_c);
        }
        else
        {
            wrk.ws_display_line_OF_ws_display.move("Large Database");
            int _performResult=0;
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
            wrk.maxitems.move(wrk.l_maxitems);
            wrk.dist_per_ware.move(wrk.l_dist_per_ware);
            wrk.cust_per_dist.move(wrk.l_cust_per_dist);
            wrk.ord_per_dist.move(wrk.l_ord_per_dist);
            wrk.undel_ord_base.move(wrk.l_undel_ord_base);
            wrk.name_min.move(wrk.l_min_name);
            wrk.name_max.move(wrk.l_max_name);
            wrk.name_a.move(wrk.l_name_a);
            wrk.name_c.move(wrk.l_name_c);
        }
        wrk.count_ware.move(lnk.option_count_OF_option_array_OF_dfhcommarea);
        if((lnk.option_create_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_22)!=0))
        {
            wrk.ws_display_line_OF_ws_display.move("Create tables");
            int _performResult=0;
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1602);
                final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                _context.getSqlContext().getCursors().closeAllNotHeld();
                _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
        }
        if((lnk.option_erase_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_22)!=0))
        {
            wrk.ws_display_line_OF_ws_display.move("Erase existing data");
            int _performResult=0;
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
            java.sql.Statement _sqlStatement=null;
            try
            {
                _sqlStatement=_getConnection(null).createStatement();
                int _rowCount=_sqlStatement.executeUpdate("delete from order_line");
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C7: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            _sqlStatement=null;
            try
            {
                _sqlStatement=_getConnection(null).createStatement();
                int _rowCount=_sqlStatement.executeUpdate("delete from new_order");
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C7: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            _sqlStatement=null;
            try
            {
                _sqlStatement=_getConnection(null).createStatement();
                int _rowCount=_sqlStatement.executeUpdate("delete from orders");
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C7: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            _sqlStatement=null;
            try
            {
                _sqlStatement=_getConnection(null).createStatement();
                int _rowCount=_sqlStatement.executeUpdate("delete from history");
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C7: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            _sqlStatement=null;
            try
            {
                _sqlStatement=_getConnection(null).createStatement();
                int _rowCount=_sqlStatement.executeUpdate("delete from customer");
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C7: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            _sqlStatement=null;
            try
            {
                _sqlStatement=_getConnection(null).createStatement();
                int _rowCount=_sqlStatement.executeUpdate("delete from district");
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C7: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            _sqlStatement=null;
            try
            {
                _sqlStatement=_getConnection(null).createStatement();
                int _rowCount=_sqlStatement.executeUpdate("delete from stock");
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C7: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            _sqlStatement=null;
            try
            {
                _sqlStatement=_getConnection(null).createStatement();
                int _rowCount=_sqlStatement.executeUpdate("delete from item");
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C7: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            _sqlStatement=null;
            try
            {
                _sqlStatement=_getConnection(null).createStatement();
                int _rowCount=_sqlStatement.executeUpdate("delete from warehouse");
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C7: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1602);
                final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                _context.getSqlContext().getCursors().closeAllNotHeld();
                _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
        }
        if((lnk.option_load_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_22)!=0))
        {
            boolean _sizeError=false;
            wrk.todaysdate_OF_current_tstamp.acceptYYYYMMDD();
            _sizeError=false;
            wrk.time_in_secs_OF_current_tstamp.acceptTime();
            wrk.tstamp.moveSpaces();
            _sizeError=false;
            Index _defaultPointerIndex=new Index(1);
            _sizeError|=wrk.tstamp.string(wrk.todaysdate_OF_current_tstamp.ref(_NCONSTANT_23.toInt(),_NCONSTANT_24.toInt()),_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string((String)"-",_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string(wrk.todaysdate_OF_current_tstamp.ref(_NCONSTANT_25.toInt(),_NCONSTANT_26.toInt()),_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string((String)"-",_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string(wrk.todaysdate_OF_current_tstamp.ref(_NCONSTANT_27.toInt(),_NCONSTANT_26.toInt()),_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string((String)" ",_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string(wrk.time_in_secs_OF_current_tstamp.ref(_NCONSTANT_23.toInt(),_NCONSTANT_26.toInt()),_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string((String)":",_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string(wrk.time_in_secs_OF_current_tstamp.ref(_NCONSTANT_28.toInt(),_NCONSTANT_26.toInt()),_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string((String)":",_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string(wrk.time_in_secs_OF_current_tstamp.ref(_NCONSTANT_25.toInt(),_NCONSTANT_26.toInt()),_defaultPointerIndex);
            _sizeError=false;
            _sizeError|=wrk.i.moveSE(Intrinsic.random(wrk.time_in_secs_OF_current_tstamp).toBignum()).isSizeError();
            wrk.ws_display_line_OF_ws_display.move("TPCC Data Load Starting ");
            int _performResult=0;
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
            _sizeError=false;
            wrk.ws_time_start.acceptTime();
            if((_performResult=loaditems_OF_main())>0) perform(_performResult,_loaditems_OF_main_Label);
            if((_performResult=loadware_OF_main())>0) perform(_performResult,_loadware_OF_main_Label);
            if((_performResult=loadcust_OF_main())>0) perform(_performResult,_loadcust_OF_main_Label);
            if((_performResult=loadord_OF_main())>0) perform(_performResult,_loadord_OF_main_Label);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1602);
                final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                _context.getSqlContext().getCursors().closeAllNotHeld();
                _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.ws_display_line_OF_ws_display.move("TPCC Data Load Completed.");
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
            _sizeError=false;
            wrk.ws_time_end.acceptTime();
            wrk.ws_timer_start_OF_ws_timer_msg.ref(_NCONSTANT_29.toInt(),_NCONSTANT_26.toInt()).move(wrk.ws_time_start.ref(_NCONSTANT_23.toInt(),_NCONSTANT_26.toInt()));
            wrk.ws_timer_start_OF_ws_timer_msg.ref(_NCONSTANT_30.toInt(),_NCONSTANT_26.toInt()).move(wrk.ws_time_start.ref(_NCONSTANT_28.toInt(),_NCONSTANT_26.toInt()));
            wrk.ws_timer_start_OF_ws_timer_msg.ref(_NCONSTANT_31.toInt(),_NCONSTANT_26.toInt()).move(wrk.ws_time_start.ref(_NCONSTANT_25.toInt(),_NCONSTANT_26.toInt()));
            wrk.ws_timer_end_OF_ws_timer_msg.ref(_NCONSTANT_32.toInt(),_NCONSTANT_26.toInt()).move(wrk.ws_time_end.ref(_NCONSTANT_23.toInt(),_NCONSTANT_26.toInt()));
            wrk.ws_timer_end_OF_ws_timer_msg.ref(_NCONSTANT_33.toInt(),_NCONSTANT_26.toInt()).move(wrk.ws_time_end.ref(_NCONSTANT_28.toInt(),_NCONSTANT_26.toInt()));
            wrk.ws_timer_end_OF_ws_timer_msg.ref(_NCONSTANT_34.toInt(),_NCONSTANT_26.toInt()).move(wrk.ws_time_end.ref(_NCONSTANT_25.toInt(),_NCONSTANT_26.toInt()));
            wrk.ws_display_line_OF_ws_display.move(wrk.ws_timer_msg);
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
        }
        _context.getReturnCode().move(_NCONSTANT_22);
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x0e08);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("RETURN",_TAGCONSTANT_2,_transactionParameters);
            if(_programControl!=null) _programControl.returnControl(_transenv,_TAGCONSTANT_2,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("RETURN",_TAGCONSTANT_2,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            if(true) throw new UnwindException(UnwindException.RETURN);
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0e08));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _randomnumber_Label=14;
    static public final int _randomnumber_para_OF_randomnumber_Label=15;
    
    public final int randomnumber_para_OF_randomnumber()
    {
        final Wrk wrk=this.wrk;
        boolean _sizeError=false;
        _sizeError|=wrk.rand.moveSE(Intrinsic.random().toBignum()).isSizeError();
        _sizeError=false;
        _sizeError|=wrk.rand_num.moveSE( (wrk.rand.toBignum().multiply( (wrk.rand_max.toBignum().subtract(wrk.rand_min.toBignum())))).addingWith(wrk.rand_min.toBignum())).isSizeError();
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _nurand_Label=16;
    static public final int _nurand_para_OF_nurand_Label=17;
    
    public final int nurand_para_OF_nurand()
    {
        final Wrk wrk=this.wrk;
        int _performResult=0;
        if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
        wrk.rand_num1.move(wrk.rand_num);
        wrk.rand_min1.move(wrk.rand_min);
        wrk.rand_max1.move(wrk.rand_max);
        wrk.rand_min.move(_NCONSTANT_22);
        wrk.rand_max.move(wrk.a);
        if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_26).compare(_NCONSTANT_22)==0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_26).compare(_NCONSTANT_22)!=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(1);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_24).compare(_NCONSTANT_26)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_24).compare(_NCONSTANT_26)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(2);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_35).compare(_NCONSTANT_24)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_35).compare(_NCONSTANT_24)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(4);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_30).compare(_NCONSTANT_35)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_30).compare(_NCONSTANT_35)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(8);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_36).compare(_NCONSTANT_30)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_36).compare(_NCONSTANT_30)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(16);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_37).compare(_NCONSTANT_36)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_37).compare(_NCONSTANT_36)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(32);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_38).compare(_NCONSTANT_37)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_38).compare(_NCONSTANT_37)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(64);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_39).compare(_NCONSTANT_38)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_39).compare(_NCONSTANT_38)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(128);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_40).compare(_NCONSTANT_39)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_40).compare(_NCONSTANT_39)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(256);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_41).compare(_NCONSTANT_40)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_41).compare(_NCONSTANT_40)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(512);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_42).compare(_NCONSTANT_41)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_42).compare(_NCONSTANT_41)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(1024);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_43).compare(_NCONSTANT_42)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_43).compare(_NCONSTANT_42)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(2048);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_44).compare(_NCONSTANT_43)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_44).compare(_NCONSTANT_43)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(4096);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_45).compare(_NCONSTANT_44)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_45).compare(_NCONSTANT_44)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(8192);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_46).compare(_NCONSTANT_45)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_46).compare(_NCONSTANT_45)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(16384);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_47).compare(_NCONSTANT_46)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_47).compare(_NCONSTANT_46)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(32768);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_48).compare(_NCONSTANT_47)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_48).compare(_NCONSTANT_47)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(65536);
                
            }
        }
        boolean _sizeError=false;
        wrk.rand_num1.add(wrk.c);
        
        _sizeError=false;
        _sizeError|=wrk.temp.moveSE( wrk.rand_max1.toBignum().subtract(wrk.rand_min1.toBignum()).addingWith(_BCONSTANT_0)).isSizeError();
        _sizeError=false;
        _sizeError|=wrk.rand_num.moveSE( Intrinsic.mod(wrk.rand_num1,wrk.temp).toBignum().add(wrk.rand_min1.toBignum())).isSizeError();
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _makealphastring_Label=18;
    static public final int _makealphastring_para_OF_makealphastring_Label=19;
    
    public final int makealphastring_para_OF_makealphastring()
    {
        final Wrk wrk=this.wrk;
        wrk.str_val.moveSpaces();
        wrk.rand_min.move(wrk.str_min);
        wrk.rand_max.move(wrk.str_max);
        int _performResult=0;
        if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
        wrk.str_len.move(wrk.rand_num);
        wrk.rand_min.move(_NCONSTANT_23);
        wrk.rand_max.move(new Numeric( wrk.chars.lengthForLengthOfSyntax()));
        for(wrk.str_ind.move(1);!((wrk.str_ind.compare(wrk.str_len)>0));wrk.str_ind.add(1))
        {
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            wrk.str_val.ref(wrk.str_ind.toInt(),_NCONSTANT_23.toInt()).move(wrk.chars.ref(wrk.rand_num.toInt(),_NCONSTANT_23.toInt()));
        } // end perform with test before/varying
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _makenumberstring_Label=20;
    static public final int _makenumberstring_para_OF_makenumberstring_Label=21;
    
    public final int makenumberstring_para_OF_makenumberstring()
    {
        final Wrk wrk=this.wrk;
        wrk.str_val.moveSpaces();
        wrk.rand_min.move(wrk.str_min);
        wrk.rand_max.move(wrk.str_max);
        int _performResult=0;
        if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
        wrk.str_len.move(wrk.rand_num);
        wrk.rand_min.move(_NCONSTANT_22);
        wrk.rand_max.move(_NCONSTANT_49);
        for(wrk.str_ind.move(1);!((wrk.str_ind.compare(wrk.str_len)>0));wrk.str_ind.add(1))
        {
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            wrk.str_val.ref(wrk.str_ind.toInt(),_NCONSTANT_23.toInt()).move(wrk.digits.ref( Numeric.addGiving(wrk.rand_num,_NCONSTANT_23).toInt(),_NCONSTANT_23.toInt()));
        } // end perform with test before/varying
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _loaditems_Label=23;
    static public final int _loaditems_para_OF_loaditems_Label=24;
    
    public final int loaditems_para_OF_loaditems()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_line_OF_ws_display.move("Loading Item");
        int _performResult=0;
        if((_performResult=display_line_OF_loaditems())>0) perform(_performResult,_display_line_OF_loaditems_Label);
        for(wrk.i.move(1);!((wrk.i.compare(wrk.maxitems)>0));wrk.i.add(1))
        {
            wrk.orig_OF_filler_e___1[wrk.i.toInt()].move(_NCONSTANT_22);
        } // end perform with test before/varying
        for(wrk.i.move(1);!((wrk.i.compare( Numeric.divGiving(wrk.maxitems,_NCONSTANT_50))>0));wrk.i.add(1))
        {
            do // PERFORM WITH TEST AFTER
            {
                wrk.rand_min.move(_NCONSTANT_23);
                wrk.rand_max.move(wrk.maxitems);
                if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
                wrk.posn.move(wrk.rand_num);
            } while(!((wrk.orig_OF_filler_e___1[wrk.posn.toInt()].compare(_NCONSTANT_22)==0))); // end perform with test after
            wrk.orig_OF_filler_e___1[wrk.posn.toInt()].move(_NCONSTANT_23);
        } // end perform with test before/varying
        for(wrk.i_id.move(1);!((wrk.i_id.compare(wrk.maxitems)>0));wrk.i_id.add(1))
        {
            wrk.str_min.move(_NCONSTANT_33);
            wrk.str_max.move(_NCONSTANT_51);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.i_name.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.i_name.lengthForLengthOfSyntax()).toInt()));
            wrk.rand_min.move(_NCONSTANT_52);
            wrk.rand_max.move(_NCONSTANT_53);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            boolean _sizeError=false;
            Bignum _computeExpression0=_BCONSTANT_17;
            if(_computeExpression0.isZero())
                _sizeError=true;
            else
            {
                _sizeError|=wrk.i_price.moveSE( wrk.rand_num.toBignum().divide(_computeExpression0)).isSizeError();
            }
            wrk.str_min.move(_NCONSTANT_54);
            wrk.str_max.move(_NCONSTANT_55);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.i_data.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.i_data.lengthForLengthOfSyntax()).toInt()));
            wrk.idatasiz.move(wrk.str_len);
            if((wrk.orig_OF_filler_e___1[wrk.i_id.toInt()].compare(_NCONSTANT_22)!=0))
            {
                wrk.rand_min.move(_NCONSTANT_23);
                _sizeError=false;
                _sizeError|=wrk.rand_max.moveSE( wrk.idatasiz.toBignum().subtract(_BCONSTANT_3)).isSizeError();
                if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
                wrk.posn.move(wrk.rand_num);
                _sizeError=false;
                _sizeError|=wrk.i_data.string((String)"original",wrk.posn);
            }
            if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_22)!=0))
            {
                wrk.ws_display_nbr_OF_ws_display.move(wrk.i_id);
                wrk.ws_i_price_OF_ws_display.move(wrk.i_price);
                _sizeError=false;
                Index _defaultPointerIndex=new Index(1);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"IID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Name= ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.i_name,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Price = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_i_price_OF_ws_display,_defaultPointerIndex);
                if((_performResult=display_line_OF_loaditems())>0) perform(_performResult,_display_line_OF_loaditems_Label);
            }
            java.sql.PreparedStatement _sqlPreparedStatement=null;
            try
            {
                _sqlPreparedStatement=_getConnection(null).prepareStatement("INSERT INTO item (i_id, i_im_id, i_name, i_price, i_data) values ( ?, 0, ?, ?, ?)"); // ps4
                Object _sqlObject=null;
                _sqlObject=wrk.i_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(1,_sqlObject);
                _sqlObject=wrk.i_name.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(2,_sqlObject);
                _sqlObject=wrk.i_price.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(3,_sqlObject);
                _sqlObject=wrk.i_data.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(4,_sqlObject);
                int _rowCount=_sqlPreparedStatement.executeUpdate();
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlPreparedStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            if((Intrinsic.mod(wrk.i_id,_NCONSTANT_52).compare(_NCONSTANT_22)==0))
            {
                if(!(lnk.option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea.isTrue()))
                {
                    _sizeError=!_context.defaultio().displayNoAdvancing(_context,(String)".");
                    if((Intrinsic.mod(wrk.i_id,_NCONSTANT_56).compare(_NCONSTANT_22)==0))
                    {
                        _sizeError=!_context.defaultio().display(_context,(String)" "+wrk.i_id.toText());
                    }
                }
                else
                {
                    if((_performResult=display_dot_OF_loaditems())>0) perform(_performResult,_display_dot_OF_loaditems_Label);
                    if((Intrinsic.mod(wrk.i_id,_NCONSTANT_56).compare(_NCONSTANT_22)==0))
                    {
                        wrk.ws_num_OF_ws_display.move(wrk.i_id);
                        if((_performResult=display_number_OF_loaditems())>0) perform(_performResult,_display_number_OF_loaditems_Label);
                    }
                }
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x1602);
                    final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    _context.getSqlContext().getCursors().closeAllNotHeld();
                    _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
            }
        } // end perform with test before/varying
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_display_line_OF_ws_display.move("Item Done.");
        if((_performResult=display_line_OF_loaditems())>0) perform(_performResult,_display_line_OF_loaditems_Label);
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _loadware_Label=31;
    static public final int _loadware_para_OF_loadware_Label=32;
    
    public final int loadware_para_OF_loadware()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_line_OF_ws_display.move("Loading Warehouse");
        int _performResult=0;
        if((_performResult=display_line_OF_loadware())>0) perform(_performResult,_display_line_OF_loadware_Label);
        for(wrk.w_id.move(1);!((wrk.w_id.compare(wrk.count_ware)>0));wrk.w_id.add(1))
        {
            wrk.str_min.move(_NCONSTANT_57);
            wrk.str_max.move(_NCONSTANT_50);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.w_name.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.w_name.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makeaddress_OF_loadware())>0) perform(_performResult,_makeaddress_OF_loadware_Label);
            wrk.w_street_1.move(wrk.adr_str1);
            wrk.w_street_2.move(wrk.adr_str2);
            wrk.w_city.move(wrk.adr_city);
            wrk.w_state.move(wrk.adr_state);
            wrk.w_zip.move(wrk.adr_zip);
            wrk.rand_min.move(_NCONSTANT_50);
            wrk.rand_max.move(_NCONSTANT_58);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            boolean _sizeError=false;
            Bignum _computeExpression0=_BCONSTANT_17;
            if(_computeExpression0.isZero())
                _sizeError=true;
            else
            {
                _sizeError|=wrk.w_tax.moveSE( wrk.rand_num.toBignum().divide(_computeExpression0)).isSizeError();
            }
            wrk.w_ytd.move(_NCONSTANT_59);
            if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_22)!=0))
            {
                wrk.ws_display_nbr_OF_ws_display.move(wrk.w_id);
                wrk.ws_w_tax_OF_ws_display.move(wrk.w_tax);
                _sizeError=false;
                Index _defaultPointerIndex=new Index(1);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"WID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Name = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.w_name,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Tax = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_w_tax_OF_ws_display,_defaultPointerIndex);
            }
            java.sql.PreparedStatement _sqlPreparedStatement=null;
            try
            {
                _sqlPreparedStatement=_getConnection(null).prepareStatement("INSERT INTO warehouse (w_id, w_name, w_street_1, w_street_2, w_city, w_state, w_zip, w_tax, w_ytd) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?)"); // ps4
                Object _sqlObject=null;
                _sqlObject=wrk.w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(1,_sqlObject);
                _sqlObject=wrk.w_name.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(2,_sqlObject);
                _sqlObject=wrk.w_street_1.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(3,_sqlObject);
                _sqlObject=wrk.w_street_2.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(4,_sqlObject);
                _sqlObject=wrk.w_city.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(5,_sqlObject);
                _sqlObject=wrk.w_state.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(6,_sqlObject);
                _sqlObject=wrk.w_zip.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(7,_sqlObject);
                _sqlObject=wrk.w_tax.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(8,_sqlObject);
                _sqlObject=wrk.w_ytd.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(9,_sqlObject);
                int _rowCount=_sqlPreparedStatement.executeUpdate();
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlPreparedStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            if((_performResult=stock_OF_loadware())>0) perform(_performResult,_stock_OF_loadware_Label);
            if((_performResult=district_OF_loadware())>0) perform(_performResult,_district_OF_loadware_Label);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1602);
                final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                _context.getSqlContext().getCursors().closeAllNotHeld();
                _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
        } // end perform with test before/varying
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _loadcust_Label=41;
    static public final int _loadcust_para_OF_loadcust_Label=42;
    
    public final int loadcust_para_OF_loadcust()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_line_OF_ws_display.move("Loading Customer");
        int _performResult=0;
        if((_performResult=display_line_OF_loadcust())>0) perform(_performResult,_display_line_OF_loadcust_Label);
        for(wrk.w_id.move(1);!((wrk.w_id.compare(wrk.count_ware)>0));wrk.w_id.add(1))
        {
            for(wrk.d_id.move(1);!((wrk.d_id.compare(wrk.dist_per_ware)>0));wrk.d_id.add(1))
            {
                if((_performResult=customer_OF_loadcust())>0) perform(_performResult,_customer_OF_loadcust_Label);
            } // end perform with test before/varying
        } // end perform with test before/varying
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _loadord_Label=47;
    static public final int _loadord_para_OF_loadord_Label=48;
    
    public final int loadord_para_OF_loadord()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_line_OF_ws_display.move("Loading Orders");
        int _performResult=0;
        if((_performResult=display_line_OF_loadord())>0) perform(_performResult,_display_line_OF_loadord_Label);
        for(wrk.w_id.move(1);!((wrk.w_id.compare(wrk.count_ware)>0));wrk.w_id.add(1))
        {
            for(wrk.d_id.move(1);!((wrk.d_id.compare(wrk.dist_per_ware)>0));wrk.d_id.add(1))
            {
                if((_performResult=orders_OF_loadord())>0) perform(_performResult,_orders_OF_loadord_Label);
            } // end perform with test before/varying
        } // end perform with test before/varying
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _stock_Label=53;
    static public final int _stock_para_OF_stock_Label=54;
    
    public final int stock_para_OF_stock()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_nbr_OF_ws_display.move(wrk.w_id);
        boolean _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"Loading Stock Wid = ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
        int _performResult=0;
        if((_performResult=display_line_OF_stock())>0) perform(_performResult,_display_line_OF_stock_Label);
        wrk.s_w_id.move(wrk.w_id);
        for(wrk.i.move(1);!((wrk.i.compare(wrk.maxitems)>0));wrk.i.add(1))
        {
            wrk.orig_OF_filler_e___1[wrk.i.toInt()].move(_NCONSTANT_22);
        } // end perform with test before/varying
        for(wrk.i.move(1);!((wrk.i.compare( Numeric.divGiving(wrk.maxitems,_NCONSTANT_50))>0));wrk.i.add(1))
        {
            do // PERFORM WITH TEST AFTER
            {
                wrk.rand_min.move(_NCONSTANT_23);
                wrk.rand_max.move(wrk.maxitems);
                if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
                wrk.posn.move(wrk.rand_num);
            } while(!((wrk.orig_OF_filler_e___1[wrk.posn.toInt()].compare(_NCONSTANT_22)==0))); // end perform with test after
            wrk.orig_OF_filler_e___1[wrk.posn.toInt()].move(_NCONSTANT_23);
        } // end perform with test before/varying
        for(wrk.s_i_id.move(1);!((wrk.s_i_id.compare(wrk.maxitems)>0));wrk.s_i_id.add(1))
        {
            wrk.rand_min.move(_NCONSTANT_50);
            wrk.rand_max.move(_NCONSTANT_52);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            wrk.s_quantity.move(wrk.rand_num);
            wrk.str_min.move(_NCONSTANT_51);
            wrk.str_max.move(_NCONSTANT_51);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_01.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.s_dist_01.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_02.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.s_dist_02.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_03.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.s_dist_03.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_04.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.s_dist_04.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_05.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.s_dist_05.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_06.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.s_dist_06.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_07.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.s_dist_07.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_08.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.s_dist_08.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_09.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.s_dist_09.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_10.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.s_dist_10.lengthForLengthOfSyntax()).toInt()));
            wrk.str_min.move(_NCONSTANT_54);
            wrk.str_max.move(_NCONSTANT_55);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_data.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.s_data.lengthForLengthOfSyntax()).toInt()));
            wrk.sdatasiz.move(wrk.str_len);
            if((wrk.orig_OF_filler_e___1[wrk.s_i_id.toInt()].compare(_NCONSTANT_22)!=0))
            {
                wrk.rand_min.move(_NCONSTANT_23);
                _sizeError=false;
                _sizeError|=wrk.rand_max.moveSE( wrk.sdatasiz.toBignum().subtract(_BCONSTANT_3)).isSizeError();
                if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
                wrk.posn.move(wrk.rand_num);
                wrk.s_data.ref(wrk.posn.toInt(), Numeric.addGiving(wrk.posn,_NCONSTANT_35).toInt()).move("original");
            }
            java.sql.PreparedStatement _sqlPreparedStatement=null;
            try
            {
                _sqlPreparedStatement=_getConnection(null).prepareStatement("INSERT INTO stock (s_i_id, s_w_id, s_quantity, s_dist_01, s_dist_02, s_dist_03, s_dist_04, s_dist_05, s_dist_06, s_dist_07, s_dist_08, s_dist_09, s_dist_10, s_data, s_ytd, s_order_cnt, s_remote_cnt) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 0, 0, 0)"); // ps4
                Object _sqlObject=null;
                _sqlObject=wrk.s_i_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(1,_sqlObject);
                _sqlObject=wrk.s_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(2,_sqlObject);
                _sqlObject=wrk.s_quantity.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(3,_sqlObject);
                _sqlObject=wrk.s_dist_01.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(4,_sqlObject);
                _sqlObject=wrk.s_dist_02.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(5,_sqlObject);
                _sqlObject=wrk.s_dist_03.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(6,_sqlObject);
                _sqlObject=wrk.s_dist_04.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(7,_sqlObject);
                _sqlObject=wrk.s_dist_05.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(8,_sqlObject);
                _sqlObject=wrk.s_dist_06.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(9,_sqlObject);
                _sqlObject=wrk.s_dist_07.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(10,_sqlObject);
                _sqlObject=wrk.s_dist_08.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(11,_sqlObject);
                _sqlObject=wrk.s_dist_09.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(12,_sqlObject);
                _sqlObject=wrk.s_dist_10.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(13,_sqlObject);
                _sqlObject=wrk.s_data.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(14,_sqlObject);
                int _rowCount=_sqlPreparedStatement.executeUpdate();
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlPreparedStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_22)!=0))
            {
                wrk.ws_display_nbr_OF_ws_display.move(wrk.s_i_id);
                wrk.ws_display_nb2_OF_ws_display.move(wrk.s_w_id);
                wrk.ws_display_nb3_OF_ws_display.move(wrk.s_quantity);
                _sizeError=false;
                _defaultPointerIndex.move(1);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"SID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", WID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nb2_OF_ws_display,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Quan = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nb3_OF_ws_display,_defaultPointerIndex);
                if((_performResult=display_line_OF_stock())>0) perform(_performResult,_display_line_OF_stock_Label);
            }
            if((Intrinsic.mod(wrk.s_i_id,_NCONSTANT_52).compare(_NCONSTANT_22)==0))
            {
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x1602);
                    final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    _context.getSqlContext().getCursors().closeAllNotHeld();
                    _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                if(!(lnk.option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea.isTrue()))
                {
                    _sizeError=!_context.defaultio().displayNoAdvancing(_context,(String)".");
                    if((Intrinsic.mod(wrk.s_i_id,_NCONSTANT_56).compare(_NCONSTANT_22)==0))
                    {
                        _sizeError=!_context.defaultio().display(_context,(String)" "+wrk.s_i_id.toText());
                    }
                }
                else
                {
                    if((_performResult=display_dot_OF_stock())>0) perform(_performResult,_display_dot_OF_stock_Label);
                    if((Intrinsic.mod(wrk.s_i_id,_NCONSTANT_56).compare(_NCONSTANT_22)==0))
                    {
                        wrk.ws_num_OF_ws_display.move(wrk.s_i_id);
                        if((_performResult=display_number_OF_stock())>0) perform(_performResult,_display_number_OF_stock_Label);
                    }
                }
            }
        } // end perform with test before/varying
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_display_line_OF_ws_display.move(" Stock Done.");
        if((_performResult=display_line_OF_stock())>0) perform(_performResult,_display_line_OF_stock_Label);
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _district_Label=59;
    static public final int _district_para_OF_district_Label=60;
    
    public final int district_para_OF_district()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_line_OF_ws_display.move("Loading District");
        int _performResult=0;
        if((_performResult=display_line_OF_district())>0) perform(_performResult,_display_line_OF_district_Label);
        wrk.d_w_id.move(wrk.w_id);
        wrk.d_ytd.move(_NCONSTANT_60);
        wrk.d_next_o_id.move(_NCONSTANT_61);
        for(wrk.d_id.move(1);!((wrk.d_id.compare(wrk.dist_per_ware)>0));wrk.d_id.add(1))
        {
            wrk.str_min.move(_NCONSTANT_57);
            wrk.str_max.move(_NCONSTANT_50);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.d_name.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.d_name.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makeaddress_OF_district())>0) perform(_performResult,_makeaddress_OF_district_Label);
            wrk.d_street_1.move(wrk.adr_str1);
            wrk.d_street_2.move(wrk.adr_str2);
            wrk.d_city.move(wrk.adr_city);
            wrk.d_state.move(wrk.adr_state);
            wrk.d_zip.move(wrk.adr_zip);
            wrk.rand_min.move(_NCONSTANT_50);
            wrk.rand_max.move(_NCONSTANT_58);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            boolean _sizeError=false;
            Bignum _computeExpression0=_BCONSTANT_17;
            if(_computeExpression0.isZero())
                _sizeError=true;
            else
            {
                _sizeError|=wrk.d_tax.moveSE( wrk.rand_num.toBignum().divide(_computeExpression0)).isSizeError();
            }
            java.sql.PreparedStatement _sqlPreparedStatement=null;
            try
            {
                _sqlPreparedStatement=_getConnection(null).prepareStatement("INSERT INTO district (d_id, d_w_id, d_name, d_street_1, d_street_2, d_city, d_state, d_zip, d_tax, d_ytd, d_next_o_id) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"); // ps4
                Object _sqlObject=null;
                _sqlObject=wrk.d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(1,_sqlObject);
                _sqlObject=wrk.d_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(2,_sqlObject);
                _sqlObject=wrk.d_name.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(3,_sqlObject);
                _sqlObject=wrk.d_street_1.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(4,_sqlObject);
                _sqlObject=wrk.d_street_2.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(5,_sqlObject);
                _sqlObject=wrk.d_city.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(6,_sqlObject);
                _sqlObject=wrk.d_state.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(7,_sqlObject);
                _sqlObject=wrk.d_zip.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(8,_sqlObject);
                _sqlObject=wrk.d_tax.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(9,_sqlObject);
                _sqlObject=wrk.d_ytd.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(10,_sqlObject);
                _sqlObject=wrk.d_next_o_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(11,_sqlObject);
                int _rowCount=_sqlPreparedStatement.executeUpdate();
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlPreparedStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_22)!=0))
            {
                wrk.ws_display_nbr_OF_ws_display.move(wrk.d_id);
                wrk.ws_display_nb2_OF_ws_display.move(wrk.d_w_id);
                wrk.ws_d_tax_OF_ws_display.move(wrk.d_tax);
                _sizeError=false;
                Index _defaultPointerIndex=new Index(1);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"DID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", WID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nb2_OF_ws_display,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Name = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.d_name,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Tax = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_d_tax_OF_ws_display,_defaultPointerIndex);
                if((_performResult=display_line_OF_district())>0) perform(_performResult,_display_line_OF_district_Label);
            }
        } // end perform with test before/varying
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _customer_Label=64;
    static public final int _customer_para_OF_customer_Label=65;
    
    public final int customer_para_OF_customer()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_nbr_OF_ws_display.move(wrk.d_id);
        wrk.ws_display_nb2_OF_ws_display.move(wrk.w_id);
        boolean _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"Loading Customer for D= ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", WID = ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nb2_OF_ws_display,_defaultPointerIndex);
        int _performResult=0;
        if((_performResult=display_line_OF_customer())>0) perform(_performResult,_display_line_OF_customer_Label);
        for(wrk.c_id.move(1);!((wrk.c_id.compare(wrk.cust_per_dist)>0));wrk.c_id.add(1))
        {
            wrk.c_d_id.move(wrk.d_id);
            wrk.c_w_id.move(wrk.w_id);
            wrk.str_min.move(_NCONSTANT_35);
            wrk.str_max.move(_NCONSTANT_30);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.c_first.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.c_first.lengthForLengthOfSyntax()).toInt()));
            wrk.c_middle.move("OE");
            if((wrk.c_id.compare(_NCONSTANT_62)<=0))
            {
                _sizeError=false;
                _sizeError|=wrk.name_num.moveSE(wrk.c_id.toBignum()).isSizeError();
                if((_performResult=lastname_OF_customer())>0) perform(_performResult,_lastname_OF_customer_Label);
                wrk.c_last.move(wrk.name_res);
            }
            else
            {
                wrk.rand_min.move(wrk.name_min);
                wrk.rand_max.move(wrk.name_max);
                wrk.a.move(wrk.name_a);
                wrk.c.move(wrk.name_c);
                if((_performResult=nurand())>0) perform(_performResult,_nurand_Label);
                wrk.name_num.move(wrk.rand_num);
                if((_performResult=lastname_OF_customer())>0) perform(_performResult,_lastname_OF_customer_Label);
                wrk.c_last.move(wrk.name_res);
            }
            if((_performResult=makeaddress_OF_customer())>0) perform(_performResult,_makeaddress_OF_customer_Label);
            wrk.c_street_1.move(wrk.adr_str1);
            wrk.c_street_2.move(wrk.adr_str2);
            wrk.c_city.move(wrk.adr_city);
            wrk.c_state.move(wrk.adr_state);
            wrk.c_zip.move(wrk.adr_zip);
            wrk.str_min.move(_NCONSTANT_30);
            wrk.str_max.move(_NCONSTANT_30);
            if((_performResult=makenumberstring())>0) perform(_performResult,_makenumberstring_Label);
            wrk.c_phone.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.c_phone.lengthForLengthOfSyntax()).toInt()));
            wrk.rand_min.move(_NCONSTANT_22);
            wrk.rand_max.move(_NCONSTANT_23);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            if((wrk.rand_num.compare(_NCONSTANT_22)!=0))
            {
                wrk.c_credit.move("GC");
            }
            else
            {
                wrk.c_credit.move("BC");
            }
            wrk.c_credit_lim.move(_NCONSTANT_63);
            wrk.rand_min.move(_NCONSTANT_22);
            wrk.rand_max.move(_NCONSTANT_55);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            _sizeError=false;
            Bignum _computeExpression0=_BCONSTANT_17;
            if(_computeExpression0.isZero())
                _sizeError=true;
            else
            {
                _sizeError|=wrk.c_discount.moveSE( wrk.rand_num.toBignum().divide(_computeExpression0)).isSizeError();
            }
            wrk.c_balance.move(_NCONSTANT_64);
            wrk.str_min.move(_NCONSTANT_65);
            wrk.str_max.move(_NCONSTANT_66);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.c_data_len_OF_c_data.move(new Numeric( wrk.c_data_data_OF_c_data.lengthForLengthOfSyntax()));
            wrk.c_data_data_OF_c_data.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.c_data_data_OF_c_data.lengthForLengthOfSyntax()).toInt()));
            java.sql.PreparedStatement _sqlPreparedStatement=null;
            try
            {
                _sqlPreparedStatement=_getConnection(null).prepareStatement("INSERT INTO customer (c_id, c_d_id, c_w_id, c_first, c_middle, c_last, c_street_1, c_street_2, c_city, c_state, c_zip, c_phone, c_since, c_credit, c_credit_lim, c_discount, c_balance, c_data, c_ytd_payment, c_payment_cnt, c_delivery_cnt) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 10.0, 1, 0)"); // ps4
                Object _sqlObject=null;
                _sqlObject=wrk.c_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(1,_sqlObject);
                _sqlObject=wrk.c_d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(2,_sqlObject);
                _sqlObject=wrk.c_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(3,_sqlObject);
                _sqlObject=wrk.c_first.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(4,_sqlObject);
                _sqlObject=wrk.c_middle.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(5,_sqlObject);
                _sqlObject=wrk.c_last.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(6,_sqlObject);
                _sqlObject=wrk.c_street_1.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(7,_sqlObject);
                _sqlObject=wrk.c_street_2.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(8,_sqlObject);
                _sqlObject=wrk.c_city.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(9,_sqlObject);
                _sqlObject=wrk.c_state.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(10,_sqlObject);
                _sqlObject=wrk.c_zip.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(11,_sqlObject);
                _sqlObject=wrk.c_phone.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(12,_sqlObject);
                _sqlObject=wrk.tstamp.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(13,_sqlObject);
                _sqlObject=wrk.c_credit.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(14,_sqlObject);
                _sqlObject=wrk.c_credit_lim.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(15,_sqlObject);
                _sqlObject=wrk.c_discount.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(16,_sqlObject);
                _sqlObject=wrk.c_balance.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(17,_sqlObject);
                _sqlObject=wrk.c_data.getSqlObject(9,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(18,_sqlObject);
                int _rowCount=_sqlPreparedStatement.executeUpdate();
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlPreparedStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            wrk.h_amount.move(_NCONSTANT_67);
            wrk.str_min.move(_NCONSTANT_68);
            wrk.str_max.move(_NCONSTANT_51);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.h_data.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.h_data.lengthForLengthOfSyntax()).toInt()));
            _sqlPreparedStatement=null;
            try
            {
                _sqlPreparedStatement=_getConnection(null).prepareStatement("INSERT INTO history (h_c_id, h_c_d_id, h_c_w_id, h_w_id, h_d_id, h_date, h_amount, h_data) values ( ?, ?, ?, ?, ?, ?, ?, ?)"); // ps4
                Object _sqlObject=null;
                _sqlObject=wrk.c_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(1,_sqlObject);
                _sqlObject=wrk.c_d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(2,_sqlObject);
                _sqlObject=wrk.c_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(3,_sqlObject);
                _sqlObject=wrk.c_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(4,_sqlObject);
                _sqlObject=wrk.c_d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(5,_sqlObject);
                _sqlObject=wrk.tstamp.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(6,_sqlObject);
                _sqlObject=wrk.h_amount.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(7,_sqlObject);
                _sqlObject=wrk.h_data.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                _sqlPreparedStatement.setObject(8,_sqlObject);
                int _rowCount=_sqlPreparedStatement.executeUpdate();
                wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                if(_rowCount==0)
                    throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                _sqlClear();
                int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(java.sql.SQLException _sqlException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            catch(Exception _otherException)
            {
                int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
            }
            finally
            {
                try
                {
                    _sqlPreparedStatement.close();
                }
                catch(Exception _statementCloseException)
                {
                    ;
                }
            }
            if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_22)!=0))
            {
                wrk.ws_display_nbr_OF_ws_display.move(wrk.c_id);
                _sizeError=false;
                _defaultPointerIndex.move(1);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"CID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", LST = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.c_last,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", P# = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.c_phone,_defaultPointerIndex);
                if((_performResult=display_line_OF_customer())>0) perform(_performResult,_display_line_OF_customer_Label);
            }
            if((Intrinsic.mod(wrk.c_id,_NCONSTANT_52).compare(_NCONSTANT_22)==0))
            {
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x1602);
                    final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    _context.getSqlContext().getCursors().closeAllNotHeld();
                    _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                if(!(lnk.option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea.isTrue()))
                {
                    _sizeError=!_context.defaultio().displayNoAdvancing(_context,(String)".");
                    if((Intrinsic.mod(wrk.c_id,_NCONSTANT_62).compare(_NCONSTANT_22)==0))
                    {
                        _sizeError=!_context.defaultio().display(_context,(String)" "+wrk.c_id.toText());
                    }
                }
                else
                {
                    if((_performResult=display_dot_OF_customer())>0) perform(_performResult,_display_dot_OF_customer_Label);
                    if((Intrinsic.mod(wrk.c_id,_NCONSTANT_56).compare(_NCONSTANT_22)==0))
                    {
                        wrk.ws_num_OF_ws_display.move(wrk.c_id);
                        if((_performResult=display_number_OF_customer())>0) perform(_performResult,_display_number_OF_customer_Label);
                    }
                }
            }
        } // end perform with test before/varying
        wrk.ws_display_line_OF_ws_display.move("Customer Done.");
        if((_performResult=display_line_OF_customer())>0) perform(_performResult,_display_line_OF_customer_Label);
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _orders_Label=73;
    static public final int _orders_para_OF_orders_Label=74;
    
    public final int orders_para_OF_orders()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_nbr_OF_ws_display.move(wrk.c_id);
        wrk.ws_display_nbr_OF_ws_display.move(wrk.d_id);
        wrk.ws_display_nb2_OF_ws_display.move(wrk.w_id);
        boolean _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"Loading Orders for D = ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", W = ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nb2_OF_ws_display,_defaultPointerIndex);
        int _performResult=0;
        if((_performResult=display_line_OF_orders())>0) perform(_performResult,_display_line_OF_orders_Label);
        wrk.o_d_id.move(wrk.d_id);
        wrk.o_w_id.move(wrk.w_id);
        for(wrk.i.move(1);!((wrk.i.compare(wrk.ord_per_dist)>0));wrk.i.add(1))
        {
            wrk.cust_perm_OF_filler_d___1[wrk.i.toInt()].move(wrk.i);
        } // end perform with test before/varying
        for(wrk.i.move(1);!((wrk.i.compare(wrk.ord_per_dist)>0));wrk.i.add(1))
        {
            wrk.rand_min.move(wrk.i);
            wrk.rand_max.move(wrk.ord_per_dist);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            wrk.cust_temp.move(wrk.cust_perm_OF_filler_d___1[wrk.i.toInt()]);
            wrk.cust_perm_OF_filler_d___1[wrk.i.toInt()].move(wrk.cust_perm_OF_filler_d___1[wrk.rand_num.toInt()]);
            wrk.cust_perm_OF_filler_d___1[wrk.rand_num.toInt()].move(wrk.cust_temp);
        } // end perform with test before/varying
        for(wrk.o_id.move(1);!((wrk.o_id.compare(wrk.ord_per_dist)>0));wrk.o_id.add(1))
        {
            wrk.o_c_id.move(wrk.cust_perm_OF_filler_d___1[wrk.o_id.toInt()]);
            wrk.rand_min.move(_NCONSTANT_23);
            wrk.rand_max.move(_NCONSTANT_50);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            wrk.o_carrier_id.move(wrk.rand_num);
            wrk.rand_min.move(_NCONSTANT_25);
            wrk.rand_max.move(_NCONSTANT_69);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            wrk.o_ol_cnt.move(wrk.rand_num);
            if((wrk.o_id.compare(wrk.undel_ord_base)>0))
            {
                java.sql.PreparedStatement _sqlPreparedStatement=null;
                try
                {
                    _sqlPreparedStatement=_getConnection(null).prepareStatement("INSERT INTO orders (o_id, o_c_id, o_d_id, o_w_id, o_entry_d, o_carrier_id, o_ol_cnt, o_all_local) values ( ?, ?, ?, ?, ?, NULL, ?, 1)"); // ps4
                    Object _sqlObject=null;
                    _sqlObject=wrk.o_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(1,_sqlObject);
                    _sqlObject=wrk.o_c_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(2,_sqlObject);
                    _sqlObject=wrk.o_d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(3,_sqlObject);
                    _sqlObject=wrk.o_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(4,_sqlObject);
                    _sqlObject=wrk.tstamp.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(5,_sqlObject);
                    _sqlObject=wrk.o_ol_cnt.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(6,_sqlObject);
                    int _rowCount=_sqlPreparedStatement.executeUpdate();
                    wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                    if(_rowCount==0)
                        throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                    _sqlClear();
                    int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                    if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                }
                catch(java.sql.SQLException _sqlException)
                {
                    int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                    if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                }
                catch(Exception _otherException)
                {
                    int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                    if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                }
                finally
                {
                    try
                    {
                        _sqlPreparedStatement.close();
                    }
                    catch(Exception _statementCloseException)
                    {
                        ;
                    }
                }
                _sqlPreparedStatement=null;
                try
                {
                    _sqlPreparedStatement=_getConnection(null).prepareStatement("INSERT INTO new_order (no_o_id, no_d_id, no_w_id) values ( ?, ?, ?)"); // ps4
                    Object _sqlObject=null;
                    _sqlObject=wrk.o_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(1,_sqlObject);
                    _sqlObject=wrk.o_d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(2,_sqlObject);
                    _sqlObject=wrk.o_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(3,_sqlObject);
                    int _rowCount=_sqlPreparedStatement.executeUpdate();
                    wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                    if(_rowCount==0)
                        throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                    _sqlClear();
                    int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                    if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                }
                catch(java.sql.SQLException _sqlException)
                {
                    int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                    if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                }
                catch(Exception _otherException)
                {
                    int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                    if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                }
                finally
                {
                    try
                    {
                        _sqlPreparedStatement.close();
                    }
                    catch(Exception _statementCloseException)
                    {
                        ;
                    }
                }
            }
            else
            {
                java.sql.PreparedStatement _sqlPreparedStatement=null;
                try
                {
                    _sqlPreparedStatement=_getConnection(null).prepareStatement("INSERT INTO orders (o_id, o_c_id, o_d_id, o_w_id, o_entry_d, o_carrier_id, o_ol_cnt, o_all_local) values ( ?, ?, ?, ?, ?, ?, ?, 1)"); // ps4
                    Object _sqlObject=null;
                    _sqlObject=wrk.o_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(1,_sqlObject);
                    _sqlObject=wrk.o_c_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(2,_sqlObject);
                    _sqlObject=wrk.o_d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(3,_sqlObject);
                    _sqlObject=wrk.o_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(4,_sqlObject);
                    _sqlObject=wrk.tstamp.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(5,_sqlObject);
                    _sqlObject=wrk.o_carrier_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(6,_sqlObject);
                    _sqlObject=wrk.o_ol_cnt.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                    _sqlPreparedStatement.setObject(7,_sqlObject);
                    int _rowCount=_sqlPreparedStatement.executeUpdate();
                    wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                    if(_rowCount==0)
                        throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                    _sqlClear();
                    int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                    if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                }
                catch(java.sql.SQLException _sqlException)
                {
                    int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                    if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                }
                catch(Exception _otherException)
                {
                    int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                    if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                }
                finally
                {
                    try
                    {
                        _sqlPreparedStatement.close();
                    }
                    catch(Exception _statementCloseException)
                    {
                        ;
                    }
                }
            }
            if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_22)!=0))
            {
                wrk.ws_display_nbr_OF_ws_display.move(wrk.o_id);
                wrk.ws_display_nb2_OF_ws_display.move(wrk.o_c_id);
                wrk.ws_display_nb3_OF_ws_display.move(wrk.o_d_id);
                wrk.ws_display_nb4_OF_ws_display.move(wrk.o_w_id);
                _sizeError=false;
                _defaultPointerIndex.move(1);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"OID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", CID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nb2_OF_ws_display,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", DID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nb3_OF_ws_display,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", WID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nb4_OF_ws_display,_defaultPointerIndex);
                if((_performResult=display_line_OF_orders())>0) perform(_performResult,_display_line_OF_orders_Label);
            }
            for(wrk.ol_number.move(1);!((wrk.ol_number.compare(wrk.o_ol_cnt)>0));wrk.ol_number.add(1))
            {
                wrk.rand_min.move(_NCONSTANT_23);
                wrk.rand_max.move(wrk.maxitems);
                if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
                wrk.ol_i_id.move(wrk.rand_num);
                wrk.ol_supply_w_id.move(wrk.o_w_id);
                wrk.ol_quantity.move(_NCONSTANT_25);
                wrk.ol_amount.move(_NCONSTANT_70);
                wrk.str_min.move(_NCONSTANT_51);
                wrk.str_max.move(_NCONSTANT_51);
                if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
                wrk.ol_dist_info.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.ol_dist_info.lengthForLengthOfSyntax()).toInt()));
                if((wrk.o_id.compare(wrk.undel_ord_base)>0))
                {
                    wrk.rand_min.move(_NCONSTANT_50);
                    wrk.rand_max.move(_NCONSTANT_53);
                    if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
                    _sizeError=false;
                    Bignum _computeExpression0=_BCONSTANT_18;
                    if(_computeExpression0.isZero())
                        _sizeError=true;
                    else
                    {
                        _sizeError|=wrk.ol_amount.moveSE( wrk.rand_num.toBignum().divide(_computeExpression0)).isSizeError();
                    }
                    java.sql.PreparedStatement _sqlPreparedStatement=null;
                    try
                    {
                        _sqlPreparedStatement=_getConnection(null).prepareStatement("INSERT INTO order_line (ol_o_id, ol_d_id, ol_w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info, ol_delivery_d) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, NULL)"); // ps4
                        Object _sqlObject=null;
                        _sqlObject=wrk.o_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(1,_sqlObject);
                        _sqlObject=wrk.o_d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(2,_sqlObject);
                        _sqlObject=wrk.o_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(3,_sqlObject);
                        _sqlObject=wrk.ol_number.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(4,_sqlObject);
                        _sqlObject=wrk.ol_i_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(5,_sqlObject);
                        _sqlObject=wrk.ol_supply_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(6,_sqlObject);
                        _sqlObject=wrk.ol_quantity.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(7,_sqlObject);
                        _sqlObject=wrk.ol_amount.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(8,_sqlObject);
                        _sqlObject=wrk.ol_dist_info.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(9,_sqlObject);
                        int _rowCount=_sqlPreparedStatement.executeUpdate();
                        wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                        if(_rowCount==0)
                            throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                        _sqlClear();
                        int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                        if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                    }
                    catch(java.sql.SQLException _sqlException)
                    {
                        int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                        if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                    }
                    catch(Exception _otherException)
                    {
                        int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                        if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                    }
                    finally
                    {
                        try
                        {
                            _sqlPreparedStatement.close();
                        }
                        catch(Exception _statementCloseException)
                        {
                            ;
                        }
                    }
                }
                else
                {
                    java.sql.PreparedStatement _sqlPreparedStatement=null;
                    try
                    {
                        _sqlPreparedStatement=_getConnection(null).prepareStatement("INSERT INTO order_line (ol_o_id, ol_d_id, ol_w_id, ol_number, ol_i_id, ol_supply_w_id, ol_quantity, ol_amount, ol_dist_info, ol_delivery_d) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"); // ps4
                        Object _sqlObject=null;
                        _sqlObject=wrk.o_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(1,_sqlObject);
                        _sqlObject=wrk.o_d_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(2,_sqlObject);
                        _sqlObject=wrk.o_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(3,_sqlObject);
                        _sqlObject=wrk.ol_number.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(4,_sqlObject);
                        _sqlObject=wrk.ol_i_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(5,_sqlObject);
                        _sqlObject=wrk.ol_supply_w_id.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(6,_sqlObject);
                        _sqlObject=wrk.ol_quantity.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(7,_sqlObject);
                        _sqlObject=wrk.ol_amount.getSqlObject(0,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(8,_sqlObject);
                        _sqlObject=wrk.ol_dist_info.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(9,_sqlObject);
                        _sqlObject=wrk.tstamp.getSqlObject(96,(com.heirloomcomputing.ecs.api.IDatatype)null);
                        _sqlPreparedStatement.setObject(10,_sqlObject);
                        int _rowCount=_sqlPreparedStatement.executeUpdate();
                        wrk.sqlerrd_OF_sqlca__1[3].move(_rowCount);
                        if(_rowCount==0)
                            throw new java.sql.SQLException("Elastic COBOL SQL: 02000.C6: No rows affected","02000");
                        _sqlClear();
                        int _sqlExceptionGoto=_sqlWarningHandler(_sqlPreparedStatement.getWarnings(),-1,-1,_sqlerror_OF_main_Label);
                        if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                    }
                    catch(java.sql.SQLException _sqlException)
                    {
                        int _sqlExceptionGoto=_sqlExceptionHandler(_sqlException,-1,-1,_sqlerror_OF_main_Label);
                        if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                    }
                    catch(Exception _otherException)
                    {
                        int _sqlExceptionGoto=_sqlExceptionHandler(_otherException,-1,-1,_sqlerror_OF_main_Label);
                        if(_sqlExceptionGoto>=0) return _sqlExceptionGoto; // return paragraph number
                    }
                    finally
                    {
                        try
                        {
                            _sqlPreparedStatement.close();
                        }
                        catch(Exception _statementCloseException)
                        {
                            ;
                        }
                    }
                }
                if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_22)!=0))
                {
                    wrk.ws_display_nbr_OF_ws_display.move(wrk.ol_number);
                    wrk.ws_display_nb2_OF_ws_display.move(wrk.ol_i_id);
                    wrk.ws_display_nb3_OF_ws_display.move(wrk.ol_quantity);
                    wrk.ws_ol_amount_OF_ws_display.move(wrk.ol_amount);
                    _sizeError=false;
                    _defaultPointerIndex.move(1);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"OL = ",_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", IID = ",_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nb2_OF_ws_display,_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", QUAN = ",_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nb3_OF_ws_display,_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", AMT = ",_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_ol_amount_OF_ws_display,_defaultPointerIndex);
                    if((_performResult=display_line_OF_orders())>0) perform(_performResult,_display_line_OF_orders_Label);
                }
            } // end perform with test before/varying
            if((Intrinsic.mod(wrk.o_id,_NCONSTANT_50).compare(_NCONSTANT_22)==0))
            {
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x1602);
                    final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    _context.getSqlContext().getCursors().closeAllNotHeld();
                    _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                if(!(lnk.option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea.isTrue()))
                {
                    if((Intrinsic.mod(wrk.o_id,_NCONSTANT_52).compare(_NCONSTANT_22)==0))
                    {
                        _sizeError=!_context.defaultio().displayNoAdvancing(_context,(String)".");
                    }
                    if((Intrinsic.mod(wrk.o_id,_NCONSTANT_66).compare(_NCONSTANT_22)==0))
                    {
                        _sizeError=!_context.defaultio().display(_context,(String)" "+wrk.o_id.toText());
                    }
                }
                else
                {
                    if((_performResult=display_dot_OF_orders())>0) perform(_performResult,_display_dot_OF_orders_Label);
                    if((Intrinsic.mod(wrk.o_id,_NCONSTANT_66).compare(_NCONSTANT_22)==0))
                    {
                        wrk.ws_num_OF_ws_display.move(wrk.o_id);
                        if((_performResult=display_number_OF_orders())>0) perform(_performResult,_display_number_OF_orders_Label);
                    }
                }
            }
        } // end perform with test before/varying
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_display_line_OF_ws_display.move("Orders Done.");
        if((_performResult=display_line_OF_orders())>0) perform(_performResult,_display_line_OF_orders_Label);
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _makeaddress_Label=79;
    static public final int _makeaddress_para_OF_makeaddress_Label=80;
    
    public final int makeaddress_para_OF_makeaddress()
    {
        final Wrk wrk=this.wrk;
        wrk.str_min.move(_NCONSTANT_50);
        wrk.str_max.move(_NCONSTANT_58);
        int _performResult=0;
        if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
        wrk.adr_str1.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.adr_str1.lengthForLengthOfSyntax()).toInt()));
        if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
        wrk.adr_str2.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.adr_str2.lengthForLengthOfSyntax()).toInt()));
        if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
        wrk.adr_city.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.adr_city.lengthForLengthOfSyntax()).toInt()));
        wrk.str_min.move(_NCONSTANT_26);
        wrk.str_max.move(_NCONSTANT_26);
        if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
        wrk.adr_state.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.adr_state.lengthForLengthOfSyntax()).toInt()));
        wrk.str_min.move(_NCONSTANT_49);
        wrk.str_max.move(_NCONSTANT_49);
        if((_performResult=makenumberstring())>0) perform(_performResult,_makenumberstring_Label);
        wrk.adr_zip.move(wrk.str_val.ref(_NCONSTANT_23.toInt(),new Numeric( wrk.adr_zip.lengthForLengthOfSyntax()).toInt()));
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _lastname_Label=82;
    static public final int _lastname_para_OF_lastname_Label=83;
    
    public final int lastname_para_OF_lastname()
    {
        final Wrk wrk=this.wrk;
        wrk.name_res.moveSpaces();
        boolean _sizeError=false;
        _sizeError|=wrk.sub1.moveSE( Intrinsic.mod((Intrinsic.integer( Numeric.divGiving(wrk.name_num,_NCONSTANT_52))),_NCONSTANT_50).toBignum().add(_BCONSTANT_0)).isSizeError();
        _sizeError=false;
        _sizeError|=wrk.sub2.moveSE( Intrinsic.mod((Intrinsic.integer( Numeric.divGiving(wrk.name_num,_NCONSTANT_50))),_NCONSTANT_50).toBignum().add(_BCONSTANT_0)).isSizeError();
        _sizeError=false;
        _sizeError|=wrk.sub3.moveSE( Intrinsic.mod((Intrinsic.integer( Numeric.divGiving(wrk.name_num,_NCONSTANT_23))),_NCONSTANT_50).toBignum().add(_BCONSTANT_0)).isSizeError();
        _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=wrk.name_res.string(wrk.n_OF_filler_2___1[wrk.sub1.toInt()],Variable.SPACES_STRING,_defaultPointerIndex);
        _sizeError|=wrk.name_res.string(wrk.n_OF_filler_2___1[wrk.sub2.toInt()],Variable.SPACES_STRING,_defaultPointerIndex);
        _sizeError|=wrk.name_res.string(wrk.n_OF_filler_2___1[wrk.sub3.toInt()],Variable.SPACES_STRING,_defaultPointerIndex);
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _sqlerror_Label=85;
    static public final int _sqlerror_para_OF_sqlerror_Label=86;
    
    public final int sqlerror_para_OF_sqlerror()
    {
        final Wrk wrk=this.wrk;
        wrk.csqlcode.move(wrk.sqlcode_OF_sqlca);
        boolean _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"SQL Error ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.sqlstate,_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)" ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.csqlcode,_defaultPointerIndex);
        int _performResult=0;
        if((_performResult=display_line_OF_sqlerror())>0) perform(_performResult,_display_line_OF_sqlerror_Label);
        _sizeError=false;
        _defaultPointerIndex.move(1);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"SQL Error ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.sqlerrmc_OF_sqlerrm_OF_sqlca,_defaultPointerIndex);
        if((_performResult=display_line_OF_sqlerror())>0) perform(_performResult,_display_line_OF_sqlerror_Label);
        // EXEC JAVA
        System.out.println("SQL Error " +
        wrk.sqlerrmc_OF_sqlerrm_OF_sqlca);
        System.err.println("SQL Error " +
        wrk.sqlerrmc_OF_sqlerrm_OF_sqlca);
        // END-EXEC JAVA
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_3,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_3,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_3,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        _context.getReturnCode().move(_NCONSTANT_71);
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x0e08);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("RETURN",_TAGCONSTANT_2,_transactionParameters);
            if(_programControl!=null) _programControl.returnControl(_transenv,_TAGCONSTANT_2,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("RETURN",_TAGCONSTANT_2,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            if(true) throw new UnwindException(UnwindException.RETURN);
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0e08));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _display_line_Label=88;
    static public final int _display_line_para_OF_display_line_Label=89;
    
    public final int display_line_para_OF_display_line()
    {
        final Wrk wrk=this.wrk;
        boolean _sizeError=false;
        wrk.ws_row_OF_ws_display.add(1);
        
        if((wrk.ws_row_OF_ws_display.compare(_NCONSTANT_72)>0))
        {
            wrk.ws_row_OF_ws_display.move(_NCONSTANT_22);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1812);
                final Object[] _transactionParameters=new Object[] {null,lnk.eibrsrce_OF_dfheiblk,null,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
                _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_0,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SEND CONTROL",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SEND CONTROL",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
        }
        wrk.ws_col_OF_ws_display.move(_NCONSTANT_23);
        _sizeError=false;
        _sizeError|=wrk.ws_cpos_OF_ws_display.moveSE( (wrk.ws_row_OF_ws_display.toBignum().multiply(_BCONSTANT_19)).addingWith(_BCONSTANT_0)).isSizeError();
        wrk.ws_col_OF_ws_display.move(new Numeric( wrk.ws_display_line_OF_ws_display.lengthForLengthOfSyntax()));
        while(!((wrk.ws_display_line_OF_ws_display.ref(wrk.ws_col_OF_ws_display.toInt(),_NCONSTANT_23.toInt()).compare(Variable.SPACES)!=0)))
        {
            wrk.ws_col_OF_ws_display.sub(_NCONSTANT_23);
            
        } // end perform with test before
        wrk.ws_col_OF_ws_display.add(1);
        
        _sizeError=false;
        _sizeError|=wrk.ws_cpos_OF_ws_display.moveSE( (wrk.ws_row_OF_ws_display.toBignum().multiply(_BCONSTANT_19)).addingWith(_BCONSTANT_0)).isSizeError();
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1812);
            final Object[] _transactionParameters=new Object[] {null,wrk.ws_cpos_OF_ws_display,lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_4,_transactionParameters);
            _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_4,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_4,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_cpos_OF_ws_display.add(wrk.ws_col_OF_ws_display);
        
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1806);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,wrk.ws_display_line_OF_ws_display,wrk.ws_col_OF_ws_display,null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND FROM",_TAGCONSTANT_5,_transactionParameters);
            _basicMappingSupport.sendText(_transenv,_TAGCONSTANT_5,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND FROM",_TAGCONSTANT_5,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND FROM",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1806));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND FROM",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_display_line_OF_ws_display.moveSpaces();
        wrk.ws_row_OF_ws_display.add(1);
        
        if((wrk.ws_row_OF_ws_display.compare(_NCONSTANT_72)>0))
        {
            wrk.ws_row_OF_ws_display.move(_NCONSTANT_22);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1812);
                final Object[] _transactionParameters=new Object[] {null,lnk.eibrsrce_OF_dfheiblk,null,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
                _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_0,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SEND CONTROL",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SEND CONTROL",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
        }
        wrk.ws_col_OF_ws_display.move(_NCONSTANT_23);
        _sizeError=false;
        _sizeError|=wrk.ws_cpos_OF_ws_display.moveSE( (wrk.ws_row_OF_ws_display.toBignum().multiply(_BCONSTANT_19)).addingWith(_BCONSTANT_0)).isSizeError();
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _display_dot_Label=91;
    static public final int _display_dot_para_OF_display_dot_Label=92;
    
    public final int display_dot_para_OF_display_dot()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_line_OF_ws_display.ref(_NCONSTANT_23.toInt(),_NCONSTANT_23.toInt()).move(".");
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1812);
            final Object[] _transactionParameters=new Object[] {null,wrk.ws_cpos_OF_ws_display,lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_4,_transactionParameters);
            _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_4,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_4,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1806);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,wrk.ws_display_line_OF_ws_display,new java.lang.Integer(1),null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND FROM",_TAGCONSTANT_5,_transactionParameters);
            _basicMappingSupport.sendText(_transenv,_TAGCONSTANT_5,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND FROM",_TAGCONSTANT_5,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND FROM",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1806));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND FROM",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        boolean _sizeError=false;
        wrk.ws_cpos_OF_ws_display.add(1);
        
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _display_number_Label=94;
    static public final int _display_number_para_OF_display_number_Label=95;
    
    public final int display_number_para_OF_display_number()
    {
        final Wrk wrk=this.wrk;
        boolean _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)" ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_num_OF_ws_display,_defaultPointerIndex);
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1812);
            final Object[] _transactionParameters=new Object[] {null,wrk.ws_cpos_OF_ws_display,lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_4,_transactionParameters);
            _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_4,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_4,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1806);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,wrk.ws_display_line_OF_ws_display,new java.lang.Integer(11),null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND FROM",_TAGCONSTANT_5,_transactionParameters);
            _basicMappingSupport.sendText(_transenv,_TAGCONSTANT_5,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND FROM",_TAGCONSTANT_5,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND FROM",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1806));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND FROM",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_row_OF_ws_display.add(1);
        
        if((wrk.ws_row_OF_ws_display.compare(_NCONSTANT_72)>0))
        {
            wrk.ws_row_OF_ws_display.move(_NCONSTANT_22);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1812);
                final Object[] _transactionParameters=new Object[] {null,lnk.eibrsrce_OF_dfheiblk,null,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
                _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_0,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SEND CONTROL",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SEND CONTROL",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
        }
        wrk.ws_col_OF_ws_display.move(_NCONSTANT_23);
        _sizeError=false;
        _sizeError|=wrk.ws_cpos_OF_ws_display.moveSE( (wrk.ws_row_OF_ws_display.toBignum().multiply(_BCONSTANT_19)).addingWith(_BCONSTANT_0)).isSizeError();
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    public int display_number()
    {
        perform(94,94);
        return 0;
    }
    
    public int display_dot()
    {
        perform(91,91);
        return 0;
    }
    
    public int display_line()
    {
        perform(88,88);
        return 0;
    }
    
    public int sqlerror()
    {
        perform(85,85);
        return 0;
    }
    
    public int lastname()
    {
        perform(82,82);
        return 0;
    }
    
    public int makeaddress()
    {
        perform(79,79);
        return 0;
    }
    
    public int orders()
    {
        perform(73,73);
        return 0;
    }
    
    public int customer()
    {
        perform(64,64);
        return 0;
    }
    
    public int district()
    {
        perform(59,59);
        return 0;
    }
    
    public int stock()
    {
        perform(53,53);
        return 0;
    }
    
    public int loadord()
    {
        perform(47,47);
        return 0;
    }
    
    public int loadcust()
    {
        perform(41,41);
        return 0;
    }
    
    public int loadware()
    {
        perform(31,31);
        return 0;
    }
    
    public int loaditems()
    {
        perform(23,23);
        return 0;
    }
    
    public int makenumberstring()
    {
        perform(20,20);
        return 0;
    }
    
    public int makealphastring()
    {
        perform(18,18);
        return 0;
    }
    
    public int nurand()
    {
        perform(16,16);
        return 0;
    }
    
    public int randomnumber()
    {
        perform(14,14);
        return 0;
    }
    
    public int main_()
    {
        perform(1,1);
        return 0;
    }
    
    static public final int _loaditems_OF_main_Label=23;
    
    public final int loaditems_OF_main()
    {
        return loaditems();
    }
    
    static public final int _loaditems_OF_makenumberstring_Label=23;
    
    public final int loaditems_OF_makenumberstring()
    {
        return loaditems();
    }
    
    static public final int _loadware_OF_main_Label=31;
    
    public final int loadware_OF_main()
    {
        return loadware();
    }
    
    static public final int _loadware_OF_loaditems_Label=31;
    
    public final int loadware_OF_loaditems()
    {
        return loadware();
    }
    
    static public final int _loadcust_OF_main_Label=41;
    
    public final int loadcust_OF_main()
    {
        return loadcust();
    }
    
    static public final int _loadcust_OF_loadware_Label=41;
    
    public final int loadcust_OF_loadware()
    {
        return loadcust();
    }
    
    static public final int _loadord_OF_main_Label=47;
    
    public final int loadord_OF_main()
    {
        return loadord();
    }
    
    static public final int _loadord_OF_loadcust_Label=47;
    
    public final int loadord_OF_loadcust()
    {
        return loadord();
    }
    
    static public final int _stock_OF_loadware_Label=53;
    
    public final int stock_OF_loadware()
    {
        return stock();
    }
    
    static public final int _stock_OF_loadord_Label=53;
    
    public final int stock_OF_loadord()
    {
        return stock();
    }
    
    static public final int _district_OF_loadware_Label=59;
    
    public final int district_OF_loadware()
    {
        return district();
    }
    
    static public final int _district_OF_stock_Label=59;
    
    public final int district_OF_stock()
    {
        return district();
    }
    
    static public final int _customer_OF_loadcust_Label=64;
    
    public final int customer_OF_loadcust()
    {
        return customer();
    }
    
    static public final int _customer_OF_district_Label=64;
    
    public final int customer_OF_district()
    {
        return customer();
    }
    
    static public final int _orders_OF_loadord_Label=73;
    
    public final int orders_OF_loadord()
    {
        return orders();
    }
    
    static public final int _orders_OF_customer_Label=73;
    
    public final int orders_OF_customer()
    {
        return orders();
    }
    
    static public final int _makeaddress_OF_loadware_Label=79;
    
    public final int makeaddress_OF_loadware()
    {
        return makeaddress();
    }
    
    static public final int _makeaddress_OF_district_Label=79;
    
    public final int makeaddress_OF_district()
    {
        return makeaddress();
    }
    
    static public final int _makeaddress_OF_customer_Label=79;
    
    public final int makeaddress_OF_customer()
    {
        return makeaddress();
    }
    
    static public final int _makeaddress_OF_orders_Label=79;
    
    public final int makeaddress_OF_orders()
    {
        return makeaddress();
    }
    
    static public final int _lastname_OF_customer_Label=82;
    
    public final int lastname_OF_customer()
    {
        return lastname();
    }
    
    static public final int _lastname_OF_makeaddress_Label=82;
    
    public final int lastname_OF_makeaddress()
    {
        return lastname();
    }
    
    static public final int _sqlerror_OF_main_Label=85;
    
    public final int sqlerror_OF_main()
    {
        return sqlerror();
    }
    
    static public final int _sqlerror_OF_lastname_Label=85;
    
    public final int sqlerror_OF_lastname()
    {
        return sqlerror();
    }
    
    static public final int _display_line_OF_main_Label=88;
    
    public final int display_line_OF_main()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_loaditems_Label=88;
    
    public final int display_line_OF_loaditems()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_loadware_Label=88;
    
    public final int display_line_OF_loadware()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_loadcust_Label=88;
    
    public final int display_line_OF_loadcust()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_loadord_Label=88;
    
    public final int display_line_OF_loadord()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_stock_Label=88;
    
    public final int display_line_OF_stock()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_district_Label=88;
    
    public final int display_line_OF_district()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_customer_Label=88;
    
    public final int display_line_OF_customer()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_orders_Label=88;
    
    public final int display_line_OF_orders()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_sqlerror_Label=88;
    
    public final int display_line_OF_sqlerror()
    {
        return display_line();
    }
    
    static public final int _display_dot_OF_loaditems_Label=91;
    
    public final int display_dot_OF_loaditems()
    {
        return display_dot();
    }
    
    static public final int _display_dot_OF_stock_Label=91;
    
    public final int display_dot_OF_stock()
    {
        return display_dot();
    }
    
    static public final int _display_dot_OF_customer_Label=91;
    
    public final int display_dot_OF_customer()
    {
        return display_dot();
    }
    
    static public final int _display_dot_OF_orders_Label=91;
    
    public final int display_dot_OF_orders()
    {
        return display_dot();
    }
    
    static public final int _display_dot_OF_display_line_Label=91;
    
    public final int display_dot_OF_display_line()
    {
        return display_dot();
    }
    
    static public final int _display_number_OF_loaditems_Label=94;
    
    public final int display_number_OF_loaditems()
    {
        return display_number();
    }
    
    static public final int _display_number_OF_stock_Label=94;
    
    public final int display_number_OF_stock()
    {
        return display_number();
    }
    
    static public final int _display_number_OF_customer_Label=94;
    
    public final int display_number_OF_customer()
    {
        return display_number();
    }
    
    static public final int _display_number_OF_orders_Label=94;
    
    public final int display_number_OF_orders()
    {
        return display_number();
    }
    
    static public final int _display_number_OF_display_dot_Label=94;
    
    public final int display_number_OF_display_dot()
    {
        return display_number();
    }
    
    
    /**
     * Dfheiblk property (length 2131)
     * @return property value of Dfheiblk
     */
    public String getDfheiblk()
    {
        if(_context==null) setup(null);
        return lnk.dfheiblk.toText();
    }
    
    /**
     * Dfheiblk property (length 2131)
     * @return property value of Dfheiblk
     */
    public String getDfheiblkAsString()
    {
        if(_context==null) setup(null);
        return lnk.dfheiblk.toText();
    }
    
    /**
     * Dfhcommarea property (length 2237)
     * @return property value of Dfhcommarea
     */
    public String getDfhcommarea()
    {
        if(_context==null) setup(null);
        return lnk.dfhcommarea.toText();
    }
    
    /**
     * Dfhcommarea property (length 2237)
     * @return property value of Dfhcommarea
     */
    public String getDfhcommareaAsString()
    {
        if(_context==null) setup(null);
        return lnk.dfhcommarea.toText();
    }
    
    /**
     * Dfheiblk property (length 2131)
     * @param paramValue parameter property value of Dfheiblk
     */
    public void setDfheiblk(String _paramValue)
    {
        if(_context==null) setup(null);
        lnk.eibtime_OF_dfheiblk.move(_paramValue.length());
        lnk.eibdate_OF_dfheiblk.moveMax(_paramValue);
    }
    
    /**
     * Dfhcommarea property (length 2237)
     * @param paramValue parameter property value of Dfhcommarea
     */
    public void setDfhcommarea(String _paramValue)
    {
        if(_context==null) setup(null);
        lnk.dfhcommarea.move(_paramValue);
    }
    public int getElasticCobolMajorVersion() { return 17; }
    public int getElasticCobolMinorVersion() { return 8; }
    public int getElasticCobolSubminorVersion() { return 24; }
    public String getElasticCobolBuildTimestamp() { return "(Build Aug 29 2017 11:46:34)"; }
    
    public void link(com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _transactionEnvironment,com.heirloomcomputing.etp.transaction.link.CommArea _commArea,com.heirloomcomputing.etp.transaction.bridge.BridgeFacility _facility,com.heirloomcomputing.etp.transaction.link.Environment _environment)
    {
        _setTransactionEnvironment(_transactionEnvironment);
        // Setup basic program functionality
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        com.heirloomcomputing.etp.transaction.link.CommArea _previousCommArea=_transactionEnvironment.getCommArea();
        _transactionEnvironment.setCommArea(_commArea);
        if(_commArea!=null)
        {
            lnk.dfhcommarea.setPointerToBytes(_commArea.toByteArrayNoCopy());
        }
        else
        {
            lnk.dfhcommarea.setPointerToBytes((byte[])null);
        }
        lnk.dfheiblk.setPointerToBytes(_transactionEnvironment.getEIB());
        java.util.Calendar _cal=_transactionEnvironment.getTaskStartTime();
        if(_cal!=null)
        {
            int _cal_c=_cal.get(java.util.Calendar.YEAR)/100-19;
            int _cal_y=_cal.get(java.util.Calendar.YEAR)%100;
            int _cal_d=_cal.get(java.util.Calendar.DAY_OF_YEAR);
            lnk.eibdate_OF_dfheiblk.move(_cal_c*100000+_cal_y*1000+_cal_d);
            int _cal_h=_cal.get(java.util.Calendar.HOUR_OF_DAY);
            int _cal_m=_cal.get(java.util.Calendar.MINUTE);
            int _cal_s=_cal.get(java.util.Calendar.SECOND);
            lnk.eibtime_OF_dfheiblk.move(_cal_h*10000+_cal_m*100+_cal_s);
        }
        lnk.eibtaskn_OF_dfheiblk.move(_transactionEnvironment.getTransactionNumber());
        lnk.eibtrmid_OF_dfheiblk.move(_transactionEnvironment.getTerminalId());
        lnk.eibtrnid_OF_dfheiblk.move(_transactionEnvironment.getTransactionId());
        lnk.eibcposn_OF_dfheiblk.move(_transactionEnvironment.getCursorPosition());
        lnk.eibaid_OF_dfheiblk.move(_transactionEnvironment.getAID());
        if(_commArea!=null)
        {
            lnk.eibcalen_OF_dfheiblk.move(_commArea.getLength());
        }
        else
        {
            lnk.eibcalen_OF_dfheiblk.move(0);
        }
        _callArrayInitializer();
        // Call program
        try
        {
            this.run(-1,0);
        }
        finally
        {
            _transactionEnvironment.setCommArea(_previousCommArea);
        }
        _callArrayFinalizer();
    }
    
    
    public void run() // Runnable
    {
        try
        {
            run(-1,-1);
        }
        catch(UnwindException _unwindException)
        {
            return; // completely unwound
        }
        catch(Throwable _anyException)
        {
            CobolException.runtimeError(_context,_anyException);
        }
    }
    
    public void run(int _thread,int _entry) // ICobolInterface
    {
        if(_context==null)
        {
            if(_entry<0) _entry=0;
            setup(null);
        }
        else
        {
            if(_entry<0) _entry=_context.getEntryParagraph();
            _context.setEntryParagraph(0);
        }
        try
        {
            perform(_entry,-1);
            return;
        }
        catch(ExitProgramException _exitProgramException)
        {
            return; // goback
        }
    }
    
    public String redirectCall()
    {
        return null;
    }
    
    static public void main(String _args[]) // application entry
    {
        sqlload _programInstance=null;
        try
        {
            _programInstance = new sqlload();
            Context.initializeApplication(_programInstance,_args);
            if(_args!=null && _args.length>0)
            {
                _programInstance.setup(null);
                if(_args.length>0) _programInstance.setDfheiblk(_args[0]);
                if(_args.length>1) _programInstance.setDfhcommarea(_args[1]);
            }
            _programInstance.run(-1,-1);
            _programInstance._transenv.end();
            _programInstance._context.exit();
        }
        catch(Throwable _throwableException)
        {
            if (_programInstance != null && _programInstance._context != null && _programInstance._context.getReturnInt() == 0) 
            {
                   _programInstance._context.setReturnCode(1);
                   Context.appReturnCode = _programInstance._context.getReturnInt();
            }
            if(_programInstance!=null&&_programInstance._transenv!=null) _programInstance._transenv.abend(_throwableException,CobolException.isDumpRequested(_throwableException),CobolException.getDumpMessage(_throwableException));
        }
        Context.applicationExit();
    }
    
    public transient Context _context;
    
    public Context setup(Context _passContext)
    {
        _context=_passContext;
        if(_context==null) // create fresh context
        {
            _context=new Context(_passContext,_programId,this);
        }
        else
            _context.setupContext(_passContext,_programId,this);
        wrk=(Wrk)_context.getWrk();
        lnk=(Lnk)_context.getLnk();
        boolean doInitWrk=false;
        boolean doDeclareWrk=false;
        boolean doInitLnk=false;
        boolean doDeclareLnk=false;
        if(wrk==null)
        {
            doInitWrk=true;
            doDeclareWrk=true;
            _context.setWrk(wrk=new Wrk());
        }
        if(lnk==null)
        {
            doInitLnk=true;
            doDeclareLnk=true;
            _context.setLnk(lnk=new Lnk());
        }
        if(doInitWrk) wrk.doInitializations();
        if(doInitLnk) lnk.doInitializations();
        
        
        if(doDeclareWrk) wrk.doDeclarations();
        if(doDeclareLnk) lnk.doDeclarations();
        // Set the transaction environment from Context
        if(_passContext!=null) _setTransactionEnvironment((com.heirloomcomputing.etp.transaction.api.TransactionEnvironment)_passContext.getTransactionEnvironment());
        return _context;
    }
    com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _transenv;
    com.heirloomcomputing.etp.transaction.api.BasicMappingSupport _basicMappingSupport=null;
    com.heirloomcomputing.etp.transaction.api.Recovery _recovery=null;
    com.heirloomcomputing.etp.transaction.api.ProgramControl _programControl=null;
    
    public void _setTransactionEnvironment(com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _environment)
    {
        if(_environment==_transenv || _environment==null) return;
        if(_context==null) setup(null);
        _transenv=_environment;
        _basicMappingSupport=_transenv.obtainServiceBasicMappingSupport(null);
        _recovery=_transenv.obtainServiceRecovery(null);
        _programControl=_transenv.obtainServiceProgramControl(null);
        _context.setTransactionEnvironment(_transenv);
    }
    
    
    public void cancel() // close open files, chance for custom action
    {
    } // end cancel
    
    
    public void close() // close any resources that might have been left open
    {
        if(_context.getExistingSqlContext() != null)
        {
            _context.getExistingSqlContext().getCursors().closeAll();
        }
    } // end close
    
    public void perform(int _procedure) // ICobolInterface
    {
        perform(_procedure,_procedure); // only procedure
    }
    
    public void perform(int _begin,int _end) // ICobolInterface
    {
        _debug_loadWatchpoints(_context.getProgramName());
        try
        {
            for(;;) // forever until stopped
            {
                switch(_begin)
                {
                    
                    case 0: // Initial Paragraph
                    case 1: if( (_begin=main_para_OF_main()) != 0) break;
                    
                    if(_end==1) { return  ; }
                    
                    case 14: randomnumber_para_OF_randomnumber();
                    
                    if(_end==14) { return  ; }
                    
                    case 16: nurand_para_OF_nurand();
                    
                    if(_end==16) { return  ; }
                    
                    case 18: makealphastring_para_OF_makealphastring();
                    
                    if(_end==18) { return  ; }
                    
                    case 20: makenumberstring_para_OF_makenumberstring();
                    
                    if(_end==20) { return  ; }
                    
                    case 23: if( (_begin=loaditems_para_OF_loaditems()) != 0) break;
                    
                    if(_end==23) { return  ; }
                    
                    case 31: if( (_begin=loadware_para_OF_loadware()) != 0) break;
                    
                    if(_end==31) { return  ; }
                    
                    case 41: if( (_begin=loadcust_para_OF_loadcust()) != 0) break;
                    
                    if(_end==41) { return  ; }
                    
                    case 47: if( (_begin=loadord_para_OF_loadord()) != 0) break;
                    
                    if(_end==47) { return  ; }
                    
                    case 53: if( (_begin=stock_para_OF_stock()) != 0) break;
                    
                    if(_end==53) { return  ; }
                    
                    case 59: if( (_begin=district_para_OF_district()) != 0) break;
                    
                    if(_end==59) { return  ; }
                    
                    case 64: if( (_begin=customer_para_OF_customer()) != 0) break;
                    
                    if(_end==64) { return  ; }
                    
                    case 73: if( (_begin=orders_para_OF_orders()) != 0) break;
                    
                    if(_end==73) { return  ; }
                    
                    case 79: makeaddress_para_OF_makeaddress();
                    
                    if(_end==79) { return  ; }
                    
                    case 82: lastname_para_OF_lastname();
                    
                    if(_end==82) { return  ; }
                    
                    case 85: if( (_begin=sqlerror_para_OF_sqlerror()) != 0) break;
                    
                    if(_end==85) { return  ; }
                    
                    case 88: if( (_begin=display_line_para_OF_display_line()) != 0) break;
                    
                    if(_end==88) { return  ; }
                    
                    case 91: if( (_begin=display_dot_para_OF_display_dot()) != 0) break;
                    
                    if(_end==91) { return  ; }
                    
                    case 94: if( (_begin=display_number_para_OF_display_number()) != 0) break;
                    
                    if(_end==94) { return   ; } // end SECTION -=-=-=-=-=-=-
                    
                    default: throw ExitProgramException.EXIT_DEFAULT;
                } // end switch
            } // end forever
        }
        catch(UnwindException _unwindException)
        {
            perform(_unwindException.unwind(_context,this),_end);
            return;
        }
        catch(ExitProgramException _exitProgramException)
        {
            throw _exitProgramException;
        }
        catch(Throwable _runtimeException)
        {
            int _resumeAt=_exceptionHandler(_runtimeException,false);
            if(_resumeAt>0) perform(_resumeAt,_resumeAt);
            else throw ExitProgramException.EXIT_RESUME;
        }
    } // end perform(int,int)
    
    public int _exceptionHandler(Throwable _exception,boolean _nextStatementAvailable)
    {
        $X$_exceptionInfo = String.valueOf(_exception.getStackTrace()[0].getLineNumber());
        // if debugging in Eclipse pause 
        CobolExceptionPause cbp = new CobolExceptionPause();
        if(_exception instanceof RuntimeException) throw (RuntimeException)_exception;
        if(_exception instanceof Error) throw (Error)_exception;
        throw new com.heirloomcomputing.ecs.exception.EcObject(_exception);
    }
    public void _sqlClear()
    {
        wrk.sqlcode_OF_sqlca.move(0);
        wrk.sqlstate.move("00000"); // successful execution
        wrk.sqlwarn_OF_sqlca.moveSpaces(); // no warnings
        wrk.sqlerrmc_OF_sqlerrm_OF_sqlca.moveSpaces();
        wrk.sqlerrml_OF_sqlerrm_OF_sqlca.moveZeroes();
    }
    
    public java.sql.Connection _getConnection(String _name) throws java.sql.SQLException
    {
        java.sql.Connection _connection=_transenv.getSqlConnection(_name);
        if(_connection!=null)
        {
            _context.getSqlContext().setConnection(_name,_connection);
        }
        else
        {
            _connection=_context.getSqlContext().getConnection(_name);
            if(_connection!=null)
            {
                _transenv.setSqlConnection(_name,_connection);
            }
        }
        return _connection;
    }
    
    public void _setConnection(Object _reference) throws java.sql.SQLException
    {
        if (_reference instanceof String)
        {
            _transenv.setSqlConnection(_getConnection((String) _reference));
        }
        else
        {
            java.sql.Connection _connection=_transenv.setSqlConnection(_reference);
            _context.getSqlContext().setConnection(_connection);
        }
    }
    
    public int _sqlVendorCode(int _vendorCode,int _desiredCode)
    {
        switch(_desiredCode)
        {
            case  -1: if(_vendorCode>0) return -_vendorCode;
                      if(_vendorCode==0) return -1;
                      return _vendorCode;
            case   0: return 0;
            case 100: return 100;
        }
        return _vendorCode;
    }
    
    public int _sqlWarningHandler(java.sql.SQLWarning _sqlException,int _notFoundLabel,int _warningLabel,int _errorLabel)
    {
        if(_sqlException==null) return -1;
        int _errorCode=_sqlException.getErrorCode();
        String _sqlResult=SqlContext.obtainSqlState(_sqlException);
        wrk.sqlstate.move(_sqlResult);
        if(_sqlResult.startsWith("01"))
        {
            wrk.sqlwarn0_OF_sqlwarn_OF_sqlca.move("W");
            if(_warningLabel!=-1) return _warningLabel; // WHENEVER SQLWARNING HANDLER
        }
        else if(_sqlResult.startsWith("02"))
        {
            if(_notFoundLabel!=-1) return _notFoundLabel; // WHENEVER NOT FOUND HANDLER
        }
        return -1;
    } // end _sqlWarningHandler
    
    public int _sqlExceptionHandler(Throwable _otherException,int _notFoundLabel,int _warningLabel,int _errorLabel)
    {
        String _sqlExceptionText=_otherException.getMessage();
        if(_sqlExceptionText==null) _sqlExceptionText=_otherException.toString();
        wrk.sqlerrmc_OF_sqlerrm_OF_sqlca.move(_sqlExceptionText);
        wrk.sqlerrml_OF_sqlerrm_OF_sqlca.move(_sqlExceptionText.length());
        String _sqlResult=null;
        int _errorCode=-1;
        wrk.sqlstate.move("01000");
        _sqlResult="01";
        if(_sqlResult.startsWith("01"))
        {
            wrk.sqlwarn0_OF_sqlwarn_OF_sqlca.move("W");
            wrk.sqlcode_OF_sqlca.move(_sqlVendorCode(_errorCode,100));
            if(_warningLabel!=-1) return _warningLabel; // WHENEVER SQLWARNING HANDLER
        }
        return -1;
    }
    
    public int _sqlExceptionHandler(java.sql.SQLException _sqlException,int _notFoundLabel,int _warningLabel,int _errorLabel)
    {
        String _sqlExceptionText=_sqlException.getMessage();
        if(_sqlExceptionText==null) _sqlExceptionText=_sqlException.toString();
        wrk.sqlerrmc_OF_sqlerrm_OF_sqlca.move(_sqlExceptionText);
        wrk.sqlerrml_OF_sqlerrm_OF_sqlca.move(_sqlExceptionText.length());
        String _sqlResult=null;
        int _errorCode=0;
        if(_sqlException!=null)
        {
            _errorCode=_sqlException.getErrorCode();
            _sqlResult=SqlContext.obtainSqlState(_sqlException);
            wrk.sqlstate.move(_sqlResult);
        }
        else
        {
            _errorCode=-1;
            wrk.sqlstate.move("01000");
            _sqlResult="01";
        }
        if(_sqlResult.startsWith("01"))
        {
            wrk.sqlwarn0_OF_sqlwarn_OF_sqlca.move("W");
            wrk.sqlcode_OF_sqlca.move(_sqlVendorCode(_errorCode,100));
            if(_warningLabel!=-1) return _warningLabel; // WHENEVER SQLWARNING HANDLER
        }
        else if(_sqlResult.startsWith("02"))
        {
            wrk.sqlcode_OF_sqlca.move(_sqlVendorCode(_errorCode,100));
            if(_notFoundLabel!=-1) return _notFoundLabel; // WHENEVER NOT FOUND HANDLER
        }
        else if(!_sqlResult.startsWith("00"))
        {
            wrk.sqlcode_OF_sqlca.move(_sqlVendorCode(_errorCode,-1));
            if(_errorLabel!=-1) return _errorLabel; // WHENEVER ERROR HANDLER
        } // end if
        return -1;
    } // end _sqlExceptionHandler
    
    
    static public final String _localNameConverter[][]=null;
    static public final Numeric $N$option_return_display_88=(Numeric)(new Numeric("-1"));
    static public final Numeric _NCONSTANT_22=(Numeric)(new Numeric("0"));
    static public final Numeric _NCONSTANT_23=(Numeric)(new Numeric("1"));
    static public final Numeric _NCONSTANT_24=(Numeric)(new Numeric("4"));
    static public final Numeric _NCONSTANT_25=(Numeric)(new Numeric("5"));
    static public final Numeric _NCONSTANT_26=(Numeric)(new Numeric("2"));
    static public final Numeric _NCONSTANT_27=(Numeric)(new Numeric("7"));
    static public final Numeric _NCONSTANT_28=(Numeric)(new Numeric("3"));
    static public final Numeric _NCONSTANT_29=(Numeric)(new Numeric("13"));
    static public final Numeric _NCONSTANT_30=(Numeric)(new Numeric("16"));
    static public final Numeric _NCONSTANT_31=(Numeric)(new Numeric("19"));
    static public final Numeric _NCONSTANT_32=(Numeric)(new Numeric("11"));
    static public final Numeric _NCONSTANT_33=(Numeric)(new Numeric("14"));
    static public final Numeric _NCONSTANT_34=(Numeric)(new Numeric("17"));
    static public final Numeric _NCONSTANT_35=(Numeric)(new Numeric("8"));
    static public final Numeric _NCONSTANT_36=(Numeric)(new Numeric("32"));
    static public final Numeric _NCONSTANT_37=(Numeric)(new Numeric("64"));
    static public final Numeric _NCONSTANT_38=(Numeric)(new Numeric("128"));
    static public final Numeric _NCONSTANT_39=(Numeric)(new Numeric("256"));
    static public final Numeric _NCONSTANT_40=(Numeric)(new Numeric("512"));
    static public final Numeric _NCONSTANT_41=(Numeric)(new Numeric("1024"));
    static public final Numeric _NCONSTANT_42=(Numeric)(new Numeric("2048"));
    static public final Numeric _NCONSTANT_43=(Numeric)(new Numeric("4096"));
    static public final Numeric _NCONSTANT_44=(Numeric)(new Numeric("8192"));
    static public final Numeric _NCONSTANT_45=(Numeric)(new Numeric("16384"));
    static public final Numeric _NCONSTANT_46=(Numeric)(new Numeric("32768"));
    static public final Numeric _NCONSTANT_47=(Numeric)(new Numeric("65536"));
    static public final Numeric _NCONSTANT_48=(Numeric)(new Numeric("131072"));
    static public final Numeric _NCONSTANT_49=(Numeric)(new Numeric("9"));
    static public final Numeric _NCONSTANT_50=(Numeric)(new Numeric("10"));
    static public final Numeric _NCONSTANT_51=(Numeric)(new Numeric("24"));
    static public final Numeric _NCONSTANT_52=(Numeric)(new Numeric("100"));
    static public final Numeric _NCONSTANT_53=(Numeric)(new Numeric("10000"));
    static public final Numeric _NCONSTANT_54=(Numeric)(new Numeric("26"));
    static public final Numeric _NCONSTANT_55=(Numeric)(new Numeric("50"));
    static public final Numeric _NCONSTANT_56=(Numeric)(new Numeric("5000"));
    static public final Numeric _NCONSTANT_57=(Numeric)(new Numeric("6"));
    static public final Numeric _NCONSTANT_58=(Numeric)(new Numeric("20"));
    static public final Numeric _NCONSTANT_59=(Numeric)(new Numeric("300000.00"));
    static public final Numeric _NCONSTANT_60=(Numeric)(new Numeric("30000.0"));
    static public final Numeric _NCONSTANT_61=(Numeric)(new Numeric("3001"));
    static public final Numeric _NCONSTANT_62=(Numeric)(new Numeric("1000"));
    static public final Numeric _NCONSTANT_63=(Numeric)(new Numeric("50000"));
    static public final Numeric _NCONSTANT_64=(Numeric)(new Numeric("-10.0"));
    static public final Numeric _NCONSTANT_65=(Numeric)(new Numeric("300"));
    static public final Numeric _NCONSTANT_66=(Numeric)(new Numeric("500"));
    static public final Numeric _NCONSTANT_67=(Numeric)(new Numeric("10.0"));
    static public final Numeric _NCONSTANT_68=(Numeric)(new Numeric("12"));
    static public final Numeric _NCONSTANT_69=(Numeric)(new Numeric("15"));
    static public final Numeric _NCONSTANT_70=(Numeric)(new Numeric("0.0"));
    static public final Numeric _NCONSTANT_71=(Numeric)(new Numeric("-1"));
    static public final Numeric _NCONSTANT_72=(Numeric)(new Numeric("23"));
    static public final Bignum _BCONSTANT_0=new Bignum("1");
    static public final Bignum _BCONSTANT_3=new Bignum("8");
    static public final Bignum _BCONSTANT_17=new Bignum("100.0");
    static public final Bignum _BCONSTANT_18=new Bignum("100");
    static public final Bignum _BCONSTANT_19=new Bignum("80");
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_0=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"CONTROL","EIBRSRCE","ERASE","SEND"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_1=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBERR","EIBERRCD","EIBSYNRB","SYNCPOINT"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_2=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBRSRCE","RETURN"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_3=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBERR","EIBERRCD","EIBSYNRB","ROLLBACK","SYNCPOINT"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_4=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"CONTROL","CURSOR","EIBRSRCE","SEND"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_5=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBRSRCE","FROM","LENGTH","SEND","TEXT"});
    
    public void _callArrayInitializer()
    {
        Variable.initializeInternalArray();
    }
    
    public void _callArrayFinalizer()
    {
        Variable.finalizeInternalArray();
    }
    
} // end program sqlload