/*
 * Elastic COBOL --> Java Source Code
 *
 * This is a cross-compiler generated Java source-code file whose original
 * source was a COBOL program of the same name.
 *
 * If you want to switch from COBOL maintenance to Java maintenance, you must:
 * 1. edit this file as you see fit,
 * 2. move the resultant file to the java_source folder, and
 * 3. delete the originally named COBOL source file.
 *
 * This program requires ecobol.jar and may also require etrans.jar to execute.
 * These are the Elastic COBOL runtime services (used under license).
 */

import com.heirloomcomputing.ecs.exec.*;

/*
 * PROGRAM-ID vsmload
 * Compiled on 2018-02-05 at 12:07:22
 *
 * Generated by:
 * 
 * Elastic COBOL
 * V17.8.24 (Build Aug 29 2017 11:46:34)
 * Copyright (C) 2010-2017 Heirloom Computing
 */

@SuppressWarnings("all")
public class vsmload extends CobolBase
implements ICobolProgram, com.heirloomcomputing.ecs.api.ICallTarget, com.heirloomcomputing.ecs.api.ICancelTarget , com.heirloomcomputing.etp.transaction.link.Linkable
{
    static public final String _programId="vsmload";
    BreakClass breakPoint = new BreakClass();
    
    static // initializer
    {
        RuntimeEnvironment.setGlobalParameter("DT","1");
        Variable.completeInitialization();
    }
    
    
    @SuppressWarnings("all")
    public class Wrk              implements Section
    {
        public void doDeclarations()
        {
            try
            {
                declarations();
            }
            catch(Exception _initializerException)
            {
                CobolException.runtimeError(_context,"INTERNAL ERROR: Cannot initialize variable storage for vsmload section 'Wrk'",_initializerException);
            }
        }
        
        
        public void doInitializations()
        {
            pgm=new Variable();
            write_item_ct=new DisplayP();
            write_whouse_ct=new DisplayP();
            write_customer_ct=new DisplayP();
            write_stock_ct=new DisplayP();
            write_district_ct=new DisplayP();
            write_history_ct=new DisplayP();
            write_ord_ct=new DisplayP();
            write_neword_ct=new DisplayP();
            write_ordline_ct=new DisplayP();
            w_id_OF_warehouse_key_OF_w_record=new DisplayP();
            warehouse_key_OF_w_record=new Variable();
            w_name_OF_w_record=new Variable();
            w_street_1_OF_w_record=new Variable();
            w_street_2_OF_w_record=new Variable();
            w_city_OF_w_record=new Variable();
            w_state_OF_w_record=new Variable();
            w_zip_OF_w_record=new Variable();
            w_tax_OF_w_record=new DisplayP();
            w_ytd_OF_w_record=new DisplayP();
            w_record=new Variable();
            d_w_id_OF_district_key_OF_d_record=new DisplayP();
            d_id_OF_district_key_OF_d_record=new DisplayP();
            district_key_OF_d_record=new Variable();
            d_name_OF_d_record=new Variable();
            d_street_1_OF_d_record=new Variable();
            d_street_2_OF_d_record=new Variable();
            d_city_OF_d_record=new Variable();
            d_state_OF_d_record=new Variable();
            d_zip_OF_d_record=new Variable();
            d_tax_OF_d_record=new DisplayP();
            d_ytd_OF_d_record=new DisplayP();
            d_next_o_id_OF_d_record=new DisplayP();
            d_record=new Variable();
            c_w_id_OF_customer_key_OF_c_record=new DisplayP();
            c_d_id_OF_customer_key_OF_c_record=new DisplayP();
            c_id_OF_customer_key_OF_c_record=new DisplayP();
            customer_key_OF_c_record=new Variable();
            c_w_id2_OF_customer_generic_name_OF_customer_alt_key_OF_c_record=new DisplayP();
            c_d_id2_OF_customer_generic_name_OF_customer_alt_key_OF_c_record=new DisplayP();
            c_last_OF_customer_generic_name_OF_customer_alt_key_OF_c_record=new Variable();
            customer_generic_name_OF_customer_alt_key_OF_c_record=new Variable();
            c_first_OF_customer_alt_key_OF_c_record=new Variable();
            customer_alt_key_OF_c_record=new Variable();
            c_middle_OF_c_record=new Variable();
            c_street_1_OF_c_record=new Variable();
            c_street_2_OF_c_record=new Variable();
            c_city_OF_c_record=new Variable();
            c_state_OF_c_record=new Variable();
            c_zip_OF_c_record=new Variable();
            c_phone_OF_c_record=new Variable();
            c_since_OF_c_record=new Variable();
            c_credit_OF_c_record=new Variable();
            c_credit_lim_OF_c_record=new DisplayP();
            c_discount_OF_c_record=new DisplayP();
            c_balance_OF_c_record=new DisplayP();
            c_ytd_payment_OF_c_record=new DisplayP();
            c_payment_cnt_OF_c_record=new DisplayP();
            c_delivery_cnt_OF_c_record=new DisplayP();
            c_data_OF_c_record=new Variable();
            c_record=new Variable();
            h_c_w_id_OF_history_key_OF_h_record=new DisplayP();
            h_c_d_id_OF_history_key_OF_h_record=new DisplayP();
            h_c_id_OF_history_key_OF_h_record=new DisplayP();
            h_date_OF_history_key_OF_h_record=new Variable();
            h_d_id_OF_history_key_OF_h_record=new DisplayP();
            h_w_id_OF_history_key_OF_h_record=new DisplayP();
            h_amount_OF_history_key_OF_h_record=new DisplayP();
            h_data_OF_history_key_OF_h_record=new Variable();
            history_key_OF_h_record=new Variable();
            h_record=new Variable();
            no_w_id_OF_new_order_key_OF_no_record=new DisplayP();
            no_d_id_OF_new_order_key_OF_no_record=new DisplayP();
            no_o_id_OF_new_order_key_OF_no_record=new DisplayP();
            new_order_key_OF_no_record=new Variable();
            no_record=new Variable();
            o_w_id_OF_order_key_OF_o_record=new DisplayP();
            o_d_id_OF_order_key_OF_o_record=new DisplayP();
            o_id_OF_order_key_OF_o_record=new DisplayP();
            order_key_OF_o_record=new Variable();
            o_w_id2_OF_order_alt_key_OF_o_record=new DisplayP();
            o_d_id2_OF_order_alt_key_OF_o_record=new DisplayP();
            o_c_id_OF_order_alt_key_OF_o_record=new DisplayP();
            order_alt_key_OF_o_record=new Variable();
            o_entry_d_OF_o_record=new Variable();
            o_carrier_id_OF_o_record=new DisplayP();
            o_ol_cnt_OF_o_record=new DisplayP();
            o_all_local_OF_o_record=new DisplayP();
            o_record=new Variable();
            ol_w_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record=new DisplayP();
            ol_d_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record=new DisplayP();
            ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record=new DisplayP();
            order_line_alt_key_OF_order_line_key_OF_ol_record=new Variable();
            ol_number_OF_order_line_key_OF_ol_record=new DisplayP();
            order_line_key_OF_ol_record=new Variable();
            ol_i_id_OF_ol_record=new DisplayP();
            ol_supply_w_id_OF_ol_record=new DisplayP();
            ol_delivery_d_OF_ol_record=new Variable();
            ol_quantity_OF_ol_record=new DisplayP();
            ol_amount_OF_ol_record=new DisplayP();
            ol_dist_info_OF_ol_record=new Variable();
            ol_record=new Variable();
            i_id_OF_item_key_OF_i_record=new DisplayP();
            item_key_OF_i_record=new Variable();
            i_im_id_OF_i_record=new DisplayP();
            i_name_OF_i_record=new Variable();
            i_price_OF_i_record=new DisplayP();
            i_data_OF_i_record=new Variable();
            i_record=new Variable();
            s_w_id_OF_stock_key_OF_s_record=new DisplayP();
            s_i_id_OF_stock_key_OF_s_record=new DisplayP();
            stock_key_OF_s_record=new Variable();
            s_quantity_OF_s_record=new DisplayP();
            s_dist_01_OF_s_record=new Variable();
            s_dist_02_OF_s_record=new Variable();
            s_dist_03_OF_s_record=new Variable();
            s_dist_04_OF_s_record=new Variable();
            s_dist_05_OF_s_record=new Variable();
            s_dist_06_OF_s_record=new Variable();
            s_dist_07_OF_s_record=new Variable();
            s_dist_08_OF_s_record=new Variable();
            s_dist_09_OF_s_record=new Variable();
            s_dist_10_OF_s_record=new Variable();
            s_ytd_OF_s_record=new DisplayP();
            s_order_cnt_OF_s_record=new DisplayP();
            s_remote_cnt_OF_s_record=new DisplayP();
            s_data_OF_s_record=new Variable();
            s_record=new Variable();
            response=new Binary();
            cresponse=new DisplayP();
            cresponse2=new DisplayP();
            err_name=new Variable();
            err_fn=new Variable();
            cicserr_msg_last_OF_cicserr_msg=new Variable();
            cicserr_msg=new Variable();
            countnbr=new DisplayP();
            ws_row_OF_ws_display=new Binary();
            ws_col_OF_ws_display=new Binary();
            ws_cpos_OF_ws_display=new Binary();
            ws_num_OF_ws_display=new Variable();
            ws_display_line_OF_ws_display=new Variable();
            ws_d_tax_OF_ws_display=new Variable();
            ws_w_tax_OF_ws_display=new Variable();
            ws_i_price_OF_ws_display=new Variable();
            ws_display_nbr_OF_ws_display=new Variable();
            ws_display_nb2_OF_ws_display=new Variable();
            ws_display=new Variable();
            ws_time_start=new DisplayP();
            ws_time_end=new DisplayP();
            ws_timer_start_OF_ws_timer_msg=new Variable();
            _Variable=new Variable();
            ws_timer_end_OF_ws_timer_msg=new Variable();
            ws_timer_msg=new Variable();
            l_maxitems=new Binary();
            l_dist_per_ware=new Binary();
            l_cust_per_dist=new Binary();
            l_ord_per_dist=new Binary();
            l_undel_ord_base=new Binary();
            l_min_name=new Binary();
            l_max_name=new Binary();
            l_name_a=new Binary();
            l_name_c=new Binary();
            s_maxitems=new Binary();
            s_dist_per_ware=new Binary();
            s_cust_per_dist=new Binary();
            s_ord_per_dist=new Binary();
            s_undel_ord_base=new Binary();
            s_min_name=new Binary();
            s_max_name=new Binary();
            s_name_a=new Binary();
            s_name_c=new Binary();
            maxitems=new Binary();
            dist_per_ware=new Binary();
            cust_per_dist=new Binary();
            ord_per_dist=new Binary();
            undel_ord_base=new Binary();
            name_min=new Binary();
            name_max=new Binary();
            name_a=new Binary();
            name_c=new Binary();
            tstamp=new Variable();
            count_ware=new Binary();
            i=new Binary();
            todaysdate_OF_current_tstamp=new DisplayP();
            time_in_secs_OF_current_tstamp=new DisplayP();
            current_tstamp=new Variable();
            a=new Binary();
            c=new Binary();
            rand=new Comp2();
            rand_min=new Binary();
            rand_min1=new Binary();
            rand_max=new Binary();
            rand_max1=new Binary();
            rand_num=new Binary();
            rand_num1=new Binary();
            temp=new Binary();
            sub1=new Binary();
            sub2=new Binary();
            sub3=new Binary();
            name_num=new Binary();
            name_res=new Variable();
            chars=new Variable();
            digits=new Variable();
            str_min=new Binary();
            str_max=new Binary();
            str_ind=new Binary();
            str_len=new Binary();
            str_val=new Variable();
            adr_str1=new Variable();
            adr_str2=new Variable();
            adr_city=new Variable();
            adr_state=new Variable();
            adr_zip=new Variable();
            nn_OF_filler_2_=new Variable();
            n_OF_filler_2_=new Variable();
            filler_2_=new Variable();
            cust_temp=new Binary();
            cust_perm_OF_filler_d_=new Binary();
            filler_d_=new Variable();
            sdatasiz=new Binary();
            idatasiz=new Binary();
            orig_OF_filler_e_=new Binary();
            filler_e_=new Variable();
            posn=new Binary();
        }
        
        public void declarations()
        {
            final Memory _memory=this._memory;
            pgm.declare(_memory,8,9,"pgm",null,"VSMLOAD  ",null,null,write_item_ct,0x00000000);
            write_item_ct.declare(_memory,43,5,"write_item_ct",5,"0",null,null,write_whouse_ct,0x04000000).move(Variable.ZEROES);
            write_whouse_ct.declare(_memory,48,5,"write_whouse_ct",5,"0",null,null,write_customer_ct,0x04000000).move(Variable.ZEROES);
            write_customer_ct.declare(_memory,53,5,"write_customer_ct",5,"0",null,null,write_stock_ct,0x04000000).move(Variable.ZEROES);
            write_stock_ct.declare(_memory,58,5,"write_stock_ct",5,"0",null,null,write_district_ct,0x04000000).move(Variable.ZEROES);
            write_district_ct.declare(_memory,63,5,"write_district_ct",5,"0",null,null,write_history_ct,0x04000000).move(Variable.ZEROES);
            write_history_ct.declare(_memory,68,5,"write_history_ct",5,"0",null,null,write_ord_ct,0x04000000).move(Variable.ZEROES);
            write_ord_ct.declare(_memory,73,5,"write_ord_ct",5,"0",null,null,write_neword_ct,0x04000000).move(Variable.ZEROES);
            write_neword_ct.declare(_memory,78,5,"write_neword_ct",5,"0",null,null,write_ordline_ct,0x04000000).move(Variable.ZEROES);
            write_ordline_ct.declare(_memory,83,5,"write_ordline_ct",5,"0",null,null,w_record,0x04000000).move(Variable.ZEROES);
            w_id_OF_warehouse_key_OF_w_record.declare(_memory,88,9,"w_id",9,null,warehouse_key_OF_w_record,null,null,0x04400000);
            warehouse_key_OF_w_record.declare(_memory,88,9,"warehouse_key",null,null,w_record,w_id_OF_warehouse_key_OF_w_record,w_name_OF_w_record,0x00000000);
            w_name_OF_w_record.declare(_memory,97,10,"w_name",null,null,w_record,null,w_street_1_OF_w_record,0x00000000);
            w_street_1_OF_w_record.declare(_memory,107,20,"w_street_1",null,null,w_record,null,w_street_2_OF_w_record,0x00000000);
            w_street_2_OF_w_record.declare(_memory,127,20,"w_street_2",null,null,w_record,null,w_city_OF_w_record,0x00000000);
            w_city_OF_w_record.declare(_memory,147,20,"w_city",null,null,w_record,null,w_state_OF_w_record,0x00000000);
            w_state_OF_w_record.declare(_memory,167,2,"w_state",null,null,w_record,null,w_zip_OF_w_record,0x00000000);
            w_zip_OF_w_record.declare(_memory,169,9,"w_zip",null,null,w_record,null,w_tax_OF_w_record,0x00000000);
            w_tax_OF_w_record.declare(_memory,178,4,"w_tax",4,null,w_record,null,w_ytd_OF_w_record,0x04400000,4,0);
            w_ytd_OF_w_record.declare(_memory,182,12,"w_ytd",12,null,w_record,null,null,0x04400000,2,0);
            w_record.declare(_memory,88,106,"w_record",null,null,null,warehouse_key_OF_w_record,d_record,0x00000000);
            d_w_id_OF_district_key_OF_d_record.declare(_memory,194,9,"d_w_id",9,null,district_key_OF_d_record,null,d_id_OF_district_key_OF_d_record,0x04400000);
            d_id_OF_district_key_OF_d_record.declare(_memory,203,9,"d_id",9,null,district_key_OF_d_record,null,null,0x04400000);
            district_key_OF_d_record.declare(_memory,194,18,"district_key",null,null,d_record,d_w_id_OF_district_key_OF_d_record,d_name_OF_d_record,0x00000000);
            d_name_OF_d_record.declare(_memory,212,10,"d_name",null,null,d_record,null,d_street_1_OF_d_record,0x00000000);
            d_street_1_OF_d_record.declare(_memory,222,20,"d_street_1",null,null,d_record,null,d_street_2_OF_d_record,0x00000000);
            d_street_2_OF_d_record.declare(_memory,242,20,"d_street_2",null,null,d_record,null,d_city_OF_d_record,0x00000000);
            d_city_OF_d_record.declare(_memory,262,20,"d_city",null,null,d_record,null,d_state_OF_d_record,0x00000000);
            d_state_OF_d_record.declare(_memory,282,2,"d_state",null,null,d_record,null,d_zip_OF_d_record,0x00000000);
            d_zip_OF_d_record.declare(_memory,284,9,"d_zip",null,null,d_record,null,d_tax_OF_d_record,0x00000000);
            d_tax_OF_d_record.declare(_memory,293,4,"d_tax",4,null,d_record,null,d_ytd_OF_d_record,0x04400000,4,0);
            d_ytd_OF_d_record.declare(_memory,297,12,"d_ytd",12,null,d_record,null,d_next_o_id_OF_d_record,0x04400000,2,0);
            d_next_o_id_OF_d_record.declare(_memory,309,9,"d_next_o_id",9,null,d_record,null,null,0x04400000);
            d_record.declare(_memory,194,124,"d_record",null,null,null,district_key_OF_d_record,c_record,0x00000000);
            c_w_id_OF_customer_key_OF_c_record.declare(_memory,318,9,"c_w_id",9,null,customer_key_OF_c_record,null,c_d_id_OF_customer_key_OF_c_record,0x04400000);
            c_d_id_OF_customer_key_OF_c_record.declare(_memory,327,9,"c_d_id",9,null,customer_key_OF_c_record,null,c_id_OF_customer_key_OF_c_record,0x04400000);
            c_id_OF_customer_key_OF_c_record.declare(_memory,336,9,"c_id",9,null,customer_key_OF_c_record,null,null,0x04400000);
            customer_key_OF_c_record.declare(_memory,318,27,"customer_key",null,null,c_record,c_w_id_OF_customer_key_OF_c_record,customer_alt_key_OF_c_record,0x00000000);
            c_w_id2_OF_customer_generic_name_OF_customer_alt_key_OF_c_record.declare(_memory,345,9,"c_w_id2",9,null,customer_generic_name_OF_customer_alt_key_OF_c_record,null,c_d_id2_OF_customer_generic_name_OF_customer_alt_key_OF_c_record,0x04400000);
            c_d_id2_OF_customer_generic_name_OF_customer_alt_key_OF_c_record.declare(_memory,354,9,"c_d_id2",9,null,customer_generic_name_OF_customer_alt_key_OF_c_record,null,c_last_OF_customer_generic_name_OF_customer_alt_key_OF_c_record,0x04400000);
            c_last_OF_customer_generic_name_OF_customer_alt_key_OF_c_record.declare(_memory,363,16,"c_last",null,null,customer_generic_name_OF_customer_alt_key_OF_c_record,null,null,0x00000000);
            customer_generic_name_OF_customer_alt_key_OF_c_record.declare(_memory,345,34,"customer_generic_name",null,null,customer_alt_key_OF_c_record,c_w_id2_OF_customer_generic_name_OF_customer_alt_key_OF_c_record,c_first_OF_customer_alt_key_OF_c_record,0x00000000);
            c_first_OF_customer_alt_key_OF_c_record.declare(_memory,379,16,"c_first",null,null,customer_alt_key_OF_c_record,null,null,0x00000000);
            customer_alt_key_OF_c_record.declare(_memory,345,50,"customer_alt_key",null,null,c_record,customer_generic_name_OF_customer_alt_key_OF_c_record,c_middle_OF_c_record,0x00000000);
            c_middle_OF_c_record.declare(_memory,395,2,"c_middle",null,null,c_record,null,c_street_1_OF_c_record,0x00000000);
            c_street_1_OF_c_record.declare(_memory,397,20,"c_street_1",null,null,c_record,null,c_street_2_OF_c_record,0x00000000);
            c_street_2_OF_c_record.declare(_memory,417,20,"c_street_2",null,null,c_record,null,c_city_OF_c_record,0x00000000);
            c_city_OF_c_record.declare(_memory,437,20,"c_city",null,null,c_record,null,c_state_OF_c_record,0x00000000);
            c_state_OF_c_record.declare(_memory,457,2,"c_state",null,null,c_record,null,c_zip_OF_c_record,0x00000000);
            c_zip_OF_c_record.declare(_memory,459,9,"c_zip",null,null,c_record,null,c_phone_OF_c_record,0x00000000);
            c_phone_OF_c_record.declare(_memory,468,16,"c_phone",null,null,c_record,null,c_since_OF_c_record,0x00000000);
            c_since_OF_c_record.declare(_memory,484,20,"c_since",null,null,c_record,null,c_credit_OF_c_record,0x00000000);
            c_credit_OF_c_record.declare(_memory,504,2,"c_credit",null,null,c_record,null,c_credit_lim_OF_c_record,0x00000000);
            c_credit_lim_OF_c_record.declare(_memory,506,12,"c_credit_lim",12,null,c_record,null,c_discount_OF_c_record,0x04400000,2,0);
            c_discount_OF_c_record.declare(_memory,518,4,"c_discount",4,null,c_record,null,c_balance_OF_c_record,0x04400000,4,0);
            c_balance_OF_c_record.declare(_memory,522,12,"c_balance",12,null,c_record,null,c_ytd_payment_OF_c_record,0x04400000,2,0);
            c_ytd_payment_OF_c_record.declare(_memory,534,12,"c_ytd_payment",12,null,c_record,null,c_payment_cnt_OF_c_record,0x04400000,2,0);
            c_payment_cnt_OF_c_record.declare(_memory,546,4,"c_payment_cnt",4,null,c_record,null,c_delivery_cnt_OF_c_record,0x04000000);
            c_delivery_cnt_OF_c_record.declare(_memory,550,4,"c_delivery_cnt",4,null,c_record,null,c_data_OF_c_record,0x04000000);
            c_data_OF_c_record.declare(_memory,554,500,"c_data",null,null,c_record,null,null,0x00000000);
            c_record.declare(_memory,318,736,"c_record",null,null,null,customer_key_OF_c_record,h_record,0x00000000);
            h_c_w_id_OF_history_key_OF_h_record.declare(_memory,1054,9,"h_c_w_id",9,null,history_key_OF_h_record,null,h_c_d_id_OF_history_key_OF_h_record,0x04400000);
            h_c_d_id_OF_history_key_OF_h_record.declare(_memory,1063,9,"h_c_d_id",9,null,history_key_OF_h_record,null,h_c_id_OF_history_key_OF_h_record,0x04400000);
            h_c_id_OF_history_key_OF_h_record.declare(_memory,1072,9,"h_c_id",9,null,history_key_OF_h_record,null,h_date_OF_history_key_OF_h_record,0x04400000);
            h_date_OF_history_key_OF_h_record.declare(_memory,1081,20,"h_date",null,null,history_key_OF_h_record,null,h_d_id_OF_history_key_OF_h_record,0x00000000);
            h_d_id_OF_history_key_OF_h_record.declare(_memory,1101,9,"h_d_id",9,null,history_key_OF_h_record,null,h_w_id_OF_history_key_OF_h_record,0x04400000);
            h_w_id_OF_history_key_OF_h_record.declare(_memory,1110,9,"h_w_id",9,null,history_key_OF_h_record,null,h_amount_OF_history_key_OF_h_record,0x04400000);
            h_amount_OF_history_key_OF_h_record.declare(_memory,1119,6,"h_amount",6,null,history_key_OF_h_record,null,h_data_OF_history_key_OF_h_record,0x04400000,2,0);
            h_data_OF_history_key_OF_h_record.declare(_memory,1125,24,"h_data",null,null,history_key_OF_h_record,null,null,0x00000000);
            history_key_OF_h_record.declare(_memory,1054,95,"history_key",null,null,h_record,h_c_w_id_OF_history_key_OF_h_record,null,0x00000000);
            h_record.declare(_memory,1054,95,"h_record",null,null,null,history_key_OF_h_record,no_record,0x00000000);
            no_w_id_OF_new_order_key_OF_no_record.declare(_memory,1149,9,"no_w_id",9,null,new_order_key_OF_no_record,null,no_d_id_OF_new_order_key_OF_no_record,0x04400000);
            no_d_id_OF_new_order_key_OF_no_record.declare(_memory,1158,9,"no_d_id",9,null,new_order_key_OF_no_record,null,no_o_id_OF_new_order_key_OF_no_record,0x04400000);
            no_o_id_OF_new_order_key_OF_no_record.declare(_memory,1167,9,"no_o_id",9,null,new_order_key_OF_no_record,null,null,0x04400000);
            new_order_key_OF_no_record.declare(_memory,1149,27,"new_order_key",null,null,no_record,no_w_id_OF_new_order_key_OF_no_record,null,0x00000000);
            no_record.declare(_memory,1149,27,"no_record",null,null,null,new_order_key_OF_no_record,o_record,0x00000000);
            o_w_id_OF_order_key_OF_o_record.declare(_memory,1176,9,"o_w_id",9,null,order_key_OF_o_record,null,o_d_id_OF_order_key_OF_o_record,0x04400000);
            o_d_id_OF_order_key_OF_o_record.declare(_memory,1185,9,"o_d_id",9,null,order_key_OF_o_record,null,o_id_OF_order_key_OF_o_record,0x04400000);
            o_id_OF_order_key_OF_o_record.declare(_memory,1194,9,"o_id",9,null,order_key_OF_o_record,null,null,0x04400000);
            order_key_OF_o_record.declare(_memory,1176,27,"order_key",null,null,o_record,o_w_id_OF_order_key_OF_o_record,order_alt_key_OF_o_record,0x00000000);
            o_w_id2_OF_order_alt_key_OF_o_record.declare(_memory,1203,9,"o_w_id2",9,null,order_alt_key_OF_o_record,null,o_d_id2_OF_order_alt_key_OF_o_record,0x04400000);
            o_d_id2_OF_order_alt_key_OF_o_record.declare(_memory,1212,9,"o_d_id2",9,null,order_alt_key_OF_o_record,null,o_c_id_OF_order_alt_key_OF_o_record,0x04400000);
            o_c_id_OF_order_alt_key_OF_o_record.declare(_memory,1221,9,"o_c_id",9,null,order_alt_key_OF_o_record,null,null,0x04400000);
            order_alt_key_OF_o_record.declare(_memory,1203,27,"order_alt_key",null,null,o_record,o_w_id2_OF_order_alt_key_OF_o_record,o_entry_d_OF_o_record,0x00000000);
            o_entry_d_OF_o_record.declare(_memory,1230,20,"o_entry_d",null,null,o_record,null,o_carrier_id_OF_o_record,0x00000000);
            o_carrier_id_OF_o_record.declare(_memory,1250,9,"o_carrier_id",9,null,o_record,null,o_ol_cnt_OF_o_record,0x04400000);
            o_ol_cnt_OF_o_record.declare(_memory,1259,9,"o_ol_cnt",9,null,o_record,null,o_all_local_OF_o_record,0x04400000);
            o_all_local_OF_o_record.declare(_memory,1268,9,"o_all_local",9,null,o_record,null,null,0x04400000);
            o_record.declare(_memory,1176,101,"o_record",null,null,null,order_key_OF_o_record,ol_record,0x00000000);
            ol_w_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.declare(_memory,1277,9,"ol_w_id",9,null,order_line_alt_key_OF_order_line_key_OF_ol_record,null,ol_d_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record,0x04400000);
            ol_d_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.declare(_memory,1286,9,"ol_d_id",9,null,order_line_alt_key_OF_order_line_key_OF_ol_record,null,ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record,0x04400000);
            ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.declare(_memory,1295,9,"ol_o_id",9,null,order_line_alt_key_OF_order_line_key_OF_ol_record,null,null,0x04400000);
            order_line_alt_key_OF_order_line_key_OF_ol_record.declare(_memory,1277,27,"order_line_alt_key",null,null,order_line_key_OF_ol_record,ol_w_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record,ol_number_OF_order_line_key_OF_ol_record,0x00000000);
            ol_number_OF_order_line_key_OF_ol_record.declare(_memory,1304,9,"ol_number",9,null,order_line_key_OF_ol_record,null,null,0x04400000);
            order_line_key_OF_ol_record.declare(_memory,1277,36,"order_line_key",null,null,ol_record,order_line_alt_key_OF_order_line_key_OF_ol_record,ol_i_id_OF_ol_record,0x00000000);
            ol_i_id_OF_ol_record.declare(_memory,1313,9,"ol_i_id",9,null,ol_record,null,ol_supply_w_id_OF_ol_record,0x04400000);
            ol_supply_w_id_OF_ol_record.declare(_memory,1322,9,"ol_supply_w_id",9,null,ol_record,null,ol_delivery_d_OF_ol_record,0x04400000);
            ol_delivery_d_OF_ol_record.declare(_memory,1331,20,"ol_delivery_d",null,null,ol_record,null,ol_quantity_OF_ol_record,0x00000000);
            ol_quantity_OF_ol_record.declare(_memory,1351,9,"ol_quantity",9,null,ol_record,null,ol_amount_OF_ol_record,0x04400000);
            ol_amount_OF_ol_record.declare(_memory,1360,9,"ol_amount",9,null,ol_record,null,ol_dist_info_OF_ol_record,0x04400000);
            ol_dist_info_OF_ol_record.declare(_memory,1369,24,"ol_dist_info",null,null,ol_record,null,null,0x00000000);
            ol_record.declare(_memory,1277,116,"ol_record",null,null,null,order_line_key_OF_ol_record,i_record,0x00000000);
            i_id_OF_item_key_OF_i_record.declare(_memory,1393,9,"i_id",9,null,item_key_OF_i_record,null,null,0x04400000);
            item_key_OF_i_record.declare(_memory,1393,9,"item_key",null,null,i_record,i_id_OF_item_key_OF_i_record,i_im_id_OF_i_record,0x00000000);
            i_im_id_OF_i_record.declare(_memory,1402,9,"i_im_id",9,null,i_record,null,i_name_OF_i_record,0x04400000);
            i_name_OF_i_record.declare(_memory,1411,24,"i_name",null,null,i_record,null,i_price_OF_i_record,0x00000000);
            i_price_OF_i_record.declare(_memory,1435,5,"i_price",5,null,i_record,null,i_data_OF_i_record,0x04400000,2,0);
            i_data_OF_i_record.declare(_memory,1440,50,"i_data",null,null,i_record,null,null,0x00000000);
            i_record.declare(_memory,1393,97,"i_record",null,null,null,item_key_OF_i_record,s_record,0x00000000);
            s_w_id_OF_stock_key_OF_s_record.declare(_memory,1490,9,"s_w_id",9,null,stock_key_OF_s_record,null,s_i_id_OF_stock_key_OF_s_record,0x04400000);
            s_i_id_OF_stock_key_OF_s_record.declare(_memory,1499,9,"s_i_id",9,null,stock_key_OF_s_record,null,null,0x04400000);
            stock_key_OF_s_record.declare(_memory,1490,18,"stock_key",null,null,s_record,s_w_id_OF_stock_key_OF_s_record,s_quantity_OF_s_record,0x00000000);
            s_quantity_OF_s_record.declare(_memory,1508,4,"s_quantity",4,null,s_record,null,s_dist_01_OF_s_record,0x04400000);
            s_dist_01_OF_s_record.declare(_memory,1512,24,"s_dist_01",null,null,s_record,null,s_dist_02_OF_s_record,0x00000000);
            s_dist_02_OF_s_record.declare(_memory,1536,24,"s_dist_02",null,null,s_record,null,s_dist_03_OF_s_record,0x00000000);
            s_dist_03_OF_s_record.declare(_memory,1560,24,"s_dist_03",null,null,s_record,null,s_dist_04_OF_s_record,0x00000000);
            s_dist_04_OF_s_record.declare(_memory,1584,24,"s_dist_04",null,null,s_record,null,s_dist_05_OF_s_record,0x00000000);
            s_dist_05_OF_s_record.declare(_memory,1608,24,"s_dist_05",null,null,s_record,null,s_dist_06_OF_s_record,0x00000000);
            s_dist_06_OF_s_record.declare(_memory,1632,24,"s_dist_06",null,null,s_record,null,s_dist_07_OF_s_record,0x00000000);
            s_dist_07_OF_s_record.declare(_memory,1656,24,"s_dist_07",null,null,s_record,null,s_dist_08_OF_s_record,0x00000000);
            s_dist_08_OF_s_record.declare(_memory,1680,24,"s_dist_08",null,null,s_record,null,s_dist_09_OF_s_record,0x00000000);
            s_dist_09_OF_s_record.declare(_memory,1704,24,"s_dist_09",null,null,s_record,null,s_dist_10_OF_s_record,0x00000000);
            s_dist_10_OF_s_record.declare(_memory,1728,24,"s_dist_10",null,null,s_record,null,s_ytd_OF_s_record,0x00000000);
            s_ytd_OF_s_record.declare(_memory,1752,8,"s_ytd",8,null,s_record,null,s_order_cnt_OF_s_record,0x04400000);
            s_order_cnt_OF_s_record.declare(_memory,1760,4,"s_order_cnt",4,null,s_record,null,s_remote_cnt_OF_s_record,0x04400000);
            s_remote_cnt_OF_s_record.declare(_memory,1764,4,"s_remote_cnt",4,null,s_record,null,s_data_OF_s_record,0x04400000);
            s_data_OF_s_record.declare(_memory,1768,50,"s_data",null,null,s_record,null,null,0x00000000);
            s_record.declare(_memory,1490,328,"s_record",null,null,null,stock_key_OF_s_record,response,0x00000000);
            response.declare(_memory,1818,4,"response",9,null,null,null,cresponse,0x04400000);
            cresponse.declare(_memory,1822,3,"cresponse",3,null,null,null,cresponse2,0x04000000);
            cresponse2.declare(_memory,1825,3,"cresponse2",3,null,null,null,err_name,0x04000000);
            err_name.declare(_memory,1828,24,"err_name",null,null,null,null,err_fn,0x00000000);
            err_fn.declare(_memory,1852,24,"err_fn",null,null,null,null,cicserr_msg,0x00000000);
            cicserr_msg_last_OF_cicserr_msg.declare(_memory,1909,51,"cicserr_msg_last",null,null,cicserr_msg,null,null,0x00000000);
            cicserr_msg.declare(_memory,1900,60,"cicserr_msg",null,null,null,cicserr_msg_last_OF_cicserr_msg,countnbr,0x00000000);
            countnbr.declare(_memory,1960,9,"countnbr",9,null,null,null,ws_display,0x04000000);
            ws_row_OF_ws_display.declare(_memory,1970,2,"ws_row",4,"0",ws_display,null,ws_col_OF_ws_display,0x04000000);
            ws_col_OF_ws_display.declare(_memory,1972,2,"ws_col",4,"0",ws_display,null,ws_cpos_OF_ws_display,0x04000000);
            ws_cpos_OF_ws_display.declare(_memory,1974,2,"ws_cpos",4,null,ws_display,null,ws_num_OF_ws_display,0x04000000);
            ws_num_OF_ws_display.declare(_memory,1976,10,"ws_num","+999999999","+999999999",null,ws_display,null,ws_display_line_OF_ws_display,0x0c200000);
            ws_display_line_OF_ws_display.declare(_memory,1986,79,"ws_display_line",null,null,ws_display,null,ws_d_tax_OF_ws_display,0x00000000);
            ws_d_tax_OF_ws_display.declare(_memory,2065,6,"ws_d_tax","-.9999","-.9999",null,ws_display,null,ws_w_tax_OF_ws_display,0x0c200000,4,0);
            ws_w_tax_OF_ws_display.declare(_memory,2071,6,"ws_w_tax","-.9999","-.9999",null,ws_display,null,ws_i_price_OF_ws_display,0x0c200000,4,0);
            ws_i_price_OF_ws_display.declare(_memory,2077,7,"ws_i_price","-999.99","-999.99",null,ws_display,null,ws_display_nbr_OF_ws_display,0x0c200000,2,0);
            ws_display_nbr_OF_ws_display.declare(_memory,2084,7,"ws_display_nbr","ZZZZZ9-","ZZZZZ9-",null,ws_display,null,ws_display_nb2_OF_ws_display,0x0c400000);
            ws_display_nb2_OF_ws_display.declare(_memory,2091,7,"ws_display_nb2","ZZZZZ9-","ZZZZZ9-",null,ws_display,null,null,0x0c400000);
            ws_display.declare(_memory,1970,142,"ws_display",null,null,null,ws_row_OF_ws_display,ws_time_start,0x00000000);
            ws_time_start.declare(_memory,2112,8,"ws_time_start",8,null,null,null,ws_time_end,0x04000000);
            ws_time_end.declare(_memory,2120,8,"ws_time_end",8,null,null,null,ws_timer_msg,0x04000000);
            ws_timer_start_OF_ws_timer_msg.declare(_memory,2136,20,"ws_timer_start",null,"Started at: hh:mm:ss",ws_timer_msg,null,ws_timer_end_OF_ws_timer_msg,0x00000000);
            _Variable.reset().declare(_memory,2156,2,null,null,", ",ws_timer_msg,null,null,0x00000000).notifyParent();
            ws_timer_end_OF_ws_timer_msg.declare(_memory,2158,18,"ws_timer_end",null,"Ended at: hh:mm:ss",ws_timer_msg,null,null,0x00000000);
            ws_timer_msg.declare(_memory,2136,40,"ws_timer_msg",null,null,null,ws_timer_start_OF_ws_timer_msg,l_maxitems,0x00000000);
            l_maxitems.declare(_memory,2176,4,"l_maxitems",9,"100000",null,null,l_dist_per_ware,0x04000000);
            l_dist_per_ware.declare(_memory,2180,4,"l_dist_per_ware",9,"10",null,null,l_cust_per_dist,0x04000000);
            l_cust_per_dist.declare(_memory,2184,4,"l_cust_per_dist",9,"3000",null,null,l_ord_per_dist,0x04000000);
            l_ord_per_dist.declare(_memory,2188,4,"l_ord_per_dist",9,"3000",null,null,l_undel_ord_base,0x04000000);
            l_undel_ord_base.declare(_memory,2192,4,"l_undel_ord_base",9,"2100",null,null,l_min_name,0x04000000);
            l_min_name.declare(_memory,2196,4,"l_min_name",9,"0",null,null,l_max_name,0x04000000);
            l_max_name.declare(_memory,2200,4,"l_max_name",9,"999",null,null,l_name_a,0x04000000);
            l_name_a.declare(_memory,2204,4,"l_name_a",9,"255",null,null,l_name_c,0x04000000);
            l_name_c.declare(_memory,2208,4,"l_name_c",9,"17",null,null,s_maxitems,0x04000000);
            s_maxitems.declare(_memory,2212,4,"s_maxitems",9,"3",null,null,s_dist_per_ware,0x04000000);
            s_dist_per_ware.declare(_memory,2216,4,"s_dist_per_ware",9,"2",null,null,s_cust_per_dist,0x04000000);
            s_cust_per_dist.declare(_memory,2220,4,"s_cust_per_dist",9,"4",null,null,s_ord_per_dist,0x04000000);
            s_ord_per_dist.declare(_memory,2224,4,"s_ord_per_dist",9,"5",null,null,s_undel_ord_base,0x04000000);
            s_undel_ord_base.declare(_memory,2228,4,"s_undel_ord_base",9,"2",null,null,s_min_name,0x04000000);
            s_min_name.declare(_memory,2232,4,"s_min_name",9,"0",null,null,s_max_name,0x04000000);
            s_max_name.declare(_memory,2236,4,"s_max_name",9,"99",null,null,s_name_a,0x04000000);
            s_name_a.declare(_memory,2240,4,"s_name_a",9,"23",null,null,s_name_c,0x04000000);
            s_name_c.declare(_memory,2244,4,"s_name_c",9,"3",null,null,maxitems,0x04000000);
            maxitems.declare(_memory,2248,4,"maxitems",9,null,null,null,dist_per_ware,0x04000000);
            dist_per_ware.declare(_memory,2252,4,"dist_per_ware",9,null,null,null,cust_per_dist,0x04000000);
            cust_per_dist.declare(_memory,2256,4,"cust_per_dist",9,null,null,null,ord_per_dist,0x04000000);
            ord_per_dist.declare(_memory,2260,4,"ord_per_dist",9,null,null,null,undel_ord_base,0x04000000);
            undel_ord_base.declare(_memory,2264,4,"undel_ord_base",9,null,null,null,name_min,0x04000000);
            name_min.declare(_memory,2268,4,"name_min",9,null,null,null,name_max,0x04000000);
            name_max.declare(_memory,2272,4,"name_max",9,null,null,null,name_a,0x04000000);
            name_a.declare(_memory,2276,4,"name_a",9,null,null,null,name_c,0x04000000);
            name_c.declare(_memory,2280,4,"name_c",9,null,null,null,tstamp,0x04000000);
            tstamp.declare(_memory,2370,22,"tstamp",null,null,null,null,count_ware,0x00000000);
            count_ware.declare(_memory,2392,4,"count_ware",9,null,null,null,i,0x04400000);
            i.declare(_memory,2396,4,"i",9,null,null,null,current_tstamp,0x04400000);
            todaysdate_OF_current_tstamp.declare(_memory,2914,8,"todaysdate",8,null,current_tstamp,null,time_in_secs_OF_current_tstamp,0x04000000);
            time_in_secs_OF_current_tstamp.declare(_memory,2923,8,"time_in_secs",8,null,current_tstamp,null,null,0x04000000);
            current_tstamp.declare(_memory,2914,17,"current_tstamp",null,null,null,todaysdate_OF_current_tstamp,a,0x00000000);
            a.declare(_memory,2931,4,"a",9,null,null,null,c,0x04400000);
            c.declare(_memory,2935,4,"c",9,null,null,null,rand,0x04400000);
            rand.declare(_memory,2939,8,"rand",null,null,null,null,rand_min,0x04000000);
            rand_min.declare(_memory,2947,4,"rand_min",9,null,null,null,rand_min1,0x04400000);
            rand_min1.declare(_memory,2951,4,"rand_min1",9,null,null,null,rand_max,0x04400000);
            rand_max.declare(_memory,2955,4,"rand_max",9,null,null,null,rand_max1,0x04400000);
            rand_max1.declare(_memory,2959,4,"rand_max1",9,null,null,null,rand_num,0x04400000);
            rand_num.declare(_memory,2963,4,"rand_num",9,null,null,null,rand_num1,0x04400000);
            rand_num1.declare(_memory,2967,4,"rand_num1",9,null,null,null,temp,0x04400000);
            temp.declare(_memory,2971,4,"temp",9,null,null,null,sub1,0x04400000);
            sub1.declare(_memory,2975,4,"sub1",9,null,null,null,sub2,0x04400000);
            sub2.declare(_memory,2979,4,"sub2",9,null,null,null,sub3,0x04400000);
            sub3.declare(_memory,2983,4,"sub3",9,null,null,null,name_num,0x04400000);
            name_num.declare(_memory,2987,4,"name_num",9,null,null,null,name_res,0x04400000);
            name_res.declare(_memory,2991,15,"name_res",null,null,null,null,chars,0x00000000);
            chars.declare(_memory,3006,62,"chars",null,"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",null,null,digits,0x00000000);
            digits.declare(_memory,3068,10,"digits",null,"0123456789",null,null,str_min,0x00000000);
            str_min.declare(_memory,3078,4,"str_min",9,null,null,null,str_max,0x04400000);
            str_max.declare(_memory,3082,4,"str_max",9,null,null,null,str_ind,0x04400000);
            str_ind.declare(_memory,3086,4,"str_ind",9,null,null,null,str_len,0x04400000);
            str_len.declare(_memory,3090,4,"str_len",9,null,null,null,str_val,0x04400000);
            str_val.declare(_memory,3094,500,"str_val",null,null,null,null,adr_str1,0x00000000);
            adr_str1.declare(_memory,3594,20,"adr_str1",null,null,null,null,adr_str2,0x00000000);
            adr_str2.declare(_memory,3614,20,"adr_str2",null,null,null,null,adr_city,0x00000000);
            adr_city.declare(_memory,3634,20,"adr_city",null,null,null,null,adr_state,0x00000000);
            adr_state.declare(_memory,3654,2,"adr_state",null,null,null,null,adr_zip,0x00000000);
            adr_zip.declare(_memory,3656,9,"adr_zip",null,null,null,null,filler_2_,0x00000000);
            _Variable.reset().declare(_memory,3665,5,null,null,"BAR",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3670,5,null,null,"OUGHT",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3675,5,null,null,"ABLE",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3680,5,null,null,"PRI",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3685,5,null,null,"PRES",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3690,5,null,null,"ESE",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3695,5,null,null,"ANTI",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3700,5,null,null,"CALLY",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3705,5,null,null,"ATION",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            _Variable.reset().declare(_memory,3710,5,null,null,"EING",nn_OF_filler_2_,null,null,0x00000000).notifyParent();
            nn_OF_filler_2_.declare(_memory,3665,50,"nn",null,null,filler_2_,null,n_OF_filler_2_,0x00000000);
            n_OF_filler_2_.declare(_memory,3665,5,"n",null,null,filler_2_,null,null,0x00100000,1,10,nn_OF_filler_2_);
            filler_2_.declare(_memory,3665,50,"filler_2_",null,null,null,nn_OF_filler_2_,cust_temp,0x00000080);
            cust_temp.declare(_memory,3715,4,"cust_temp",9,null,null,null,filler_d_,0x04400000);
            cust_perm_OF_filler_d_.declare(_memory,3719,4,"cust_perm",9,null,filler_d_,null,null,0x04400000,1,3000,null);
            filler_d_.declare(_memory,3719,12000,"filler_d_",null,null,null,cust_perm_OF_filler_d_,sdatasiz,0x00000080);
            sdatasiz.declare(_memory,15719,4,"sdatasiz",9,null,null,null,idatasiz,0x04400000);
            idatasiz.declare(_memory,15723,4,"idatasiz",9,null,null,null,filler_e_,0x04400000);
            orig_OF_filler_e_.declare(_memory,15727,4,"orig",9,null,filler_e_,null,null,0x04400000,1,100000,null);
            filler_e_.declare(_memory,15727,400000,"filler_e_",null,null,null,orig_OF_filler_e_,posn,0x00000080);
            posn.declare(_memory,415727,4,"posn",9,null,null,null,null,0x04400000);
            Variable.setUnusedVarsSizes(wrk.pgm);
            
            
            // Declare Java Arrays
            orig_OF_filler_e___1=orig_OF_filler_e_.createNumericArray1();            
            cust_perm_OF_filler_d___1=cust_perm_OF_filler_d_.createNumericArray1();            
            n_OF_filler_2___1=n_OF_filler_2_.createArray1();            
            
        } // end declarations
        
        public  Variable pgm;
        public  DisplayP write_item_ct;
        public  DisplayP write_whouse_ct;
        public  DisplayP write_customer_ct;
        public  DisplayP write_stock_ct;
        public  DisplayP write_district_ct;
        public  DisplayP write_history_ct;
        public  DisplayP write_ord_ct;
        public  DisplayP write_neword_ct;
        public  DisplayP write_ordline_ct;
        public  DisplayP w_id_OF_warehouse_key_OF_w_record;
        public  Variable warehouse_key_OF_w_record;
        public  Variable w_name_OF_w_record;
        public  Variable w_street_1_OF_w_record;
        public  Variable w_street_2_OF_w_record;
        public  Variable w_city_OF_w_record;
        public  Variable w_state_OF_w_record;
        public  Variable w_zip_OF_w_record;
        public  DisplayP w_tax_OF_w_record;
        public  DisplayP w_ytd_OF_w_record;
        public  Variable w_record;
        public  DisplayP d_w_id_OF_district_key_OF_d_record;
        public  DisplayP d_id_OF_district_key_OF_d_record;
        public  Variable district_key_OF_d_record;
        public  Variable d_name_OF_d_record;
        public  Variable d_street_1_OF_d_record;
        public  Variable d_street_2_OF_d_record;
        public  Variable d_city_OF_d_record;
        public  Variable d_state_OF_d_record;
        public  Variable d_zip_OF_d_record;
        public  DisplayP d_tax_OF_d_record;
        public  DisplayP d_ytd_OF_d_record;
        public  DisplayP d_next_o_id_OF_d_record;
        public  Variable d_record;
        public  DisplayP c_w_id_OF_customer_key_OF_c_record;
        public  DisplayP c_d_id_OF_customer_key_OF_c_record;
        public  DisplayP c_id_OF_customer_key_OF_c_record;
        public  Variable customer_key_OF_c_record;
        public  DisplayP c_w_id2_OF_customer_generic_name_OF_customer_alt_key_OF_c_record;
        public  DisplayP c_d_id2_OF_customer_generic_name_OF_customer_alt_key_OF_c_record;
        public  Variable c_last_OF_customer_generic_name_OF_customer_alt_key_OF_c_record;
        public  Variable customer_generic_name_OF_customer_alt_key_OF_c_record;
        public  Variable c_first_OF_customer_alt_key_OF_c_record;
        public  Variable customer_alt_key_OF_c_record;
        public  Variable c_middle_OF_c_record;
        public  Variable c_street_1_OF_c_record;
        public  Variable c_street_2_OF_c_record;
        public  Variable c_city_OF_c_record;
        public  Variable c_state_OF_c_record;
        public  Variable c_zip_OF_c_record;
        public  Variable c_phone_OF_c_record;
        public  Variable c_since_OF_c_record;
        public  Variable c_credit_OF_c_record;
        public  DisplayP c_credit_lim_OF_c_record;
        public  DisplayP c_discount_OF_c_record;
        public  DisplayP c_balance_OF_c_record;
        public  DisplayP c_ytd_payment_OF_c_record;
        public  DisplayP c_payment_cnt_OF_c_record;
        public  DisplayP c_delivery_cnt_OF_c_record;
        public  Variable c_data_OF_c_record;
        public  Variable c_record;
        public  DisplayP h_c_w_id_OF_history_key_OF_h_record;
        public  DisplayP h_c_d_id_OF_history_key_OF_h_record;
        public  DisplayP h_c_id_OF_history_key_OF_h_record;
        public  Variable h_date_OF_history_key_OF_h_record;
        public  DisplayP h_d_id_OF_history_key_OF_h_record;
        public  DisplayP h_w_id_OF_history_key_OF_h_record;
        public  DisplayP h_amount_OF_history_key_OF_h_record;
        public  Variable h_data_OF_history_key_OF_h_record;
        public  Variable history_key_OF_h_record;
        public  Variable h_record;
        public  DisplayP no_w_id_OF_new_order_key_OF_no_record;
        public  DisplayP no_d_id_OF_new_order_key_OF_no_record;
        public  DisplayP no_o_id_OF_new_order_key_OF_no_record;
        public  Variable new_order_key_OF_no_record;
        public  Variable no_record;
        public  DisplayP o_w_id_OF_order_key_OF_o_record;
        public  DisplayP o_d_id_OF_order_key_OF_o_record;
        public  DisplayP o_id_OF_order_key_OF_o_record;
        public  Variable order_key_OF_o_record;
        public  DisplayP o_w_id2_OF_order_alt_key_OF_o_record;
        public  DisplayP o_d_id2_OF_order_alt_key_OF_o_record;
        public  DisplayP o_c_id_OF_order_alt_key_OF_o_record;
        public  Variable order_alt_key_OF_o_record;
        public  Variable o_entry_d_OF_o_record;
        public  DisplayP o_carrier_id_OF_o_record;
        public  DisplayP o_ol_cnt_OF_o_record;
        public  DisplayP o_all_local_OF_o_record;
        public  Variable o_record;
        public  DisplayP ol_w_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record;
        public  DisplayP ol_d_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record;
        public  DisplayP ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record;
        public  Variable order_line_alt_key_OF_order_line_key_OF_ol_record;
        public  DisplayP ol_number_OF_order_line_key_OF_ol_record;
        public  Variable order_line_key_OF_ol_record;
        public  DisplayP ol_i_id_OF_ol_record;
        public  DisplayP ol_supply_w_id_OF_ol_record;
        public  Variable ol_delivery_d_OF_ol_record;
        public  DisplayP ol_quantity_OF_ol_record;
        public  DisplayP ol_amount_OF_ol_record;
        public  Variable ol_dist_info_OF_ol_record;
        public  Variable ol_record;
        public  DisplayP i_id_OF_item_key_OF_i_record;
        public  Variable item_key_OF_i_record;
        public  DisplayP i_im_id_OF_i_record;
        public  Variable i_name_OF_i_record;
        public  DisplayP i_price_OF_i_record;
        public  Variable i_data_OF_i_record;
        public  Variable i_record;
        public  DisplayP s_w_id_OF_stock_key_OF_s_record;
        public  DisplayP s_i_id_OF_stock_key_OF_s_record;
        public  Variable stock_key_OF_s_record;
        public  DisplayP s_quantity_OF_s_record;
        public  Variable s_dist_01_OF_s_record;
        public  Variable s_dist_02_OF_s_record;
        public  Variable s_dist_03_OF_s_record;
        public  Variable s_dist_04_OF_s_record;
        public  Variable s_dist_05_OF_s_record;
        public  Variable s_dist_06_OF_s_record;
        public  Variable s_dist_07_OF_s_record;
        public  Variable s_dist_08_OF_s_record;
        public  Variable s_dist_09_OF_s_record;
        public  Variable s_dist_10_OF_s_record;
        public  DisplayP s_ytd_OF_s_record;
        public  DisplayP s_order_cnt_OF_s_record;
        public  DisplayP s_remote_cnt_OF_s_record;
        public  Variable s_data_OF_s_record;
        public  Variable s_record;
        public  Binary response;
        public  DisplayP cresponse;
        public  DisplayP cresponse2;
        public  Variable err_name;
        public  Variable err_fn;
        public  Variable cicserr_msg_last_OF_cicserr_msg;
        public  Variable cicserr_msg;
        public  DisplayP countnbr;
        public  Binary ws_row_OF_ws_display;
        public  Binary ws_col_OF_ws_display;
        public  Binary ws_cpos_OF_ws_display;
        public  Variable ws_num_OF_ws_display;
        public  Variable ws_display_line_OF_ws_display;
        public  Variable ws_d_tax_OF_ws_display;
        public  Variable ws_w_tax_OF_ws_display;
        public  Variable ws_i_price_OF_ws_display;
        public  Variable ws_display_nbr_OF_ws_display;
        public  Variable ws_display_nb2_OF_ws_display;
        public  Variable ws_display;
        public  DisplayP ws_time_start;
        public  DisplayP ws_time_end;
        public  Variable ws_timer_start_OF_ws_timer_msg;
        public Variable _Variable;
        public  Variable ws_timer_end_OF_ws_timer_msg;
        public  Variable ws_timer_msg;
        public  Binary l_maxitems;
        public  Binary l_dist_per_ware;
        public  Binary l_cust_per_dist;
        public  Binary l_ord_per_dist;
        public  Binary l_undel_ord_base;
        public  Binary l_min_name;
        public  Binary l_max_name;
        public  Binary l_name_a;
        public  Binary l_name_c;
        public  Binary s_maxitems;
        public  Binary s_dist_per_ware;
        public  Binary s_cust_per_dist;
        public  Binary s_ord_per_dist;
        public  Binary s_undel_ord_base;
        public  Binary s_min_name;
        public  Binary s_max_name;
        public  Binary s_name_a;
        public  Binary s_name_c;
        public  Binary maxitems;
        public  Binary dist_per_ware;
        public  Binary cust_per_dist;
        public  Binary ord_per_dist;
        public  Binary undel_ord_base;
        public  Binary name_min;
        public  Binary name_max;
        public  Binary name_a;
        public  Binary name_c;
        public  Variable tstamp;
        public  Binary count_ware;
        public  Binary i;
        public  DisplayP todaysdate_OF_current_tstamp;
        public  DisplayP time_in_secs_OF_current_tstamp;
        public  Variable current_tstamp;
        public  Binary a;
        public  Binary c;
        public  Comp2 rand;
        public  Binary rand_min;
        public  Binary rand_min1;
        public  Binary rand_max;
        public  Binary rand_max1;
        public  Binary rand_num;
        public  Binary rand_num1;
        public  Binary temp;
        public  Binary sub1;
        public  Binary sub2;
        public  Binary sub3;
        public  Binary name_num;
        public  Variable name_res;
        public  Variable chars;
        public  Variable digits;
        public  Binary str_min;
        public  Binary str_max;
        public  Binary str_ind;
        public  Binary str_len;
        public  Variable str_val;
        public  Variable adr_str1;
        public  Variable adr_str2;
        public  Variable adr_city;
        public  Variable adr_state;
        public  Variable adr_zip;
        public  Variable nn_OF_filler_2_;
        public  Variable n_OF_filler_2_;
        public  Variable filler_2_;
        public  Binary cust_temp;
        public  Binary cust_perm_OF_filler_d_;
        public  Variable filler_d_;
        public  Binary sdatasiz;
        public  Binary idatasiz;
        public  Binary orig_OF_filler_e_;
        public  Variable filler_e_;
        public  Binary posn;
        
        
        // Create Java Arrays
        public Numeric orig_OF_filler_e___1[];        
        public Numeric cust_perm_OF_filler_d___1[];        
        public Variable n_OF_filler_2___1[];        
        
        protected final Memory _memory=new UnbufferedMemory(415731,"vsmload.Wrk");
        
    } // end Wrk
    public transient Wrk wrk=null; // instance accessor for data section
    
    
    @SuppressWarnings("all")
    public class Lnk              implements Section
    {
        public void doDeclarations()
        {
            try
            {
                declarations();
            }
            catch(Exception _initializerException)
            {
                CobolException.runtimeError(_context,"INTERNAL ERROR: Cannot initialize variable storage for vsmload section 'Lnk'",_initializerException);
            }
        }
        
        
        public void doInitializations()
        {
            option_count_OF_option_array_OF_dfhcommarea=new Binary();
            option_debug_OF_option_array_OF_dfhcommarea=new Binary();
            option_remove_OF_option_array_OF_dfhcommarea=new Binary();
            option_erase_OF_option_array_OF_dfhcommarea=new Binary();
            option_create_OF_option_array_OF_dfhcommarea=new Binary();
            option_load_OF_option_array_OF_dfhcommarea=new Binary();
            option_size_OF_option_array_OF_dfhcommarea=new Binary();
            option_display_OF_option_array_OF_dfhcommarea=new Binary();
            option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea=new Level88("option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea",option_display_OF_option_array_OF_dfhcommarea, $N$option_return_display_88, null, null, null, new Object[]{$N$option_return_display_88});
            err_OF_common_data_OF_option_array_OF_dfhcommarea=new Variable();
            result_code_OF_common_data_OF_option_array_OF_dfhcommarea=new Binary();
            td_data_OF_common_data_OF_option_array_OF_dfhcommarea=new Variable();
            common_data_OF_option_array_OF_dfhcommarea=new Variable();
            option_array_OF_dfhcommarea=new Variable();
            dfhcommarea=new Variable();
            eibtime_OF_dfheiblk=new PackedDecimalI();
            eibdate_OF_dfheiblk=new PackedDecimalI();
            eibtrnid_OF_dfheiblk=new Variable();
            eibtaskn_OF_dfheiblk=new PackedDecimalI();
            eibtrmid_OF_dfheiblk=new Variable();
            dfheigdi_OF_dfheiblk=new Binary();
            eibcposn_OF_dfheiblk=new Binary();
            eibcalen_OF_dfheiblk=new Binary();
            eibaid_OF_dfheiblk=new Variable();
            eibfn_OF_dfheiblk=new Variable();
            eibrcode_OF_dfheiblk=new Variable();
            eibds_OF_dfheiblk=new Variable();
            eibreqid_OF_dfheiblk=new Variable();
            eibrsrce_OF_dfheiblk=new Variable();
            eibsync_OF_dfheiblk=new Variable();
            eibfree_OF_dfheiblk=new Variable();
            eibrecv_OF_dfheiblk=new Variable();
            eibfil01_OF_dfheiblk=new Variable();
            eibatt_OF_dfheiblk=new Variable();
            eibeoc_OF_dfheiblk=new Variable();
            eibfmh_OF_dfheiblk=new Variable();
            eibcompl_OF_dfheiblk=new Variable();
            eibsig_OF_dfheiblk=new Variable();
            eibconf_OF_dfheiblk=new Variable();
            eiberr_OF_dfheiblk=new Variable();
            eiberrcd_OF_dfheiblk=new Variable();
            eibsynrb_OF_dfheiblk=new Variable();
            eibnodat_OF_dfheiblk=new Variable();
            eibresp_OF_dfheiblk=new Binary();
            eibresp2_OF_dfheiblk=new Binary();
            eibrldbk_OF_dfheiblk=new Variable();
            eibsend_OF_dfheiblk=new Variable();
            eiberrmsg_OF_dfheiblk=new Variable();
            dibver_OF_dfheiblk=new Variable();
            dibstat_OF_dfheiblk=new Variable();
            dibsegm_OF_dfheiblk=new Variable();
            dibseglv_OF_dfheiblk=new Variable();
            dibkfbl_OF_dfheiblk=new Binary();
            dibdbdnm_OF_dfheiblk=new Variable();
            dibdborg_OF_dfheiblk=new Variable();
            dfheiblk=new Variable();
        }
        
        public void declarations()
        {
            final Memory _memory=this._memory;
            option_count_OF_option_array_OF_dfhcommarea.declare(_memory,0,4,"option_count",9,null,option_array_OF_dfhcommarea,null,option_debug_OF_option_array_OF_dfhcommarea,0x04400000);
            option_debug_OF_option_array_OF_dfhcommarea.declare(_memory,4,4,"option_debug",9,null,option_array_OF_dfhcommarea,null,option_remove_OF_option_array_OF_dfhcommarea,0x04400000);
            option_remove_OF_option_array_OF_dfhcommarea.declare(_memory,8,4,"option_remove",9,null,option_array_OF_dfhcommarea,null,option_erase_OF_option_array_OF_dfhcommarea,0x04400000);
            option_erase_OF_option_array_OF_dfhcommarea.declare(_memory,12,4,"option_erase",9,null,option_array_OF_dfhcommarea,null,option_create_OF_option_array_OF_dfhcommarea,0x04400000);
            option_create_OF_option_array_OF_dfhcommarea.declare(_memory,16,4,"option_create",9,null,option_array_OF_dfhcommarea,null,option_load_OF_option_array_OF_dfhcommarea,0x04400000);
            option_load_OF_option_array_OF_dfhcommarea.declare(_memory,20,4,"option_load",9,null,option_array_OF_dfhcommarea,null,option_size_OF_option_array_OF_dfhcommarea,0x04400000);
            option_size_OF_option_array_OF_dfhcommarea.declare(_memory,24,4,"option_size",9,null,option_array_OF_dfhcommarea,null,option_display_OF_option_array_OF_dfhcommarea,0x04400000);
            option_display_OF_option_array_OF_dfhcommarea.declare(_memory,28,4,"option_display",9,null,option_array_OF_dfhcommarea,null,common_data_OF_option_array_OF_dfhcommarea,0x04400000);
            err_OF_common_data_OF_option_array_OF_dfhcommarea.declare(_memory,1952,80,"err",null,null,common_data_OF_option_array_OF_dfhcommarea,null,result_code_OF_common_data_OF_option_array_OF_dfhcommarea,0x00000000);
            result_code_OF_common_data_OF_option_array_OF_dfhcommarea.declare(_memory,2112,4,"result_code",9,null,common_data_OF_option_array_OF_dfhcommarea,null,td_data_OF_common_data_OF_option_array_OF_dfhcommarea,0x04400000);
            td_data_OF_common_data_OF_option_array_OF_dfhcommarea.declare(_memory,2117,120,"td_data",null,null,common_data_OF_option_array_OF_dfhcommarea,null,null,0x00000000);
            common_data_OF_option_array_OF_dfhcommarea.declare(_memory,1952,285,"common_data",null,null,option_array_OF_dfhcommarea,err_OF_common_data_OF_option_array_OF_dfhcommarea,null,0x00000000);
            option_array_OF_dfhcommarea.declare(_memory,0,2237,"option_array",null,null,dfhcommarea,option_count_OF_option_array_OF_dfhcommarea,null,0x00000000);
            dfhcommarea.declare(_memory,0,2237,"dfhcommarea",null,null,null,option_array_OF_dfhcommarea,dfheiblk,0x00000000);
            eibtime_OF_dfheiblk.declare(_memory,2237,4,"eibtime",7,Intrinsic.sr_current_julian_time(),dfheiblk,null,eibdate_OF_dfheiblk,0x04400000);
            eibdate_OF_dfheiblk.declare(_memory,2241,4,"eibdate",7,Intrinsic.sr_current_julian_date(),dfheiblk,null,eibtrnid_OF_dfheiblk,0x04400000);
            eibtrnid_OF_dfheiblk.declare(_memory,2245,4,"eibtrnid",null,null,dfheiblk,null,eibtaskn_OF_dfheiblk,0x00000000);
            eibtaskn_OF_dfheiblk.declare(_memory,2249,4,"eibtaskn",7,null,dfheiblk,null,eibtrmid_OF_dfheiblk,0x04400000);
            eibtrmid_OF_dfheiblk.declare(_memory,2253,4,"eibtrmid",null,null,dfheiblk,null,dfheigdi_OF_dfheiblk,0x00000000);
            dfheigdi_OF_dfheiblk.declare(_memory,2257,2,"dfheigdi",4,null,dfheiblk,null,eibcposn_OF_dfheiblk,0x04400000);
            eibcposn_OF_dfheiblk.declare(_memory,2259,2,"eibcposn",4,null,dfheiblk,null,eibcalen_OF_dfheiblk,0x04400000);
            eibcalen_OF_dfheiblk.declare(_memory,2261,2,"eibcalen",4,null,dfheiblk,null,eibaid_OF_dfheiblk,0x04400000);
            eibaid_OF_dfheiblk.declare(_memory,2263,1,"eibaid",null,null,dfheiblk,null,eibfn_OF_dfheiblk,0x00000000);
            eibfn_OF_dfheiblk.declare(_memory,2264,2,"eibfn",null,null,dfheiblk,null,eibrcode_OF_dfheiblk,0x00000000);
            eibrcode_OF_dfheiblk.declare(_memory,2266,6,"eibrcode",null,null,dfheiblk,null,eibds_OF_dfheiblk,0x00000000);
            eibds_OF_dfheiblk.declare(_memory,2272,8,"eibds",null,null,dfheiblk,null,eibreqid_OF_dfheiblk,0x00000000);
            eibreqid_OF_dfheiblk.declare(_memory,2280,8,"eibreqid",null,null,dfheiblk,null,eibrsrce_OF_dfheiblk,0x00000000);
            eibrsrce_OF_dfheiblk.declare(_memory,2288,8,"eibrsrce",null,null,dfheiblk,null,eibsync_OF_dfheiblk,0x00000000);
            eibsync_OF_dfheiblk.declare(_memory,2296,1,"eibsync",null,null,dfheiblk,null,eibfree_OF_dfheiblk,0x00000000);
            eibfree_OF_dfheiblk.declare(_memory,2297,1,"eibfree",null,null,dfheiblk,null,eibrecv_OF_dfheiblk,0x00000000);
            eibrecv_OF_dfheiblk.declare(_memory,2298,1,"eibrecv",null,null,dfheiblk,null,eibfil01_OF_dfheiblk,0x00000000);
            eibfil01_OF_dfheiblk.declare(_memory,2299,1,"eibfil01",null,null,dfheiblk,null,eibatt_OF_dfheiblk,0x00000000);
            eibatt_OF_dfheiblk.declare(_memory,2300,1,"eibatt",null,null,dfheiblk,null,eibeoc_OF_dfheiblk,0x00000000);
            eibeoc_OF_dfheiblk.declare(_memory,2301,1,"eibeoc",null,null,dfheiblk,null,eibfmh_OF_dfheiblk,0x00000000);
            eibfmh_OF_dfheiblk.declare(_memory,2302,1,"eibfmh",null,null,dfheiblk,null,eibcompl_OF_dfheiblk,0x00000000);
            eibcompl_OF_dfheiblk.declare(_memory,2303,1,"eibcompl",null,null,dfheiblk,null,eibsig_OF_dfheiblk,0x00000000);
            eibsig_OF_dfheiblk.declare(_memory,2304,1,"eibsig",null,null,dfheiblk,null,eibconf_OF_dfheiblk,0x00000000);
            eibconf_OF_dfheiblk.declare(_memory,2305,1,"eibconf",null,null,dfheiblk,null,eiberr_OF_dfheiblk,0x00000000);
            eiberr_OF_dfheiblk.declare(_memory,2306,1,"eiberr",null,null,dfheiblk,null,eiberrcd_OF_dfheiblk,0x00000000);
            eiberrcd_OF_dfheiblk.declare(_memory,2307,4,"eiberrcd",null,null,dfheiblk,null,eibsynrb_OF_dfheiblk,0x00000000);
            eibsynrb_OF_dfheiblk.declare(_memory,2311,1,"eibsynrb",null,null,dfheiblk,null,eibnodat_OF_dfheiblk,0x00000000);
            eibnodat_OF_dfheiblk.declare(_memory,2312,1,"eibnodat",null,null,dfheiblk,null,eibresp_OF_dfheiblk,0x00000000);
            eibresp_OF_dfheiblk.declare(_memory,2313,4,"eibresp",8,null,dfheiblk,null,eibresp2_OF_dfheiblk,0x04400000);
            eibresp2_OF_dfheiblk.declare(_memory,2317,4,"eibresp2",8,null,dfheiblk,null,eibrldbk_OF_dfheiblk,0x04400000);
            eibrldbk_OF_dfheiblk.declare(_memory,2321,1,"eibrldbk",null,null,dfheiblk,null,eibsend_OF_dfheiblk,0x00000000);
            eibsend_OF_dfheiblk.declare(_memory,2322,1,"eibsend",null,null,dfheiblk,null,eiberrmsg_OF_dfheiblk,0x00000000);
            eiberrmsg_OF_dfheiblk.declare(_memory,2323,2013,"eiberrmsg",null,null,dfheiblk,null,dibver_OF_dfheiblk,0x00000000);
            dibver_OF_dfheiblk.declare(_memory,4336,2,"dibver",null,null,dfheiblk,null,dibstat_OF_dfheiblk,0x00000000);
            dibstat_OF_dfheiblk.declare(_memory,4338,2,"dibstat",null,null,dfheiblk,null,dibsegm_OF_dfheiblk,0x00000000);
            dibsegm_OF_dfheiblk.declare(_memory,4340,8,"dibsegm",null,null,dfheiblk,null,dibseglv_OF_dfheiblk,0x00000000);
            dibseglv_OF_dfheiblk.declare(_memory,4348,2,"dibseglv",null,null,dfheiblk,null,dibkfbl_OF_dfheiblk,0x00000000);
            dibkfbl_OF_dfheiblk.declare(_memory,4350,2,"dibkfbl",4,null,dfheiblk,null,dibdbdnm_OF_dfheiblk,0x04400000);
            dibdbdnm_OF_dfheiblk.declare(_memory,4352,8,"dibdbdnm",null,null,dfheiblk,null,dibdborg_OF_dfheiblk,0x00000000);
            dibdborg_OF_dfheiblk.declare(_memory,4360,8,"dibdborg",null,null,dfheiblk,null,null,0x00000000);
            dfheiblk.declare(_memory,2237,2131,"dfheiblk",null,null,null,eibtime_OF_dfheiblk,null,0x00000000);
            Variable.setUnusedVarsSizes(lnk.dfhcommarea);
            
            
        } // end declarations
        
        public  Binary option_count_OF_option_array_OF_dfhcommarea;
        public  Binary option_debug_OF_option_array_OF_dfhcommarea;
        public  Binary option_remove_OF_option_array_OF_dfhcommarea;
        public  Binary option_erase_OF_option_array_OF_dfhcommarea;
        public  Binary option_create_OF_option_array_OF_dfhcommarea;
        public  Binary option_load_OF_option_array_OF_dfhcommarea;
        public  Binary option_size_OF_option_array_OF_dfhcommarea;
        public  Binary option_display_OF_option_array_OF_dfhcommarea;
        public Level88 option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea;
        public  Variable err_OF_common_data_OF_option_array_OF_dfhcommarea;
        public  Binary result_code_OF_common_data_OF_option_array_OF_dfhcommarea;
        public  Variable td_data_OF_common_data_OF_option_array_OF_dfhcommarea;
        public  Variable common_data_OF_option_array_OF_dfhcommarea;
        public  Variable option_array_OF_dfhcommarea;
        public  Variable dfhcommarea;
        public  PackedDecimalI eibtime_OF_dfheiblk;
        public  PackedDecimalI eibdate_OF_dfheiblk;
        public  Variable eibtrnid_OF_dfheiblk;
        public  PackedDecimalI eibtaskn_OF_dfheiblk;
        public  Variable eibtrmid_OF_dfheiblk;
        public  Binary dfheigdi_OF_dfheiblk;
        public  Binary eibcposn_OF_dfheiblk;
        public  Binary eibcalen_OF_dfheiblk;
        public  Variable eibaid_OF_dfheiblk;
        public  Variable eibfn_OF_dfheiblk;
        public  Variable eibrcode_OF_dfheiblk;
        public  Variable eibds_OF_dfheiblk;
        public  Variable eibreqid_OF_dfheiblk;
        public  Variable eibrsrce_OF_dfheiblk;
        public  Variable eibsync_OF_dfheiblk;
        public  Variable eibfree_OF_dfheiblk;
        public  Variable eibrecv_OF_dfheiblk;
        public  Variable eibfil01_OF_dfheiblk;
        public  Variable eibatt_OF_dfheiblk;
        public  Variable eibeoc_OF_dfheiblk;
        public  Variable eibfmh_OF_dfheiblk;
        public  Variable eibcompl_OF_dfheiblk;
        public  Variable eibsig_OF_dfheiblk;
        public  Variable eibconf_OF_dfheiblk;
        public  Variable eiberr_OF_dfheiblk;
        public  Variable eiberrcd_OF_dfheiblk;
        public  Variable eibsynrb_OF_dfheiblk;
        public  Variable eibnodat_OF_dfheiblk;
        public  Binary eibresp_OF_dfheiblk;
        public  Binary eibresp2_OF_dfheiblk;
        public  Variable eibrldbk_OF_dfheiblk;
        public  Variable eibsend_OF_dfheiblk;
        public  Variable eiberrmsg_OF_dfheiblk;
        public  Variable dibver_OF_dfheiblk;
        public  Variable dibstat_OF_dfheiblk;
        public  Variable dibsegm_OF_dfheiblk;
        public  Variable dibseglv_OF_dfheiblk;
        public  Binary dibkfbl_OF_dfheiblk;
        public  Variable dibdbdnm_OF_dfheiblk;
        public  Variable dibdborg_OF_dfheiblk;
        public  Variable dfheiblk;
        
        
        protected final Memory _memory=new UnbufferedMemory(4368,"vsmload.Lnk");
        
    } // end Lnk
    public transient Lnk lnk=null; // instance accessor for data section
    
    public java.lang.Object call(Context _passContext)
    {
        setup(_passContext);
        return callGiving();
    }
    
    public java.lang.Object call(Context _passContext,parameterList _param)
    {
        setup(_passContext);
        return callGiving(_param);
    }
    
    public void call()
    {
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        run(-1,0); // parameters expected, leave at defaults
    } // end call
    
    public void call(parameterList _param)
    {
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        try
        {
            lnk.dfheiblk.ipc_init(_param,0);
            lnk.dfhcommarea.ipc_init(_param,1);
            Context _prevContext=Variable.setCurrContext(_context);
            Variable.setNarg(_param);
            _callArrayInitializer();
            Variable[] _variables=new Variable[]
            {
                lnk.dfheiblk,lnk.dfhcommarea
            };
            Variable.ipc_ready(_variables);
            this.run(-1,0);
            Variable.ipc_finish(_variables,_param,_programId);
            _callArrayFinalizer();
            Variable.ipc_final(_variables,_param);
            Variable.setCurrContext(_prevContext);
        }
        catch(ArrayIndexOutOfBoundsException _linkingExceptionOuter)
        {
            CobolException.runtimeError("Linking Error in Initiation of "+_programId,_linkingExceptionOuter);
        }
    }
    
    public java.lang.Object callGiving()
    {
        call();
        return _context.getReturnCode();
    }
    
    public java.lang.Object call(boolean[] _byRef,java.lang.Object[] _param)
    {
        return callGiving(new parameterList(_byRef,_param));
    }
    
    public java.lang.Object callGiving(parameterList _param)
    {
        call(_param);
        return _context.getReturnCode();
    }
    
    static public final int _main__Label=1;
    static public final int _main_para_OF_main_Label=2;
    
    public final int main_para_OF_main()
    {
        final Wrk wrk=this.wrk;
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1812);
            final Object[] _transactionParameters=new Object[] {null,lnk.eibrsrce_OF_dfheiblk,null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
            _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_0,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_row_OF_ws_display.move(_NCONSTANT_32);
        wrk.ws_col_OF_ws_display.move(_NCONSTANT_32);
        if((lnk.option_size_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_32)==0))
        {
            wrk.ws_display_line_OF_ws_display.move("Small Database");
            int _performResult=0;
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
            wrk.maxitems.move(wrk.s_maxitems);
            wrk.dist_per_ware.move(wrk.s_dist_per_ware);
            wrk.cust_per_dist.move(wrk.s_cust_per_dist);
            wrk.ord_per_dist.move(wrk.s_ord_per_dist);
            wrk.undel_ord_base.move(wrk.s_undel_ord_base);
            wrk.name_min.move(wrk.s_min_name);
            wrk.name_max.move(wrk.s_max_name);
            wrk.name_a.move(wrk.s_name_a);
            wrk.name_c.move(wrk.s_name_c);
        }
        else
        {
            wrk.ws_display_line_OF_ws_display.move("Large Database");
            int _performResult=0;
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
            wrk.maxitems.move(wrk.l_maxitems);
            wrk.dist_per_ware.move(wrk.l_dist_per_ware);
            wrk.cust_per_dist.move(wrk.l_cust_per_dist);
            wrk.ord_per_dist.move(wrk.l_ord_per_dist);
            wrk.undel_ord_base.move(wrk.l_undel_ord_base);
            wrk.name_min.move(wrk.l_min_name);
            wrk.name_max.move(wrk.l_max_name);
            wrk.name_a.move(wrk.l_name_a);
            wrk.name_c.move(wrk.l_name_c);
        }
        wrk.count_ware.move(lnk.option_count_OF_option_array_OF_dfhcommarea);
        if((lnk.option_create_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_32)!=0) || (lnk.option_erase_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_32)!=0) || (lnk.option_remove_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_32)!=0))
        {
            wrk.ws_display_line_OF_ws_display.move("Files Cleared");
            
            /*
              LJ: EXEC CICS SET FILE is not supported. exec cics set file('ORDLINE') closed end-exec exec cics set file('NEWORD') closed end-exec exec cics set file('NEWORD') emptyreq end-exec exec cics set file('NEWORD') open end-exec exec cics set file('ORD') closed end-exec exec cics set file('ORD') emptyreq end-exec exec cics set file('ORDALT') closed end-exec exec cics set file('ORDALT') emptyreq end-exec exec cics set file('ORD') open end-exec exec cics set file('ORDALT') open end-exec exec cics set file('HISTORY') closed end-exec exec cics set file('HISTORY') emptyreq end-exec exec cics set file('HISTORY') open end-exec exec cics set file('CUSTALT') closed end-exec exec cics set file('CUSTALT') emptyreq end-exec exec cics set file('CUSTOMER') closed end-exec exec cics set file('CUSTOMER') emptyreq end-exec exec cics set file('CUSTOMER') open end-exec exec cics set file('CUSTALT') open end-exec exec cics set file('DISTRICT') closed end-exec exec cics set file('DISTRICT') emptyreq end-exec exec cics set file('DISTRICT') open end-exec exec cics set file('STOCK') closed end-exec exec cics set file('STOCK') emptyreq end-exec exec cics set file('STOCK') open end-exec exec cics set file('ITEM') closed end-exec exec cics set file('ITEM') emptyreq end-exec exec cics set file('ITEM') open end-exec exec cics set file('WHOUSE') closed end-exec exec cics set file('WHOUSE') emptyreq end-exec exec cics set file('WHOUSE') open end-exec exec cics set file('DELVLOG') closed end-exec exec cics set file('DELVLOG') emptyreq end-exec exec cics set file('DELVLOG') open end-exec  EXEC CICS SET FILE is not supported. 
            */
            
            int _performResult=0;
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1602);
                final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                _context.getSqlContext().getCursors().closeAllNotHeld();
                _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
        }
        if((lnk.option_load_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_32)!=0))
        {
            boolean _sizeError=false;
            wrk.todaysdate_OF_current_tstamp.acceptYYYYMMDD();
            _sizeError=false;
            wrk.time_in_secs_OF_current_tstamp.acceptTime();
            wrk.tstamp.moveSpaces();
            _sizeError=false;
            Index _defaultPointerIndex=new Index(1);
            _sizeError|=wrk.tstamp.string(wrk.todaysdate_OF_current_tstamp.ref(_NCONSTANT_33.toInt(),_NCONSTANT_34.toInt()),_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string((String)"-",_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string(wrk.todaysdate_OF_current_tstamp.ref(_NCONSTANT_35.toInt(),_NCONSTANT_36.toInt()),_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string((String)"-",_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string(wrk.todaysdate_OF_current_tstamp.ref(_NCONSTANT_37.toInt(),_NCONSTANT_36.toInt()),_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string((String)"-",_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string(wrk.time_in_secs_OF_current_tstamp.ref(_NCONSTANT_33.toInt(),_NCONSTANT_36.toInt()),_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string((String)".",_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string(wrk.time_in_secs_OF_current_tstamp.ref(_NCONSTANT_38.toInt(),_NCONSTANT_36.toInt()),_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string((String)".",_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string(wrk.time_in_secs_OF_current_tstamp.ref(_NCONSTANT_35.toInt(),_NCONSTANT_36.toInt()),_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string((String)".",_defaultPointerIndex);
            _sizeError|=wrk.tstamp.string(wrk.time_in_secs_OF_current_tstamp.ref(_NCONSTANT_37.toInt(),_NCONSTANT_36.toInt()),_defaultPointerIndex);
            _sizeError=false;
            _sizeError|=wrk.i.moveSE(Intrinsic.random(wrk.time_in_secs_OF_current_tstamp).toBignum()).isSizeError();
            _sizeError=false;
            wrk.ws_time_start.acceptTime();
            wrk.ws_display_line_OF_ws_display.move("TPCC Data Load Started...");
            int _performResult=0;
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
            if((_performResult=loaditems_OF_main())>0) perform(_performResult,_loaditems_OF_main_Label);
            if((_performResult=loadware_OF_main())>0) perform(_performResult,_loadware_OF_main_Label);
            if((_performResult=loadcust_OF_main())>0) perform(_performResult,_loadcust_OF_main_Label);
            if((_performResult=loadord_OF_main())>0) perform(_performResult,_loadord_OF_main_Label);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1602);
                final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                _context.getSqlContext().getCursors().closeAllNotHeld();
                _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1602);
                final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                _context.getSqlContext().getCursors().closeAllNotHeld();
                _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.ws_display_line_OF_ws_display.move("...Data loading completed successfully.");
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
            _sizeError=false;
            wrk.ws_time_end.acceptTime();
            wrk.ws_timer_start_OF_ws_timer_msg.ref(_NCONSTANT_39.toInt(),_NCONSTANT_36.toInt()).move(wrk.ws_time_start.ref(_NCONSTANT_33.toInt(),_NCONSTANT_36.toInt()));
            wrk.ws_timer_start_OF_ws_timer_msg.ref(_NCONSTANT_40.toInt(),_NCONSTANT_36.toInt()).move(wrk.ws_time_start.ref(_NCONSTANT_38.toInt(),_NCONSTANT_36.toInt()));
            wrk.ws_timer_start_OF_ws_timer_msg.ref(_NCONSTANT_41.toInt(),_NCONSTANT_36.toInt()).move(wrk.ws_time_start.ref(_NCONSTANT_35.toInt(),_NCONSTANT_36.toInt()));
            wrk.ws_timer_end_OF_ws_timer_msg.ref(_NCONSTANT_42.toInt(),_NCONSTANT_36.toInt()).move(wrk.ws_time_end.ref(_NCONSTANT_33.toInt(),_NCONSTANT_36.toInt()));
            wrk.ws_timer_end_OF_ws_timer_msg.ref(_NCONSTANT_43.toInt(),_NCONSTANT_36.toInt()).move(wrk.ws_time_end.ref(_NCONSTANT_38.toInt(),_NCONSTANT_36.toInt()));
            wrk.ws_timer_end_OF_ws_timer_msg.ref(_NCONSTANT_44.toInt(),_NCONSTANT_36.toInt()).move(wrk.ws_time_end.ref(_NCONSTANT_35.toInt(),_NCONSTANT_36.toInt()));
            wrk.ws_display_line_OF_ws_display.move(wrk.ws_timer_msg);
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
        }
        if((lnk.err_OF_common_data_OF_option_array_OF_dfhcommarea.compare(Variable.SPACES)!=0) && (lnk.err_OF_common_data_OF_option_array_OF_dfhcommarea.compare(Variable.LOW_VALUES)!=0))
        {
            boolean _sizeError=false;
            Index _defaultPointerIndex=new Index(1);
            _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"Error: ",_defaultPointerIndex);
            _sizeError|=wrk.ws_display_line_OF_ws_display.string(lnk.err_OF_common_data_OF_option_array_OF_dfhcommarea,_defaultPointerIndex);
            int _performResult=0;
            if((_performResult=display_line_OF_main())>0) perform(_performResult,_display_line_OF_main_Label);
        }
        lnk.result_code_OF_common_data_OF_option_array_OF_dfhcommarea.move(_NCONSTANT_32);
        boolean _sizeError=false;
        _sizeError=!_context.syserr().display(_context,wrk.pgm.toText()+(String)"MAIN: "+wrk.write_item_ct.toText()+(String)" write-item-ct");
        _sizeError=!_context.syserr().display(_context,wrk.pgm.toText()+(String)"MAIN: "+wrk.write_whouse_ct.toText()+(String)" write-whouse-ct");
        _sizeError=!_context.syserr().display(_context,wrk.pgm.toText()+(String)"MAIN: "+wrk.write_customer_ct.toText()+(String)" write-customer-ct");
        _sizeError=!_context.syserr().display(_context,wrk.pgm.toText()+(String)"MAIN: "+wrk.write_stock_ct.toText()+(String)" write-stock-ct");
        _sizeError=!_context.syserr().display(_context,wrk.pgm.toText()+(String)"MAIN: "+wrk.write_district_ct.toText()+(String)" write-district-ct");
        _sizeError=!_context.syserr().display(_context,wrk.pgm.toText()+(String)"MAIN: "+wrk.write_history_ct.toText()+(String)" write-history-ct");
        _sizeError=!_context.syserr().display(_context,wrk.pgm.toText()+(String)"MAIN: "+wrk.write_ord_ct.toText()+(String)" write-ord-ct");
        _sizeError=!_context.syserr().display(_context,wrk.pgm.toText()+(String)"MAIN: "+wrk.write_neword_ct.toText()+(String)" write-neword-ct");
        _sizeError=!_context.syserr().display(_context,wrk.pgm.toText()+(String)"MAIN: "+wrk.write_ordline_ct.toText()+(String)" write-ordline-ct");
        _sizeError=!_context.syserr().display(_context,wrk.pgm.toText()+(String)"MAIN: RETURN ");
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x0e08);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("RETURN",_TAGCONSTANT_2,_transactionParameters);
            if(_programControl!=null) _programControl.returnControl(_transenv,_TAGCONSTANT_2,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("RETURN",_TAGCONSTANT_2,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            if(true) throw new UnwindException(UnwindException.RETURN);
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0e08));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    static public final int _randomnumber_Label=13;
    static public final int _randomnumber_para_OF_randomnumber_Label=14;
    
    public final int randomnumber_para_OF_randomnumber()
    {
        final Wrk wrk=this.wrk;
        boolean _sizeError=false;
        _sizeError|=wrk.rand.moveSE(Intrinsic.random().toBignum()).isSizeError();
        _sizeError=false;
        _sizeError|=wrk.rand_num.moveSE( (wrk.rand.toBignum().multiply( (wrk.rand_max.toBignum().subtract(wrk.rand_min.toBignum())))).addingWith(wrk.rand_min.toBignum())).isSizeError();
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _nurand_Label=15;
    static public final int _nurand_para_OF_nurand_Label=16;
    
    public final int nurand_para_OF_nurand()
    {
        final Wrk wrk=this.wrk;
        int _performResult=0;
        if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
        wrk.rand_num1.move(wrk.rand_num);
        wrk.rand_min1.move(wrk.rand_min);
        wrk.rand_max1.move(wrk.rand_max);
        wrk.rand_min.move(_NCONSTANT_32);
        wrk.rand_max.move(wrk.a);
        if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_36).compare(_NCONSTANT_32)==0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_36).compare(_NCONSTANT_32)!=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(1);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_34).compare(_NCONSTANT_36)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_34).compare(_NCONSTANT_36)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(2);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_45).compare(_NCONSTANT_34)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_45).compare(_NCONSTANT_34)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(4);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_40).compare(_NCONSTANT_45)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_40).compare(_NCONSTANT_45)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(8);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_46).compare(_NCONSTANT_40)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_46).compare(_NCONSTANT_40)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(16);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_47).compare(_NCONSTANT_46)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_47).compare(_NCONSTANT_46)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(32);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_48).compare(_NCONSTANT_47)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_48).compare(_NCONSTANT_47)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(64);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_49).compare(_NCONSTANT_48)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_49).compare(_NCONSTANT_48)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(128);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_50).compare(_NCONSTANT_49)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_50).compare(_NCONSTANT_49)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(256);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_51).compare(_NCONSTANT_50)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_51).compare(_NCONSTANT_50)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(512);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_52).compare(_NCONSTANT_51)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_52).compare(_NCONSTANT_51)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(1024);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_53).compare(_NCONSTANT_52)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_53).compare(_NCONSTANT_52)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(2048);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_54).compare(_NCONSTANT_53)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_54).compare(_NCONSTANT_53)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(4096);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_55).compare(_NCONSTANT_54)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_55).compare(_NCONSTANT_54)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(8192);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_56).compare(_NCONSTANT_55)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_56).compare(_NCONSTANT_55)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(16384);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_57).compare(_NCONSTANT_56)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_57).compare(_NCONSTANT_56)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(32768);
                
            }
        }
        if((Intrinsic.mod(wrk.rand_num1,_NCONSTANT_58).compare(_NCONSTANT_57)<0))
        {
            if((Intrinsic.mod(wrk.rand_num,_NCONSTANT_58).compare(_NCONSTANT_57)>=0))
            {
                boolean _sizeError=false;
                wrk.rand_num1.add(65536);
                
            }
        }
        boolean _sizeError=false;
        wrk.rand_num1.add(wrk.c);
        
        _sizeError=false;
        _sizeError|=wrk.temp.moveSE( wrk.rand_max1.toBignum().subtract(wrk.rand_min1.toBignum()).addingWith(_BCONSTANT_0)).isSizeError();
        _sizeError=false;
        _sizeError|=wrk.rand_num.moveSE( Intrinsic.mod(wrk.rand_num1,wrk.temp).toBignum().add(wrk.rand_min1.toBignum())).isSizeError();
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _makealphastring_Label=17;
    static public final int _makealphastring_para_OF_makealphastring_Label=18;
    
    public final int makealphastring_para_OF_makealphastring()
    {
        final Wrk wrk=this.wrk;
        wrk.str_val.moveSpaces();
        wrk.rand_min.move(wrk.str_min);
        wrk.rand_max.move(wrk.str_max);
        int _performResult=0;
        if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
        wrk.str_len.move(wrk.rand_num);
        wrk.rand_min.move(_NCONSTANT_33);
        wrk.rand_max.move(new Numeric( wrk.chars.lengthForLengthOfSyntax()));
        for(wrk.str_ind.move(1);!((wrk.str_ind.compare(wrk.str_len)>0));wrk.str_ind.add(1))
        {
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            wrk.str_val.ref(wrk.str_ind.toInt(),_NCONSTANT_33.toInt()).move(wrk.chars.ref(wrk.rand_num.toInt(),_NCONSTANT_33.toInt()));
        } // end perform with test before/varying
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _makenumberstring_Label=19;
    static public final int _makenumberstring_para_OF_makenumberstring_Label=20;
    
    public final int makenumberstring_para_OF_makenumberstring()
    {
        final Wrk wrk=this.wrk;
        wrk.str_val.moveSpaces();
        wrk.rand_min.move(wrk.str_min);
        wrk.rand_max.move(wrk.str_max);
        int _performResult=0;
        if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
        wrk.str_len.move(wrk.rand_num);
        wrk.rand_min.move(_NCONSTANT_32);
        wrk.rand_max.move(_NCONSTANT_59);
        for(wrk.str_ind.move(1);!((wrk.str_ind.compare(wrk.str_len)>0));wrk.str_ind.add(1))
        {
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            wrk.str_val.ref(wrk.str_ind.toInt(),_NCONSTANT_33.toInt()).move(wrk.digits.ref( Numeric.addGiving(wrk.rand_num,_NCONSTANT_33).toInt(),_NCONSTANT_33.toInt()));
        } // end perform with test before/varying
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _loaditems_Label=22;
    static public final int _loaditems_para_OF_loaditems_Label=23;
    
    public final int loaditems_para_OF_loaditems()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_line_OF_ws_display.move("Loading Item");
        int _performResult=0;
        if((_performResult=display_line_OF_loaditems())>0) perform(_performResult,_display_line_OF_loaditems_Label);
        for(wrk.i.move(1);!((wrk.i.compare(wrk.maxitems)>0));wrk.i.add(1))
        {
            wrk.orig_OF_filler_e___1[wrk.i.toInt()].move(_NCONSTANT_32);
        } // end perform with test before/varying
        for(wrk.i.move(1);!((wrk.i.compare( Numeric.divGiving(wrk.maxitems,_NCONSTANT_60))>0));wrk.i.add(1))
        {
            do // PERFORM WITH TEST AFTER
            {
                wrk.rand_min.move(_NCONSTANT_33);
                wrk.rand_max.move(wrk.maxitems);
                if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
                wrk.posn.move(wrk.rand_num);
            } while(!((wrk.orig_OF_filler_e___1[wrk.posn.toInt()].compare(_NCONSTANT_32)==0))); // end perform with test after
            wrk.orig_OF_filler_e___1[wrk.posn.toInt()].move(_NCONSTANT_33);
        } // end perform with test before/varying
        for(wrk.i_id_OF_item_key_OF_i_record.move(1);!((wrk.i_id_OF_item_key_OF_i_record.compare(wrk.maxitems)>0));wrk.i_id_OF_item_key_OF_i_record.add(1))
        {
            wrk.str_min.move(_NCONSTANT_43);
            wrk.str_max.move(_NCONSTANT_61);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.i_name_OF_i_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.i_name_OF_i_record.lengthForLengthOfSyntax()).toInt()));
            wrk.rand_min.move(_NCONSTANT_62);
            wrk.rand_max.move(_NCONSTANT_63);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            boolean _sizeError=false;
            Bignum _computeExpression0=_BCONSTANT_17;
            if(_computeExpression0.isZero())
                _sizeError=true;
            else
            {
                _sizeError|=wrk.i_price_OF_i_record.moveSE( wrk.rand_num.toBignum().divide(_computeExpression0)).isSizeError();
            }
            wrk.str_min.move(_NCONSTANT_64);
            wrk.str_max.move(_NCONSTANT_65);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.i_data_OF_i_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.i_data_OF_i_record.lengthForLengthOfSyntax()).toInt()));
            wrk.idatasiz.move(wrk.str_len);
            if((wrk.orig_OF_filler_e___1[wrk.i_id_OF_item_key_OF_i_record.toInt()].compare(_NCONSTANT_32)!=0))
            {
                wrk.rand_min.move(_NCONSTANT_33);
                _sizeError=false;
                _sizeError|=wrk.rand_max.moveSE( wrk.idatasiz.toBignum().subtract(_BCONSTANT_3)).isSizeError();
                if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
                wrk.posn.move(wrk.rand_num);
                _sizeError=false;
                _sizeError|=wrk.i_data_OF_i_record.string((String)"original",wrk.posn);
            }
            if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_32)!=0))
            {
                wrk.ws_i_price_OF_ws_display.move(wrk.i_price_OF_i_record);
                _sizeError=false;
                Index _defaultPointerIndex=new Index(1);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"IID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.i_id_OF_item_key_OF_i_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Name= ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.i_name_OF_i_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Price = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_i_price_OF_ws_display,_defaultPointerIndex);
                if((_performResult=display_line_OF_loaditems())>0) perform(_performResult,_display_line_OF_loaditems_Label);
            }
            wrk.i_im_id_OF_i_record.move(_NCONSTANT_32);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0204);
                final Object[] _transactionParameters=new Object[] {null,new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label),null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                if(_executeInterfaceProgram!=null) _executeInterfaceProgram.handleCondition(_transenv,_TAGCONSTANT_3,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                _context.registerHandler("ERROR",new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("HANDLE CONDITION",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0204));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("HANDLE CONDITION",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            _sizeError=false;
            _sizeError|=wrk.countnbr.moveSE( wrk.countnbr.toBignum().add(_BCONSTANT_0)).isSizeError();
            wrk.ws_num_OF_ws_display.move(wrk.item_key_OF_i_record);
            wrk.cicserr_msg_last_OF_cicserr_msg.move("LoadItems: WRITE FILE(ITEM)");
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0604);
                final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"ITEM",wrk.i_record,wrk.item_key_OF_i_record,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("WRITE",_TAGCONSTANT_4,_transactionParameters);
                _fileControl.write(_transenv,_TAGCONSTANT_4,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("WRITE",_TAGCONSTANT_4,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITE",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0604));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITE",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.write_item_ct.add(1);
            
            _sizeError=!_context.syserr().display(_context,wrk.cicserr_msg.toText()+(String)" EIBRESP="+lnk.eibresp_OF_dfheiblk.toText()+(String)". write-item-ct="+wrk.write_item_ct.toText());
            wrk.ws_num_OF_ws_display.move(wrk.i_id_OF_item_key_OF_i_record);
            if((_performResult=display_number_OF_loaditems())>0) perform(_performResult,_display_number_OF_loaditems_Label);
            if((Intrinsic.mod(wrk.i_id_OF_item_key_OF_i_record,_NCONSTANT_66).compare(_NCONSTANT_32)==0))
            {
                if(!(lnk.option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea.isTrue()))
                {
                    _sizeError=!_context.defaultio().displayNoAdvancing(_context,(String)".");
                    if((Intrinsic.mod(wrk.i_id_OF_item_key_OF_i_record,_NCONSTANT_67).compare(_NCONSTANT_32)==0))
                    {
                        _sizeError=!_context.defaultio().display(_context,(String)" "+wrk.i_id_OF_item_key_OF_i_record.toText());
                    }
                }
                else
                {
                    if((_performResult=display_dot_OF_loaditems())>0) perform(_performResult,_display_dot_OF_loaditems_Label);
                    if((Intrinsic.mod(wrk.i_id_OF_item_key_OF_i_record,_NCONSTANT_67).compare(_NCONSTANT_32)==0))
                    {
                        wrk.ws_num_OF_ws_display.move(wrk.i_id_OF_item_key_OF_i_record);
                        if((_performResult=display_number_OF_loaditems())>0) perform(_performResult,_display_number_OF_loaditems_Label);
                    }
                }
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x1602);
                    final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    _context.getSqlContext().getCursors().closeAllNotHeld();
                    _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
            }
        } // end perform with test before/varying
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_display_line_OF_ws_display.move("Item Done. ");
        if((_performResult=display_line_OF_loaditems())>0) perform(_performResult,_display_line_OF_loaditems_Label);
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _loadware_Label=32;
    static public final int _loadware_para_OF_loadware_Label=33;
    
    public final int loadware_para_OF_loadware()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_line_OF_ws_display.move("Loading Warehouse");
        int _performResult=0;
        if((_performResult=display_line_OF_loadware())>0) perform(_performResult,_display_line_OF_loadware_Label);
        for(wrk.w_id_OF_warehouse_key_OF_w_record.move(1);!((wrk.w_id_OF_warehouse_key_OF_w_record.compare(wrk.count_ware)>0));wrk.w_id_OF_warehouse_key_OF_w_record.add(1))
        {
            wrk.str_min.move(_NCONSTANT_68);
            wrk.str_max.move(_NCONSTANT_60);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.w_name_OF_w_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.w_name_OF_w_record.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makeaddress_OF_loadware())>0) perform(_performResult,_makeaddress_OF_loadware_Label);
            wrk.w_street_1_OF_w_record.move(wrk.adr_str1);
            wrk.w_street_2_OF_w_record.move(wrk.adr_str2);
            wrk.w_city_OF_w_record.move(wrk.adr_city);
            wrk.w_state_OF_w_record.move(wrk.adr_state);
            wrk.w_zip_OF_w_record.move(wrk.adr_zip);
            wrk.rand_min.move(_NCONSTANT_60);
            wrk.rand_max.move(_NCONSTANT_69);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            boolean _sizeError=false;
            Bignum _computeExpression0=_BCONSTANT_17;
            if(_computeExpression0.isZero())
                _sizeError=true;
            else
            {
                _sizeError|=wrk.w_tax_OF_w_record.moveSE( wrk.rand_num.toBignum().divide(_computeExpression0)).isSizeError();
            }
            wrk.w_ytd_OF_w_record.move(_NCONSTANT_70);
            if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_32)!=0))
            {
                wrk.ws_w_tax_OF_ws_display.move(wrk.w_tax_OF_w_record);
                _sizeError=false;
                Index _defaultPointerIndex=new Index(1);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"WID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.w_id_OF_warehouse_key_OF_w_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Name = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.w_name_OF_w_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Tax = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_w_tax_OF_ws_display,_defaultPointerIndex);
                if((_performResult=display_line_OF_loadware())>0) perform(_performResult,_display_line_OF_loadware_Label);
            }
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0204);
                final Object[] _transactionParameters=new Object[] {null,new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label),null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                if(_executeInterfaceProgram!=null) _executeInterfaceProgram.handleCondition(_transenv,_TAGCONSTANT_3,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                _context.registerHandler("ERROR",new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("HANDLE CONDITION",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0204));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("HANDLE CONDITION",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.cicserr_msg_last_OF_cicserr_msg.move("LoadWare: WRITE FILE(WHOUSE)");
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0604);
                final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"WHOUSE",wrk.w_record,wrk.warehouse_key_OF_w_record,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("WRITE",_TAGCONSTANT_4,_transactionParameters);
                _fileControl.write(_transenv,_TAGCONSTANT_4,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("WRITE",_TAGCONSTANT_4,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITE",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0604));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITE",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.write_whouse_ct.add(1);
            
            _sizeError=!_context.syserr().display(_context,wrk.cicserr_msg.toText()+(String)" EIBRESP="+lnk.eibresp_OF_dfheiblk.toText()+(String)". write-whouse-ct="+wrk.write_whouse_ct.toText());
            if((_performResult=stock_OF_loadware())>0) perform(_performResult,_stock_OF_loadware_Label);
            if((_performResult=district_OF_loadware())>0) perform(_performResult,_district_OF_loadware_Label);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1602);
                final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                _context.getSqlContext().getCursors().closeAllNotHeld();
                _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SYNCPOINT",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
        } // end perform with test before/varying
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _loadcust_Label=42;
    static public final int _loadcust_para_OF_loadcust_Label=43;
    
    public final int loadcust_para_OF_loadcust()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_line_OF_ws_display.move("Loading Customer");
        int _performResult=0;
        if((_performResult=display_line_OF_loadcust())>0) perform(_performResult,_display_line_OF_loadcust_Label);
        for(wrk.w_id_OF_warehouse_key_OF_w_record.move(1);!((wrk.w_id_OF_warehouse_key_OF_w_record.compare(wrk.count_ware)>0));wrk.w_id_OF_warehouse_key_OF_w_record.add(1))
        {
            for(wrk.d_id_OF_district_key_OF_d_record.move(1);!((wrk.d_id_OF_district_key_OF_d_record.compare(wrk.dist_per_ware)>0));wrk.d_id_OF_district_key_OF_d_record.add(1))
            {
                if((_performResult=customer_OF_loadcust())>0) perform(_performResult,_customer_OF_loadcust_Label);
            } // end perform with test before/varying
        } // end perform with test before/varying
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _loadord_Label=48;
    static public final int _loadord_para_OF_loadord_Label=49;
    
    public final int loadord_para_OF_loadord()
    {
        final Wrk wrk=this.wrk;
        for(wrk.w_id_OF_warehouse_key_OF_w_record.move(1);!((wrk.w_id_OF_warehouse_key_OF_w_record.compare(wrk.count_ware)>0));wrk.w_id_OF_warehouse_key_OF_w_record.add(1))
        {
            for(wrk.d_id_OF_district_key_OF_d_record.move(1);!((wrk.d_id_OF_district_key_OF_d_record.compare(wrk.dist_per_ware)>0));wrk.d_id_OF_district_key_OF_d_record.add(1))
            {
                int _performResult=0;
                if((_performResult=orders_OF_loadord())>0) perform(_performResult,_orders_OF_loadord_Label);
            } // end perform with test before/varying
        } // end perform with test before/varying
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _stock_Label=53;
    static public final int _stock_para_OF_stock_Label=54;
    
    public final int stock_para_OF_stock()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_nbr_OF_ws_display.move(wrk.w_id_OF_warehouse_key_OF_w_record);
        boolean _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"Loading Stock Wid = ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
        int _performResult=0;
        if((_performResult=display_line_OF_stock())>0) perform(_performResult,_display_line_OF_stock_Label);
        wrk.s_w_id_OF_stock_key_OF_s_record.move(wrk.w_id_OF_warehouse_key_OF_w_record);
        for(wrk.i.move(1);!((wrk.i.compare(wrk.maxitems)>0));wrk.i.add(1))
        {
            wrk.orig_OF_filler_e___1[wrk.i.toInt()].move(_NCONSTANT_32);
        } // end perform with test before/varying
        for(wrk.i.move(1);!((wrk.i.compare( Numeric.divGiving(wrk.maxitems,_NCONSTANT_60))>0));wrk.i.add(1))
        {
            do // PERFORM WITH TEST AFTER
            {
                wrk.rand_min.move(_NCONSTANT_33);
                wrk.rand_max.move(wrk.maxitems);
                if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
                wrk.posn.move(wrk.rand_num);
            } while(!((wrk.orig_OF_filler_e___1[wrk.posn.toInt()].compare(_NCONSTANT_32)==0))); // end perform with test after
            wrk.orig_OF_filler_e___1[wrk.posn.toInt()].move(_NCONSTANT_33);
        } // end perform with test before/varying
        for(wrk.s_i_id_OF_stock_key_OF_s_record.move(1);!((wrk.s_i_id_OF_stock_key_OF_s_record.compare(wrk.maxitems)>0));wrk.s_i_id_OF_stock_key_OF_s_record.add(1))
        {
            wrk.rand_min.move(_NCONSTANT_60);
            wrk.rand_max.move(_NCONSTANT_62);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            wrk.s_quantity_OF_s_record.move(wrk.rand_num);
            wrk.str_min.move(_NCONSTANT_61);
            wrk.str_max.move(_NCONSTANT_61);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_01_OF_s_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.s_dist_01_OF_s_record.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_02_OF_s_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.s_dist_02_OF_s_record.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_03_OF_s_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.s_dist_03_OF_s_record.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_04_OF_s_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.s_dist_04_OF_s_record.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_05_OF_s_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.s_dist_05_OF_s_record.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_06_OF_s_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.s_dist_06_OF_s_record.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_07_OF_s_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.s_dist_07_OF_s_record.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_08_OF_s_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.s_dist_08_OF_s_record.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_09_OF_s_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.s_dist_09_OF_s_record.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_dist_10_OF_s_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.s_dist_10_OF_s_record.lengthForLengthOfSyntax()).toInt()));
            wrk.str_min.move(_NCONSTANT_64);
            wrk.str_max.move(_NCONSTANT_65);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.s_data_OF_s_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.s_data_OF_s_record.lengthForLengthOfSyntax()).toInt()));
            wrk.sdatasiz.move(wrk.str_len);
            if((wrk.orig_OF_filler_e___1[wrk.s_i_id_OF_stock_key_OF_s_record.toInt()].compare(_NCONSTANT_32)!=0))
            {
                wrk.rand_min.move(_NCONSTANT_33);
                _sizeError=false;
                _sizeError|=wrk.rand_max.moveSE( wrk.sdatasiz.toBignum().subtract(_BCONSTANT_3)).isSizeError();
                if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
                wrk.posn.move(wrk.rand_num);
                wrk.s_data_OF_s_record.ref(wrk.posn.toInt(),_NCONSTANT_45.toInt()).move("original");
            }
            wrk.s_ytd_OF_s_record.move(_NCONSTANT_32);
            wrk.s_order_cnt_OF_s_record.move(_NCONSTANT_32);
            wrk.s_remote_cnt_OF_s_record.move(_NCONSTANT_32);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0204);
                final Object[] _transactionParameters=new Object[] {null,new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label),null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                if(_executeInterfaceProgram!=null) _executeInterfaceProgram.handleCondition(_transenv,_TAGCONSTANT_3,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                _context.registerHandler("ERROR",new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("HANDLE CONDITION",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0204));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("HANDLE CONDITION",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.cicserr_msg_last_OF_cicserr_msg.move("Stock: WRITE FILE(STOCK)");
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0604);
                final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"STOCK",wrk.s_record,wrk.stock_key_OF_s_record,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("WRITE",_TAGCONSTANT_4,_transactionParameters);
                _fileControl.write(_transenv,_TAGCONSTANT_4,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("WRITE",_TAGCONSTANT_4,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITE",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0604));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITE",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.write_stock_ct.add(1);
            
            _sizeError=!_context.syserr().display(_context,wrk.cicserr_msg.toText()+(String)" EIBRESP="+lnk.eibresp_OF_dfheiblk.toText()+(String)". write-stock-ct="+wrk.write_stock_ct.toText());
            if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_32)!=0))
            {
                _sizeError=false;
                _defaultPointerIndex.move(1);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"SID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.s_i_id_OF_stock_key_OF_s_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", WID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.s_w_id_OF_stock_key_OF_s_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Quan = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.s_quantity_OF_s_record,_defaultPointerIndex);
                if((_performResult=display_line_OF_stock())>0) perform(_performResult,_display_line_OF_stock_Label);
            }
            if((Intrinsic.mod(wrk.s_i_id_OF_stock_key_OF_s_record,_NCONSTANT_66).compare(_NCONSTANT_32)==0))
            {
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x1602);
                    final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    _context.getSqlContext().getCursors().closeAllNotHeld();
                    _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                if(!(lnk.option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea.isTrue()))
                {
                    _sizeError=!_context.defaultio().displayNoAdvancing(_context,(String)".");
                    if((Intrinsic.mod(wrk.s_i_id_OF_stock_key_OF_s_record,_NCONSTANT_67).compare(_NCONSTANT_32)==0))
                    {
                        _sizeError=!_context.defaultio().display(_context,(String)" "+wrk.s_i_id_OF_stock_key_OF_s_record.toText());
                    }
                }
                else
                {
                    if((_performResult=display_dot_OF_stock())>0) perform(_performResult,_display_dot_OF_stock_Label);
                    if((Intrinsic.mod(wrk.s_i_id_OF_stock_key_OF_s_record,_NCONSTANT_67).compare(_NCONSTANT_32)==0))
                    {
                        wrk.ws_num_OF_ws_display.move(wrk.s_i_id_OF_stock_key_OF_s_record);
                        if((_performResult=display_number_OF_stock())>0) perform(_performResult,_display_number_OF_stock_Label);
                    }
                }
            }
        } // end perform with test before/varying
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_display_line_OF_ws_display.move("Stock Done.");
        if((_performResult=display_line_OF_stock())>0) perform(_performResult,_display_line_OF_stock_Label);
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _district_Label=59;
    static public final int _district_para_OF_district_Label=60;
    
    public final int district_para_OF_district()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_line_OF_ws_display.move("Loading District");
        int _performResult=0;
        if((_performResult=display_line_OF_district())>0) perform(_performResult,_display_line_OF_district_Label);
        wrk.d_w_id_OF_district_key_OF_d_record.move(wrk.w_id_OF_warehouse_key_OF_w_record);
        wrk.d_ytd_OF_d_record.move(_NCONSTANT_71);
        wrk.d_next_o_id_OF_d_record.move(_NCONSTANT_72);
        for(wrk.d_id_OF_district_key_OF_d_record.move(1);!((wrk.d_id_OF_district_key_OF_d_record.compare(wrk.dist_per_ware)>0));wrk.d_id_OF_district_key_OF_d_record.add(1))
        {
            wrk.str_min.move(_NCONSTANT_68);
            wrk.str_max.move(_NCONSTANT_60);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.d_name_OF_d_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.d_name_OF_d_record.lengthForLengthOfSyntax()).toInt()));
            if((_performResult=makeaddress_OF_district())>0) perform(_performResult,_makeaddress_OF_district_Label);
            wrk.d_street_1_OF_d_record.move(wrk.adr_str1);
            wrk.d_street_2_OF_d_record.move(wrk.adr_str2);
            wrk.d_city_OF_d_record.move(wrk.adr_city);
            wrk.d_state_OF_d_record.move(wrk.adr_state);
            wrk.d_zip_OF_d_record.move(wrk.adr_zip);
            wrk.rand_min.move(_NCONSTANT_60);
            wrk.rand_max.move(_NCONSTANT_69);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            boolean _sizeError=false;
            Bignum _computeExpression0=_BCONSTANT_17;
            if(_computeExpression0.isZero())
                _sizeError=true;
            else
            {
                _sizeError|=wrk.d_tax_OF_d_record.moveSE( wrk.rand_num.toBignum().divide(_computeExpression0)).isSizeError();
            }
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0204);
                final Object[] _transactionParameters=new Object[] {null,new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label),null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                if(_executeInterfaceProgram!=null) _executeInterfaceProgram.handleCondition(_transenv,_TAGCONSTANT_3,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                _context.registerHandler("ERROR",new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("HANDLE CONDITION",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0204));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("HANDLE CONDITION",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.cicserr_msg_last_OF_cicserr_msg.move("District: WRITE FILE(DISTRICT)");
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0604);
                final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"DISTRICT",wrk.d_record,wrk.district_key_OF_d_record,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("WRITE",_TAGCONSTANT_4,_transactionParameters);
                _fileControl.write(_transenv,_TAGCONSTANT_4,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("WRITE",_TAGCONSTANT_4,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITE",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0604));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITE",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.write_district_ct.add(1);
            
            _sizeError=!_context.syserr().display(_context,wrk.cicserr_msg.toText()+(String)" EIBRESP="+lnk.eibresp_OF_dfheiblk.toText()+(String)". write-district-ct="+wrk.write_district_ct.toText());
            if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_32)!=0))
            {
                wrk.ws_d_tax_OF_ws_display.move(wrk.d_tax_OF_d_record);
                _sizeError=false;
                Index _defaultPointerIndex=new Index(1);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"DID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.d_id_OF_district_key_OF_d_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", WID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.d_w_id_OF_district_key_OF_d_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Name = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.d_name_OF_d_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", Tax = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_d_tax_OF_ws_display,_defaultPointerIndex);
                if((_performResult=display_line_OF_district())>0) perform(_performResult,_display_line_OF_district_Label);
            }
        } // end perform with test before/varying
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _customer_Label=64;
    static public final int _customer_para_OF_customer_Label=65;
    
    public final int customer_para_OF_customer()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_nbr_OF_ws_display.move(wrk.d_id_OF_district_key_OF_d_record);
        wrk.ws_display_nb2_OF_ws_display.move(wrk.w_id_OF_warehouse_key_OF_w_record);
        boolean _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"Loading Customer for D= ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", WID = ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nb2_OF_ws_display,_defaultPointerIndex);
        int _performResult=0;
        if((_performResult=display_line_OF_customer())>0) perform(_performResult,_display_line_OF_customer_Label);
        for(wrk.c_id_OF_customer_key_OF_c_record.move(1);!((wrk.c_id_OF_customer_key_OF_c_record.compare(wrk.cust_per_dist)>0));wrk.c_id_OF_customer_key_OF_c_record.add(1))
        {
            wrk.c_d_id_OF_customer_key_OF_c_record.move(wrk.d_id_OF_district_key_OF_d_record);
            wrk.c_w_id_OF_customer_key_OF_c_record.move(wrk.w_id_OF_warehouse_key_OF_w_record);
            wrk.str_min.move(_NCONSTANT_45);
            wrk.str_max.move(_NCONSTANT_40);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.c_first_OF_customer_alt_key_OF_c_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.c_first_OF_customer_alt_key_OF_c_record.lengthForLengthOfSyntax()).toInt()));
            wrk.c_middle_OF_c_record.move("OE");
            if((wrk.c_id_OF_customer_key_OF_c_record.compare(_NCONSTANT_66)<=0))
            {
                _sizeError=false;
                _sizeError|=wrk.name_num.moveSE(wrk.c_id_OF_customer_key_OF_c_record.toBignum()).isSizeError();
                if((_performResult=lastname_OF_customer())>0) perform(_performResult,_lastname_OF_customer_Label);
                wrk.c_last_OF_customer_generic_name_OF_customer_alt_key_OF_c_record.move(wrk.name_res);
            }
            else
            {
                wrk.rand_min.move(wrk.name_min);
                wrk.rand_max.move(wrk.name_max);
                wrk.a.move(wrk.name_a);
                wrk.c.move(wrk.name_c);
                if((_performResult=nurand())>0) perform(_performResult,_nurand_Label);
                wrk.name_num.move(wrk.rand_num);
                if((_performResult=lastname_OF_customer())>0) perform(_performResult,_lastname_OF_customer_Label);
                wrk.c_last_OF_customer_generic_name_OF_customer_alt_key_OF_c_record.move(wrk.name_res);
            }
            if((_performResult=makeaddress_OF_customer())>0) perform(_performResult,_makeaddress_OF_customer_Label);
            wrk.c_street_1_OF_c_record.move(wrk.adr_str1);
            wrk.c_street_2_OF_c_record.move(wrk.adr_str2);
            wrk.c_city_OF_c_record.move(wrk.adr_city);
            wrk.c_state_OF_c_record.move(wrk.adr_state);
            wrk.c_zip_OF_c_record.move(wrk.adr_zip);
            wrk.str_min.move(_NCONSTANT_40);
            wrk.str_max.move(_NCONSTANT_40);
            if((_performResult=makenumberstring())>0) perform(_performResult,_makenumberstring_Label);
            wrk.c_phone_OF_c_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.c_phone_OF_c_record.lengthForLengthOfSyntax()).toInt()));
            wrk.rand_min.move(_NCONSTANT_32);
            wrk.rand_max.move(_NCONSTANT_33);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            if((wrk.rand_num.compare(_NCONSTANT_32)!=0))
            {
                wrk.c_credit_OF_c_record.move("GC");
            }
            else
            {
                wrk.c_credit_OF_c_record.move("BC");
            }
            wrk.c_credit_lim_OF_c_record.move(_NCONSTANT_73);
            wrk.rand_min.move(_NCONSTANT_32);
            wrk.rand_max.move(_NCONSTANT_65);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            _sizeError=false;
            Bignum _computeExpression0=_BCONSTANT_17;
            if(_computeExpression0.isZero())
                _sizeError=true;
            else
            {
                _sizeError|=wrk.c_discount_OF_c_record.moveSE( wrk.rand_num.toBignum().divide(_computeExpression0)).isSizeError();
            }
            wrk.c_balance_OF_c_record.move(_NCONSTANT_74);
            wrk.str_min.move(_NCONSTANT_75);
            wrk.str_max.move(_NCONSTANT_76);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.c_data_OF_c_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.c_data_OF_c_record.lengthForLengthOfSyntax()).toInt()));
            wrk.c_since_OF_c_record.move(wrk.tstamp);
            wrk.c_ytd_payment_OF_c_record.move(_NCONSTANT_77);
            wrk.c_payment_cnt_OF_c_record.move(_NCONSTANT_33);
            wrk.c_delivery_cnt_OF_c_record.move(_NCONSTANT_32);
            wrk.c_d_id2_OF_customer_generic_name_OF_customer_alt_key_OF_c_record.move(wrk.c_d_id_OF_customer_key_OF_c_record);
            wrk.c_w_id2_OF_customer_generic_name_OF_customer_alt_key_OF_c_record.move(wrk.c_w_id_OF_customer_key_OF_c_record);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0204);
                final Object[] _transactionParameters=new Object[] {null,new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label),null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                if(_executeInterfaceProgram!=null) _executeInterfaceProgram.handleCondition(_transenv,_TAGCONSTANT_3,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                _context.registerHandler("ERROR",new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("HANDLE CONDITION",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0204));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("HANDLE CONDITION",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.cicserr_msg_last_OF_cicserr_msg.move("Customer: WRITE FILE(CUSTOMER)");
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0604);
                final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"CUSTOMER",wrk.c_record,wrk.customer_key_OF_c_record,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("WRITE",_TAGCONSTANT_4,_transactionParameters);
                _fileControl.write(_transenv,_TAGCONSTANT_4,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("WRITE",_TAGCONSTANT_4,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITE",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0604));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITE",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.write_customer_ct.add(1);
            
            _sizeError=!_context.syserr().display(_context,wrk.cicserr_msg.toText()+(String)" EIBRESP="+lnk.eibresp_OF_dfheiblk.toText()+(String)". write-customer-ct="+wrk.write_customer_ct.toText());
            wrk.h_amount_OF_history_key_OF_h_record.move(_NCONSTANT_77);
            wrk.str_min.move(_NCONSTANT_78);
            wrk.str_max.move(_NCONSTANT_61);
            if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
            wrk.h_data_OF_history_key_OF_h_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.h_data_OF_history_key_OF_h_record.lengthForLengthOfSyntax()).toInt()));
            wrk.h_c_id_OF_history_key_OF_h_record.move(wrk.c_id_OF_customer_key_OF_c_record);
            wrk.h_c_d_id_OF_history_key_OF_h_record.move(wrk.c_d_id_OF_customer_key_OF_c_record);
            wrk.h_c_w_id_OF_history_key_OF_h_record.move(wrk.c_w_id_OF_customer_key_OF_c_record);
            wrk.h_w_id_OF_history_key_OF_h_record.move(wrk.c_w_id_OF_customer_key_OF_c_record);
            wrk.h_d_id_OF_history_key_OF_h_record.move(wrk.c_d_id_OF_customer_key_OF_c_record);
            wrk.h_date_OF_history_key_OF_h_record.move(wrk.tstamp);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0204);
                final Object[] _transactionParameters=new Object[] {null,new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label),null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                if(_executeInterfaceProgram!=null) _executeInterfaceProgram.handleCondition(_transenv,_TAGCONSTANT_3,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                _context.registerHandler("ERROR",new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("HANDLE CONDITION",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0204));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("HANDLE CONDITION",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.cicserr_msg_last_OF_cicserr_msg.move("Customer: WRITE FILE(HISTORY)");
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0604);
                final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"HISTORY",wrk.h_record,wrk.history_key_OF_h_record,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("WRITE",_TAGCONSTANT_4,_transactionParameters);
                _fileControl.write(_transenv,_TAGCONSTANT_4,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("WRITE",_TAGCONSTANT_4,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITE",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0604));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITE",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
            wrk.write_history_ct.add(1);
            
            _sizeError=!_context.syserr().display(_context,wrk.cicserr_msg.toText()+(String)" EIBRESP="+lnk.eibresp_OF_dfheiblk.toText()+(String)". write-history-ct="+wrk.write_history_ct.toText());
            if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_32)!=0))
            {
                _sizeError=false;
                _defaultPointerIndex.move(1);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"CID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.c_id_OF_customer_key_OF_c_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", LST = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.c_last_OF_customer_generic_name_OF_customer_alt_key_OF_c_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", P# = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.c_phone_OF_c_record,_defaultPointerIndex);
                if((_performResult=display_line_OF_customer())>0) perform(_performResult,_display_line_OF_customer_Label);
            }
            if((Intrinsic.mod(wrk.c_id_OF_customer_key_OF_c_record,_NCONSTANT_66).compare(_NCONSTANT_32)==0))
            {
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x1602);
                    final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    _context.getSqlContext().getCursors().closeAllNotHeld();
                    _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                if(!(lnk.option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea.isTrue()))
                {
                    _sizeError=!_context.defaultio().displayNoAdvancing(_context,(String)".");
                    if((Intrinsic.mod(wrk.c_id_OF_customer_key_OF_c_record,_NCONSTANT_66).compare(_NCONSTANT_32)==0))
                    {
                        _sizeError=!_context.defaultio().display(_context,(String)" "+wrk.c_id_OF_customer_key_OF_c_record.toText());
                    }
                }
                else
                {
                    if((_performResult=display_dot_OF_customer())>0) perform(_performResult,_display_dot_OF_customer_Label);
                    if((Intrinsic.mod(wrk.c_id_OF_customer_key_OF_c_record,_NCONSTANT_67).compare(_NCONSTANT_32)==0))
                    {
                        wrk.ws_num_OF_ws_display.move(wrk.c_id_OF_customer_key_OF_c_record);
                        if((_performResult=display_number_OF_customer())>0) perform(_performResult,_display_number_OF_customer_Label);
                    }
                }
            }
        } // end perform with test before/varying
        wrk.ws_display_line_OF_ws_display.move("Customer Done.");
        if((_performResult=display_line_OF_customer())>0) perform(_performResult,_display_line_OF_customer_Label);
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _orders_Label=73;
    static public final int _orders_para_OF_orders_Label=74;
    
    public final int orders_para_OF_orders()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_nbr_OF_ws_display.move(wrk.c_id_OF_customer_key_OF_c_record);
        wrk.ws_display_nbr_OF_ws_display.move(wrk.d_id_OF_district_key_OF_d_record);
        wrk.ws_display_nb2_OF_ws_display.move(wrk.w_id_OF_warehouse_key_OF_w_record);
        boolean _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"Loading Orders for D = ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nbr_OF_ws_display,_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", W = ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_display_nb2_OF_ws_display,_defaultPointerIndex);
        int _performResult=0;
        if((_performResult=display_line_OF_orders())>0) perform(_performResult,_display_line_OF_orders_Label);
        wrk.o_d_id_OF_order_key_OF_o_record.move(wrk.d_id_OF_district_key_OF_d_record);
        wrk.o_w_id_OF_order_key_OF_o_record.move(wrk.w_id_OF_warehouse_key_OF_w_record);
        for(wrk.i.move(1);!((wrk.i.compare(wrk.ord_per_dist)>0));wrk.i.add(1))
        {
            wrk.cust_perm_OF_filler_d___1[wrk.i.toInt()].move(wrk.i);
        } // end perform with test before/varying
        for(wrk.i.move(1);!((wrk.i.compare(wrk.ord_per_dist)>0));wrk.i.add(1))
        {
            wrk.rand_min.move(wrk.i);
            wrk.rand_max.move(wrk.ord_per_dist);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            wrk.cust_temp.move(wrk.cust_perm_OF_filler_d___1[wrk.i.toInt()]);
            wrk.cust_perm_OF_filler_d___1[wrk.i.toInt()].move(wrk.cust_perm_OF_filler_d___1[wrk.rand_num.toInt()]);
            wrk.cust_perm_OF_filler_d___1[wrk.rand_num.toInt()].move(wrk.cust_temp);
        } // end perform with test before/varying
        for(wrk.o_id_OF_order_key_OF_o_record.move(1);!((wrk.o_id_OF_order_key_OF_o_record.compare(wrk.ord_per_dist)>0));wrk.o_id_OF_order_key_OF_o_record.add(1))
        {
            wrk.o_c_id_OF_order_alt_key_OF_o_record.move(wrk.cust_perm_OF_filler_d___1[wrk.o_id_OF_order_key_OF_o_record.toInt()]);
            wrk.rand_min.move(_NCONSTANT_33);
            wrk.rand_max.move(_NCONSTANT_60);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            wrk.o_carrier_id_OF_o_record.move(wrk.rand_num);
            wrk.rand_min.move(_NCONSTANT_35);
            wrk.rand_max.move(_NCONSTANT_79);
            if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
            wrk.o_ol_cnt_OF_o_record.move(wrk.rand_num);
            if((wrk.o_id_OF_order_key_OF_o_record.compare(wrk.undel_ord_base)>0))
            {
                wrk.o_entry_d_OF_o_record.move(wrk.tstamp);
                wrk.o_carrier_id_OF_o_record.move(_NCONSTANT_32);
                wrk.o_all_local_OF_o_record.move(_NCONSTANT_33);
                wrk.o_w_id2_OF_order_alt_key_OF_o_record.move(wrk.o_w_id_OF_order_key_OF_o_record);
                wrk.o_d_id2_OF_order_alt_key_OF_o_record.move(wrk.o_d_id_OF_order_key_OF_o_record);
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x0204);
                    final Object[] _transactionParameters=new Object[] {null,new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label),null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                    if(_executeInterfaceProgram!=null) _executeInterfaceProgram.handleCondition(_transenv,_TAGCONSTANT_3,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                    _context.registerHandler("ERROR",new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("HANDLE CONDITION",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0204));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("HANDLE CONDITION",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                wrk.cicserr_msg_last_OF_cicserr_msg.move("Orders: WRITE FILE(ORD)");
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x0604);
                    final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"ORD",wrk.o_record,wrk.order_key_OF_o_record,null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("WRITE",_TAGCONSTANT_4,_transactionParameters);
                    _fileControl.write(_transenv,_TAGCONSTANT_4,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("WRITE",_TAGCONSTANT_4,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("WRITE",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0604));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("WRITE",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                wrk.write_ord_ct.add(1);
                
                _sizeError=!_context.syserr().display(_context,wrk.cicserr_msg.toText()+(String)" EIBRESP="+lnk.eibresp_OF_dfheiblk.toText()+(String)". write-ord-ct="+wrk.write_ord_ct.toText());
                wrk.no_o_id_OF_new_order_key_OF_no_record.move(wrk.o_id_OF_order_key_OF_o_record);
                wrk.no_d_id_OF_new_order_key_OF_no_record.move(wrk.o_d_id_OF_order_key_OF_o_record);
                wrk.no_w_id_OF_new_order_key_OF_no_record.move(wrk.o_w_id_OF_order_key_OF_o_record);
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x0204);
                    final Object[] _transactionParameters=new Object[] {null,new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label),null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                    if(_executeInterfaceProgram!=null) _executeInterfaceProgram.handleCondition(_transenv,_TAGCONSTANT_3,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                    _context.registerHandler("ERROR",new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("HANDLE CONDITION",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0204));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("HANDLE CONDITION",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                wrk.cicserr_msg_last_OF_cicserr_msg.move("Orders: WRITE FILE(NEWORD)");
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x0604);
                    final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"NEWORD",wrk.no_record,wrk.new_order_key_OF_no_record,null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("WRITE",_TAGCONSTANT_4,_transactionParameters);
                    _fileControl.write(_transenv,_TAGCONSTANT_4,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("WRITE",_TAGCONSTANT_4,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("WRITE",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0604));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("WRITE",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                wrk.write_neword_ct.add(1);
                
                _sizeError=!_context.syserr().display(_context,wrk.cicserr_msg.toText()+(String)" EIBRESP="+lnk.eibresp_OF_dfheiblk.toText()+(String)". write-neword-ct="+wrk.write_neword_ct.toText());
            }
            else
            {
                wrk.o_entry_d_OF_o_record.move(wrk.tstamp);
                wrk.o_all_local_OF_o_record.move(_NCONSTANT_33);
                wrk.o_w_id2_OF_order_alt_key_OF_o_record.move(wrk.o_w_id_OF_order_key_OF_o_record);
                wrk.o_d_id2_OF_order_alt_key_OF_o_record.move(wrk.o_d_id_OF_order_key_OF_o_record);
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x0204);
                    final Object[] _transactionParameters=new Object[] {null,new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label),null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                    if(_executeInterfaceProgram!=null) _executeInterfaceProgram.handleCondition(_transenv,_TAGCONSTANT_3,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                    _context.registerHandler("ERROR",new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("HANDLE CONDITION",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0204));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("HANDLE CONDITION",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                wrk.cicserr_msg_last_OF_cicserr_msg.move("Orders: 2md WRITE FILE(ORD)");
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x0604);
                    final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"ORD",wrk.o_record,wrk.order_key_OF_o_record,null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("WRITE",_TAGCONSTANT_4,_transactionParameters);
                    _fileControl.write(_transenv,_TAGCONSTANT_4,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("WRITE",_TAGCONSTANT_4,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("WRITE",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0604));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("WRITE",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                wrk.write_ord_ct.add(1);
                
                _sizeError=!_context.syserr().display(_context,wrk.cicserr_msg.toText()+(String)" EIBRESP="+lnk.eibresp_OF_dfheiblk.toText()+(String)". write-ord-ct="+wrk.write_ord_ct.toText());
            }
            if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_32)!=0))
            {
                _sizeError=false;
                _defaultPointerIndex.move(1);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"OID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.o_id_OF_order_key_OF_o_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", CID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.o_c_id_OF_order_alt_key_OF_o_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", DID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.o_d_id_OF_order_key_OF_o_record,_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", WID = ",_defaultPointerIndex);
                _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.o_w_id_OF_order_key_OF_o_record,_defaultPointerIndex);
                if((_performResult=display_line_OF_orders())>0) perform(_performResult,_display_line_OF_orders_Label);
            }
            for(wrk.ol_number_OF_order_line_key_OF_ol_record.move(1);!((wrk.ol_number_OF_order_line_key_OF_ol_record.compare(wrk.o_ol_cnt_OF_o_record)>0));wrk.ol_number_OF_order_line_key_OF_ol_record.add(1))
            {
                wrk.rand_min.move(_NCONSTANT_33);
                wrk.rand_max.move(wrk.maxitems);
                if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
                wrk.ol_i_id_OF_ol_record.move(wrk.rand_num);
                wrk.ol_supply_w_id_OF_ol_record.move(wrk.o_w_id_OF_order_key_OF_o_record);
                wrk.ol_quantity_OF_ol_record.move(_NCONSTANT_35);
                wrk.ol_o_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.move(wrk.o_id_OF_order_key_OF_o_record);
                wrk.ol_d_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.move(wrk.o_d_id_OF_order_key_OF_o_record);
                wrk.ol_w_id_OF_order_line_alt_key_OF_order_line_key_OF_ol_record.move(wrk.o_w_id_OF_order_key_OF_o_record);
                wrk.ol_supply_w_id_OF_ol_record.move(wrk.o_w_id_OF_order_key_OF_o_record);
                wrk.str_min.move(_NCONSTANT_61);
                wrk.str_max.move(_NCONSTANT_61);
                if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
                wrk.ol_dist_info_OF_ol_record.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.ol_dist_info_OF_ol_record.lengthForLengthOfSyntax()).toInt()));
                if((wrk.o_id_OF_order_key_OF_o_record.compare(wrk.undel_ord_base)>0))
                {
                    wrk.rand_min.move(_NCONSTANT_60);
                    wrk.rand_max.move(_NCONSTANT_63);
                    if((_performResult=randomnumber())>0) perform(_performResult,_randomnumber_Label);
                    _sizeError=false;
                    Bignum _computeExpression0=_BCONSTANT_18;
                    if(_computeExpression0.isZero())
                        _sizeError=true;
                    else
                    {
                        _sizeError|=wrk.ol_amount_OF_ol_record.moveSE( wrk.rand_num.toBignum().divide(_computeExpression0)).isSizeError();
                    }
                    wrk.ol_delivery_d_OF_ol_record.moveSpaces();
                    try
                    {
                        lnk.eibfn_OF_dfheiblk.move(0x0204);
                        final Object[] _transactionParameters=new Object[] {null,new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label),null};
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.traceEntry("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                        if(_executeInterfaceProgram!=null) _executeInterfaceProgram.handleCondition(_transenv,_TAGCONSTANT_3,_transactionParameters);
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.traceExit("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                        lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                        lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                        lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                        lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                        _context.registerHandler("ERROR",new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label));
                    }
                    catch(UnwindException _unwindException)
                    {
                        return _unwindException.unwind(_context,this);
                    }
                    catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                    {
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.trace("HANDLE CONDITION",_transactionException);
                        lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0204));
                        lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                        lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                        lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                        lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                        int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                        if(_transactionPerform!=0) return _transactionPerform;
                    }
                    catch(java.lang.Throwable _transactionGeneralException)
                    {
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.trace("HANDLE CONDITION",_transactionGeneralException);
                        lnk.eibresp_OF_dfheiblk.move(-1);
                        lnk.eibresp2_OF_dfheiblk.move(0);
                        int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                        if(_transactionPerform!=0) return _transactionPerform;
                    }
                    wrk.cicserr_msg_last_OF_cicserr_msg.move("Orders: WRITE FILE(ORDLINE)");
                    try
                    {
                        lnk.eibfn_OF_dfheiblk.move(0x0604);
                        final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"ORDLINE",wrk.ol_record,wrk.order_line_key_OF_ol_record,null};
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.traceEntry("WRITE",_TAGCONSTANT_4,_transactionParameters);
                        _fileControl.write(_transenv,_TAGCONSTANT_4,_transactionParameters);
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.traceExit("WRITE",_TAGCONSTANT_4,_transactionParameters);
                        lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                        lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                        lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                        lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                    }
                    catch(UnwindException _unwindException)
                    {
                        return _unwindException.unwind(_context,this);
                    }
                    catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                    {
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.trace("WRITE",_transactionException);
                        lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0604));
                        lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                        lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                        lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                        lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                        int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                        if(_transactionPerform!=0) return _transactionPerform;
                    }
                    catch(java.lang.Throwable _transactionGeneralException)
                    {
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.trace("WRITE",_transactionGeneralException);
                        lnk.eibresp_OF_dfheiblk.move(-1);
                        lnk.eibresp2_OF_dfheiblk.move(0);
                        int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                        if(_transactionPerform!=0) return _transactionPerform;
                    }
                    wrk.write_ordline_ct.add(1);
                    
                    _sizeError=!_context.syserr().display(_context,wrk.cicserr_msg.toText()+(String)" EIBRESP="+lnk.eibresp_OF_dfheiblk.toText()+(String)". write-ordline-ct="+wrk.write_ordline_ct.toText());
                }
                else
                {
                    wrk.ol_amount_OF_ol_record.move(_NCONSTANT_80);
                    wrk.ol_delivery_d_OF_ol_record.move(wrk.tstamp);
                    try
                    {
                        lnk.eibfn_OF_dfheiblk.move(0x0204);
                        final Object[] _transactionParameters=new Object[] {null,new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label),null};
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.traceEntry("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                        if(_executeInterfaceProgram!=null) _executeInterfaceProgram.handleCondition(_transenv,_TAGCONSTANT_3,_transactionParameters);
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.traceExit("HANDLE CONDITION",_TAGCONSTANT_3,_transactionParameters);
                        lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                        lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                        lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                        lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                        _context.registerHandler("ERROR",new ProcedurePointer(this,_context,_cicserror_OF_loaditems_Label));
                    }
                    catch(UnwindException _unwindException)
                    {
                        return _unwindException.unwind(_context,this);
                    }
                    catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                    {
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.trace("HANDLE CONDITION",_transactionException);
                        lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0204));
                        lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                        lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                        lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                        lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                        int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                        if(_transactionPerform!=0) return _transactionPerform;
                    }
                    catch(java.lang.Throwable _transactionGeneralException)
                    {
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.trace("HANDLE CONDITION",_transactionGeneralException);
                        lnk.eibresp_OF_dfheiblk.move(-1);
                        lnk.eibresp2_OF_dfheiblk.move(0);
                        int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                        if(_transactionPerform!=0) return _transactionPerform;
                    }
                    wrk.cicserr_msg_last_OF_cicserr_msg.move("Orders: 2nd WRITE FILE(ORDLINE)");
                    try
                    {
                        lnk.eibfn_OF_dfheiblk.move(0x0604);
                        final Object[] _transactionParameters=new Object[] {lnk.eibds_OF_dfheiblk,"ORDLINE",wrk.ol_record,wrk.order_line_key_OF_ol_record,null};
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.traceEntry("WRITE",_TAGCONSTANT_4,_transactionParameters);
                        _fileControl.write(_transenv,_TAGCONSTANT_4,_transactionParameters);
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.traceExit("WRITE",_TAGCONSTANT_4,_transactionParameters);
                        lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                        lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                        lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                        lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                    }
                    catch(UnwindException _unwindException)
                    {
                        return _unwindException.unwind(_context,this);
                    }
                    catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                    {
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.trace("WRITE",_transactionException);
                        lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0604));
                        lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                        lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                        lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                        lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                        int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                        if(_transactionPerform!=0) return _transactionPerform;
                    }
                    catch(java.lang.Throwable _transactionGeneralException)
                    {
                        if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                            _transenv.trace("WRITE",_transactionGeneralException);
                        lnk.eibresp_OF_dfheiblk.move(-1);
                        lnk.eibresp2_OF_dfheiblk.move(0);
                        int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                        if(_transactionPerform!=0) return _transactionPerform;
                    }
                    wrk.write_ordline_ct.add(1);
                    
                    _sizeError=!_context.syserr().display(_context,wrk.cicserr_msg.toText()+(String)" EIBRESP="+lnk.eibresp_OF_dfheiblk.toText()+(String)". write-ordline-ct="+wrk.write_ordline_ct.toText());
                }
                if((lnk.option_debug_OF_option_array_OF_dfhcommarea.compare(_NCONSTANT_32)!=0))
                {
                    _sizeError=false;
                    _defaultPointerIndex.move(1);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)"OL = ",_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ol_number_OF_order_line_key_OF_ol_record,_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", IID = ",_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ol_i_id_OF_ol_record,_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", QUAN = ",_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ol_quantity_OF_ol_record,_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)", AMT = ",_defaultPointerIndex);
                    _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ol_amount_OF_ol_record,_defaultPointerIndex);
                    if((_performResult=display_line_OF_orders())>0) perform(_performResult,_display_line_OF_orders_Label);
                }
            } // end perform with test before/varying
            if((Intrinsic.mod(wrk.o_id_OF_order_key_OF_o_record,_NCONSTANT_62).compare(_NCONSTANT_32)==0))
            {
                try
                {
                    lnk.eibfn_OF_dfheiblk.move(0x1602);
                    final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    _context.getSqlContext().getCursors().closeAllNotHeld();
                    _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
                    lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                    lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                    lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
                }
                catch(UnwindException _unwindException)
                {
                    return _unwindException.unwind(_context,this);
                }
                catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionException);
                    lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
                    lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                    lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                    lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                    lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                    int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                catch(java.lang.Throwable _transactionGeneralException)
                {
                    if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                        _transenv.trace("SYNCPOINT",_transactionGeneralException);
                    lnk.eibresp_OF_dfheiblk.move(-1);
                    lnk.eibresp2_OF_dfheiblk.move(0);
                    int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                    if(_transactionPerform!=0) return _transactionPerform;
                }
                if(!(lnk.option_return_display_88_OF_option_display_OF_option_array_OF_dfhcommarea.isTrue()))
                {
                    if((Intrinsic.mod(wrk.o_id_OF_order_key_OF_o_record,_NCONSTANT_62).compare(_NCONSTANT_32)==0))
                    {
                        _sizeError=!_context.defaultio().displayNoAdvancing(_context,(String)".");
                    }
                    if((Intrinsic.mod(wrk.o_id_OF_order_key_OF_o_record,_NCONSTANT_66).compare(_NCONSTANT_32)==0))
                    {
                        _sizeError=!_context.defaultio().display(_context,(String)" "+wrk.o_id_OF_order_key_OF_o_record.toText());
                    }
                }
                else
                {
                    if((_performResult=display_dot_OF_orders())>0) perform(_performResult,_display_dot_OF_orders_Label);
                    if((Intrinsic.mod(wrk.o_id_OF_order_key_OF_o_record,_NCONSTANT_76).compare(_NCONSTANT_32)==0))
                    {
                        wrk.ws_num_OF_ws_display.move(wrk.o_id_OF_order_key_OF_o_record);
                        if((_performResult=display_number_OF_orders())>0) perform(_performResult,_display_number_OF_orders_Label);
                    }
                }
            }
        } // end perform with test before/varying
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_1,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_1,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_display_line_OF_ws_display.move("Orders Done.");
        if((_performResult=display_line_OF_orders())>0) perform(_performResult,_display_line_OF_orders_Label);
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _makeaddress_Label=79;
    static public final int _makeaddress_para_OF_makeaddress_Label=80;
    
    public final int makeaddress_para_OF_makeaddress()
    {
        final Wrk wrk=this.wrk;
        wrk.str_min.move(_NCONSTANT_60);
        wrk.str_max.move(_NCONSTANT_69);
        int _performResult=0;
        if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
        wrk.adr_str1.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.adr_str1.lengthForLengthOfSyntax()).toInt()));
        if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
        wrk.adr_str2.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.adr_str2.lengthForLengthOfSyntax()).toInt()));
        if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
        wrk.adr_city.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.adr_city.lengthForLengthOfSyntax()).toInt()));
        wrk.str_min.move(_NCONSTANT_36);
        wrk.str_max.move(_NCONSTANT_36);
        if((_performResult=makealphastring())>0) perform(_performResult,_makealphastring_Label);
        wrk.adr_state.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.adr_state.lengthForLengthOfSyntax()).toInt()));
        wrk.str_min.move(_NCONSTANT_59);
        wrk.str_max.move(_NCONSTANT_59);
        if((_performResult=makenumberstring())>0) perform(_performResult,_makenumberstring_Label);
        wrk.adr_zip.move(wrk.str_val.ref(_NCONSTANT_33.toInt(),new Numeric( wrk.adr_zip.lengthForLengthOfSyntax()).toInt()));
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _lastname_Label=82;
    static public final int _lastname_para_OF_lastname_Label=83;
    
    public final int lastname_para_OF_lastname()
    {
        final Wrk wrk=this.wrk;
        wrk.name_res.moveSpaces();
        boolean _sizeError=false;
        _sizeError|=wrk.sub1.moveSE( Intrinsic.mod((Intrinsic.integer( Numeric.divGiving(wrk.name_num,_NCONSTANT_62))),_NCONSTANT_60).toBignum().add(_BCONSTANT_0)).isSizeError();
        _sizeError=false;
        _sizeError|=wrk.sub2.moveSE( Intrinsic.mod((Intrinsic.integer( Numeric.divGiving(wrk.name_num,_NCONSTANT_60))),_NCONSTANT_60).toBignum().add(_BCONSTANT_0)).isSizeError();
        _sizeError=false;
        _sizeError|=wrk.sub3.moveSE( Intrinsic.mod((Intrinsic.integer( Numeric.divGiving(wrk.name_num,_NCONSTANT_33))),_NCONSTANT_60).toBignum().add(_BCONSTANT_0)).isSizeError();
        _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=wrk.name_res.string(wrk.n_OF_filler_2___1[wrk.sub1.toInt()],Variable.SPACES_STRING,_defaultPointerIndex);
        _sizeError|=wrk.name_res.string(wrk.n_OF_filler_2___1[wrk.sub2.toInt()],Variable.SPACES_STRING,_defaultPointerIndex);
        _sizeError|=wrk.name_res.string(wrk.n_OF_filler_2___1[wrk.sub3.toInt()],Variable.SPACES_STRING,_defaultPointerIndex);
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _display_line_Label=85;
    static public final int _display_line_para_OF_display_line_Label=86;
    
    public final int display_line_para_OF_display_line()
    {
        final Wrk wrk=this.wrk;
        boolean _sizeError=false;
        _sizeError=!_context.syserr().display(_context,wrk.pgm.toText()+(String)"display-line: "+wrk.ws_display_line_OF_ws_display.toText()+(String)". ");
        wrk.ws_row_OF_ws_display.add(1);
        
        if((wrk.ws_row_OF_ws_display.compare(_NCONSTANT_81)>0))
        {
            wrk.ws_row_OF_ws_display.move(_NCONSTANT_32);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1812);
                final Object[] _transactionParameters=new Object[] {null,lnk.eibrsrce_OF_dfheiblk,null,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
                _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_0,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SEND CONTROL",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SEND CONTROL",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
        }
        wrk.ws_col_OF_ws_display.move(_NCONSTANT_33);
        _sizeError=false;
        _sizeError|=wrk.ws_cpos_OF_ws_display.moveSE( (wrk.ws_row_OF_ws_display.toBignum().multiply(_BCONSTANT_19)).addingWith(_BCONSTANT_0)).isSizeError();
        wrk.ws_col_OF_ws_display.move(new Numeric( wrk.ws_display_line_OF_ws_display.lengthForLengthOfSyntax()));
        while(!((wrk.ws_display_line_OF_ws_display.ref(wrk.ws_col_OF_ws_display.toInt(),_NCONSTANT_33.toInt()).compare(Variable.SPACES)!=0)))
        {
            wrk.ws_col_OF_ws_display.sub(_NCONSTANT_33);
            
        } // end perform with test before
        wrk.ws_col_OF_ws_display.add(1);
        
        _sizeError=false;
        _sizeError|=wrk.ws_cpos_OF_ws_display.moveSE( (wrk.ws_row_OF_ws_display.toBignum().multiply(_BCONSTANT_19)).addingWith(_BCONSTANT_0)).isSizeError();
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1812);
            final Object[] _transactionParameters=new Object[] {null,wrk.ws_cpos_OF_ws_display,lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_5,_transactionParameters);
            _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_5,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_5,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_cpos_OF_ws_display.add(wrk.ws_col_OF_ws_display);
        
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1806);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,wrk.ws_display_line_OF_ws_display,wrk.ws_col_OF_ws_display,null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND FROM",_TAGCONSTANT_6,_transactionParameters);
            _basicMappingSupport.sendText(_transenv,_TAGCONSTANT_6,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND FROM",_TAGCONSTANT_6,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND FROM",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1806));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND FROM",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_display_line_OF_ws_display.moveSpaces();
        wrk.ws_row_OF_ws_display.add(1);
        
        if((wrk.ws_row_OF_ws_display.compare(_NCONSTANT_81)>0))
        {
            wrk.ws_row_OF_ws_display.move(_NCONSTANT_32);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1812);
                final Object[] _transactionParameters=new Object[] {null,lnk.eibrsrce_OF_dfheiblk,null,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
                _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_0,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SEND CONTROL",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SEND CONTROL",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
        }
        wrk.ws_col_OF_ws_display.move(_NCONSTANT_33);
        _sizeError=false;
        _sizeError|=wrk.ws_cpos_OF_ws_display.moveSE( (wrk.ws_row_OF_ws_display.toBignum().multiply(_BCONSTANT_19)).addingWith(_BCONSTANT_0)).isSizeError();
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _display_dot_Label=88;
    static public final int _display_dot_para_OF_display_dot_Label=89;
    
    public final int display_dot_para_OF_display_dot()
    {
        final Wrk wrk=this.wrk;
        wrk.ws_display_line_OF_ws_display.ref(_NCONSTANT_33.toInt(),_NCONSTANT_33.toInt()).move(".");
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1812);
            final Object[] _transactionParameters=new Object[] {null,wrk.ws_cpos_OF_ws_display,lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_5,_transactionParameters);
            _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_5,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_5,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1806);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,wrk.ws_display_line_OF_ws_display,new java.lang.Integer(1),null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND FROM",_TAGCONSTANT_6,_transactionParameters);
            _basicMappingSupport.sendText(_transenv,_TAGCONSTANT_6,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND FROM",_TAGCONSTANT_6,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND FROM",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1806));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND FROM",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        boolean _sizeError=false;
        wrk.ws_cpos_OF_ws_display.add(1);
        
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _display_number_Label=91;
    static public final int _display_number_para_OF_display_number_Label=92;
    
    public final int display_number_para_OF_display_number()
    {
        final Wrk wrk=this.wrk;
        boolean _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string((String)" ",_defaultPointerIndex);
        _sizeError|=wrk.ws_display_line_OF_ws_display.string(wrk.ws_num_OF_ws_display,_defaultPointerIndex);
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1812);
            final Object[] _transactionParameters=new Object[] {null,wrk.ws_cpos_OF_ws_display,lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_5,_transactionParameters);
            _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_5,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_5,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND CONTROL",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1806);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,wrk.ws_display_line_OF_ws_display,new java.lang.Integer(11),null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SEND FROM",_TAGCONSTANT_6,_transactionParameters);
            _basicMappingSupport.sendText(_transenv,_TAGCONSTANT_6,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SEND FROM",_TAGCONSTANT_6,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND FROM",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1806));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SEND FROM",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        wrk.ws_row_OF_ws_display.add(1);
        
        if((wrk.ws_row_OF_ws_display.compare(_NCONSTANT_81)>0))
        {
            wrk.ws_row_OF_ws_display.move(_NCONSTANT_32);
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x1812);
                final Object[] _transactionParameters=new Object[] {null,lnk.eibrsrce_OF_dfheiblk,null,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
                _basicMappingSupport.sendControl(_transenv,_TAGCONSTANT_0,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("SEND CONTROL",_TAGCONSTANT_0,_transactionParameters);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SEND CONTROL",_transactionException);
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1812));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
                int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
                if(_transactionPerform!=0) return _transactionPerform;
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("SEND CONTROL",_transactionGeneralException);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
                int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
                if(_transactionPerform!=0) return _transactionPerform;
            }
        }
        wrk.ws_col_OF_ws_display.move(_NCONSTANT_33);
        _sizeError=false;
        _sizeError|=wrk.ws_cpos_OF_ws_display.moveSE( (wrk.ws_row_OF_ws_display.toBignum().multiply(_BCONSTANT_19)).addingWith(_BCONSTANT_0)).isSizeError();
        ; // exit
        return 0; // fall through
    } // End Paragraph
    
    static public final int _cicserror_Label=94;
    static public final int _defaultpara_0_OF_cicserror_Label=95;
    
    public int defaultpara_0_OF_cicserror()
    {
        wrk.cresponse.move(lnk.eibresp_OF_dfheiblk);
        wrk.cresponse2.move(lnk.eibresp2_OF_dfheiblk);
        if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_32)==0)))
        {
            wrk.err_name.move("NORMAL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_33)==0)))
        {
            wrk.err_name.move("ERROR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_36)==0)))
        {
            wrk.err_name.move("RDATT");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_38)==0)))
        {
            wrk.err_name.move("WRBRK");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_34)==0)))
        {
            wrk.err_name.move("EOF");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_35)==0)))
        {
            wrk.err_name.move("EODS");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_68)==0)))
        {
            wrk.err_name.move("EOC");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_37)==0)))
        {
            wrk.err_name.move("INBFMH");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_45)==0)))
        {
            wrk.err_name.move("ENDINPT");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_59)==0)))
        {
            wrk.err_name.move("NONVAL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_60)==0)))
        {
            wrk.err_name.move("NOSTART");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_42)==0)))
        {
            wrk.err_name.move("TERMIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_78)==0)))
        {
            wrk.err_name.move("FILENOTFOUND");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_39)==0)))
        {
            wrk.err_name.move("NOTFND");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_43)==0)))
        {
            wrk.err_name.move("DUPREC");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_79)==0)))
        {
            wrk.err_name.move("DUPKEY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_40)==0)))
        {
            wrk.err_name.move("INVREQ");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_44)==0)))
        {
            wrk.err_name.move("IOERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_82)==0)))
        {
            wrk.err_name.move("NOSPACE");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_41)==0)))
        {
            wrk.err_name.move("NOTOPEN");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_69)==0)))
        {
            wrk.err_name.move("ENDFILE");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_83)==0)))
        {
            wrk.err_name.move("ILLOGIC");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_84)==0)))
        {
            wrk.err_name.move("LENGERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_81)==0)))
        {
            wrk.err_name.move("QZERO");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_61)==0)))
        {
            wrk.err_name.move("SIGNAL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_85)==0)))
        {
            wrk.err_name.move("QBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_64)==0)))
        {
            wrk.err_name.move("ITEMERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_86)==0)))
        {
            wrk.err_name.move("PGMIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_87)==0)))
        {
            wrk.err_name.move("TRANSIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_88)==0)))
        {
            wrk.err_name.move("ENDDATA");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_89)==0)))
        {
            wrk.err_name.move("EXPIRED");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_46)==0)))
        {
            wrk.err_name.move("RETPAGE");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_90)==0)))
        {
            wrk.err_name.move("RTEFAIL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_91)==0)))
        {
            wrk.err_name.move("RTESOME");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_92)==0)))
        {
            wrk.err_name.move("TSIOERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_93)==0)))
        {
            wrk.err_name.move("MAPFAIL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_94)==0)))
        {
            wrk.err_name.move("INVERRTERM");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_95)==0)))
        {
            wrk.err_name.move("INVMPSZ");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_96)==0)))
        {
            wrk.err_name.move("IGREQID");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_97)==0)))
        {
            wrk.err_name.move("OVERFLOW");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_98)==0)))
        {
            wrk.err_name.move("INVLDC");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_99)==0)))
        {
            wrk.err_name.move("NOSTG");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_100)==0)))
        {
            wrk.err_name.move("JIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_101)==0)))
        {
            wrk.err_name.move("QIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_102)==0)))
        {
            wrk.err_name.move("NOJBUFSP");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_103)==0)))
        {
            wrk.err_name.move("DSSTAT");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_104)==0)))
        {
            wrk.err_name.move("SELNERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_105)==0)))
        {
            wrk.err_name.move("FUNCERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_106)==0)))
        {
            wrk.err_name.move("UNEXPIN");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_65)==0)))
        {
            wrk.err_name.move("NOPASSBKRD");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_107)==0)))
        {
            wrk.err_name.move("NOPASSBKWR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_108)==0)))
        {
            wrk.err_name.move("SYSIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_109)==0)))
        {
            wrk.err_name.move("ISCINVREQ");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_110)==0)))
        {
            wrk.err_name.move("ENQBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_111)==0)))
        {
            wrk.err_name.move("ENVDEFERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_112)==0)))
        {
            wrk.err_name.move("IGREQCD");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_113)==0)))
        {
            wrk.err_name.move("SESSIONERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_114)==0)))
        {
            wrk.err_name.move("SYSBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_115)==0)))
        {
            wrk.err_name.move("SESSBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_116)==0)))
        {
            wrk.err_name.move("NOTALLOC");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_117)==0)))
        {
            wrk.err_name.move("CBIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_118)==0)))
        {
            wrk.err_name.move("INVEXITREQ");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_47)==0)))
        {
            wrk.err_name.move("INVPARTNSET");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_119)==0)))
        {
            wrk.err_name.move("INVPARTN");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_120)==0)))
        {
            wrk.err_name.move("PARTNFAIL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_121)==0)))
        {
            wrk.err_name.move("USERIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_122)==0)))
        {
            wrk.err_name.move("NOTAUTH");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_123)==0)))
        {
            wrk.err_name.move("SUPPRESSED");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_124)==0)))
        {
            wrk.err_name.move("NOSPOOL");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_125)==0)))
        {
            wrk.err_name.move("TERMERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_126)==0)))
        {
            wrk.err_name.move("ROLLEDBACK");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_127)==0)))
        {
            wrk.err_name.move("END");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_128)==0)))
        {
            wrk.err_name.move("DISABLED");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_129)==0)))
        {
            wrk.err_name.move("ALLOCERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_130)==0)))
        {
            wrk.err_name.move("STRELERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_131)==0)))
        {
            wrk.err_name.move("OPENERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_132)==0)))
        {
            wrk.err_name.move("SPOLBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_133)==0)))
        {
            wrk.err_name.move("SPOLERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_134)==0)))
        {
            wrk.err_name.move("NODEIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_135)==0)))
        {
            wrk.err_name.move("TASKIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_136)==0)))
        {
            wrk.err_name.move("TCIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_137)==0)))
        {
            wrk.err_name.move("DSNNOTFOUND");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_138)==0)))
        {
            wrk.err_name.move("LOADING");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_139)==0)))
        {
            wrk.err_name.move("MODELIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_140)==0)))
        {
            wrk.err_name.move("OUTDESCRERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_141)==0)))
        {
            wrk.err_name.move("PARTNERIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_142)==0)))
        {
            wrk.err_name.move("PROFILEIDERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_143)==0)))
        {
            wrk.err_name.move("NETNAMERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_62)==0)))
        {
            wrk.err_name.move("LOCKED");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_144)==0)))
        {
            wrk.err_name.move("RECORDBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_145)==0)))
        {
            wrk.err_name.move("UOWNOTFOUND");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_146)==0)))
        {
            wrk.err_name.move("UOWLNOTFOUND");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_147)==0)))
        {
            wrk.err_name.move("LINKABEND");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_148)==0)))
        {
            wrk.err_name.move("CHANGED");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_149)==0)))
        {
            wrk.err_name.move("PROCESSBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_150)==0)))
        {
            wrk.err_name.move("ACTIVITYBUSY");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_151)==0)))
        {
            wrk.err_name.move("PROCESSERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_152)==0)))
        {
            wrk.err_name.move("ACTIVITYERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_153)==0)))
        {
            wrk.err_name.move("CONTAINERERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_154)==0)))
        {
            wrk.err_name.move("EVENTERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_155)==0)))
        {
            wrk.err_name.move("TOKENERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_156)==0)))
        {
            wrk.err_name.move("NOTFINISHED");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_157)==0)))
        {
            wrk.err_name.move("POOLERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_158)==0)))
        {
            wrk.err_name.move("TIMERERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_159)==0)))
        {
            wrk.err_name.move("SYMBOLERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_160)==0)))
        {
            wrk.err_name.move("TEMPLATERR");
        } else if(((lnk.eibresp_OF_dfheiblk.compare(_NCONSTANT_161)==0)))
        {
            wrk.err_name.move("RESUNAVAIL");
        } else 
        {
            ; // WHEN OTHER
        }
        boolean _sizeError=false;
        Index _defaultPointerIndex=new Index(1);
        _sizeError|=lnk.err_OF_common_data_OF_option_array_OF_dfhcommarea.string((String)"CICS Error - EIBRESP=",_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_option_array_OF_dfhcommarea.string(wrk.cresponse,_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_option_array_OF_dfhcommarea.string((String)" RESP2=",_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_option_array_OF_dfhcommarea.string(wrk.cresponse2,_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_option_array_OF_dfhcommarea.string((String)" RSRCE=",_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_option_array_OF_dfhcommarea.string(lnk.eibrsrce_OF_dfheiblk,_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_option_array_OF_dfhcommarea.string((String)" (",_defaultPointerIndex);
        _sizeError|=lnk.err_OF_common_data_OF_option_array_OF_dfhcommarea.string(wrk.err_name,(String)" ",_defaultPointerIndex);
        if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,2}))==0)))
        {
            wrk.err_fn.move("ADDRESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,4}))==0)))
        {
            wrk.err_fn.move("HANDLE_CONDITION");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,6}))==0)))
        {
            wrk.err_fn.move("HANDLE_AID");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,8}))==0)))
        {
            wrk.err_fn.move("ASSIGN");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,10}))==0)))
        {
            wrk.err_fn.move("IGNORE_CONDITION");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,12}))==0)))
        {
            wrk.err_fn.move("PUSH_HANDLE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,14}))==0)))
        {
            wrk.err_fn.move("POP_HANDLE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{2,16}))==0)))
        {
            wrk.err_fn.move("ADDRESS_SET");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,2}))==0)))
        {
            wrk.err_fn.move("RECEIVE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,4}))==0)))
        {
            wrk.err_fn.move("SEND");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,6}))==0)))
        {
            wrk.err_fn.move("CONVERSE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,8}))==0)))
        {
            wrk.err_fn.move("ISSUE_EODS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,10}))==0)))
        {
            wrk.err_fn.move("ISSUE_COPY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,12}))==0)))
        {
            wrk.err_fn.move("WAIT_TERMINAL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,14}))==0)))
        {
            wrk.err_fn.move("ISSUE_LOAD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,16}))==0)))
        {
            wrk.err_fn.move("WAIT_SIGNAL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,18}))==0)))
        {
            wrk.err_fn.move("ISSUE_RESET");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,20}))==0)))
        {
            wrk.err_fn.move("ISSUE_DISCONNECT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,22}))==0)))
        {
            wrk.err_fn.move("ISSUE_ENDOUTPUT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,24}))==0)))
        {
            wrk.err_fn.move("ISSUE_ERASEAUP");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,26}))==0)))
        {
            wrk.err_fn.move("ISSUE_ENDFILE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,28}))==0)))
        {
            wrk.err_fn.move("ISSUE_PRINT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,30}))==0)))
        {
            wrk.err_fn.move("ISSUE_SIGNAL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,32}))==0)))
        {
            wrk.err_fn.move("ALLOCATE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,34}))==0)))
        {
            wrk.err_fn.move("FREE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,36}))==0)))
        {
            wrk.err_fn.move("POINT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,38}))==0)))
        {
            wrk.err_fn.move("BUILD_ATTACH");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,40}))==0)))
        {
            wrk.err_fn.move("EXTRACT_ATTACH");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,42}))==0)))
        {
            wrk.err_fn.move("EXTRACT_TCT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,44}))==0)))
        {
            wrk.err_fn.move("WAIT_CONVID");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,46}))==0)))
        {
            wrk.err_fn.move("EXTRACT_PROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,48}))==0)))
        {
            wrk.err_fn.move("ISSUE_ABEND");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,50}))==0)))
        {
            wrk.err_fn.move("CONNECT_PROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,52}))==0)))
        {
            wrk.err_fn.move("ISSUE_CONFIRMATION");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,54}))==0)))
        {
            wrk.err_fn.move("ISSUE_ERROR");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,56}))==0)))
        {
            wrk.err_fn.move("ISSUE_PREPARE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,58}))==0)))
        {
            wrk.err_fn.move("ISSUE_PASS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,60}))==0)))
        {
            wrk.err_fn.move("EXTRACT_LOGONMSG");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{4,62}))==0)))
        {
            wrk.err_fn.move("EXTRACT_ATTRIBUTES");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,2}))==0)))
        {
            wrk.err_fn.move("READ");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,4}))==0)))
        {
            wrk.err_fn.move("WRITE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,6}))==0)))
        {
            wrk.err_fn.move("REWRITE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,8}))==0)))
        {
            wrk.err_fn.move("DELETE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,10}))==0)))
        {
            wrk.err_fn.move("UNLOCK");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,12}))==0)))
        {
            wrk.err_fn.move("STARTBR");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,14}))==0)))
        {
            wrk.err_fn.move("READNEXT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,16}))==0)))
        {
            wrk.err_fn.move("READPREV");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,18}))==0)))
        {
            wrk.err_fn.move("ENDBR");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{6,20}))==0)))
        {
            wrk.err_fn.move("RESETBR");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{8,2}))==0)))
        {
            wrk.err_fn.move("WRITEQ_TD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{8,4}))==0)))
        {
            wrk.err_fn.move("READQ_TD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{8,6}))==0)))
        {
            wrk.err_fn.move("DELETEQ_TD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{10,2}))==0)))
        {
            wrk.err_fn.move("WRITEQ_TS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{10,4}))==0)))
        {
            wrk.err_fn.move("READQ_TS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{10,6}))==0)))
        {
            wrk.err_fn.move("DELETEQ_TS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{12,2}))==0)))
        {
            wrk.err_fn.move("GETMAIN");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{12,4}))==0)))
        {
            wrk.err_fn.move("FREEMAIN");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,2}))==0)))
        {
            wrk.err_fn.move("LINK");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,4}))==0)))
        {
            wrk.err_fn.move("XCTL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,6}))==0)))
        {
            wrk.err_fn.move("LOAD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,8}))==0)))
        {
            wrk.err_fn.move("RETURN");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,10}))==0)))
        {
            wrk.err_fn.move("RELEASE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,12}))==0)))
        {
            wrk.err_fn.move("ABEND");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{14,14}))==0)))
        {
            wrk.err_fn.move("HANDLE_ABEND");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,2}))==0)))
        {
            wrk.err_fn.move("ASKTIME");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,4}))==0)))
        {
            wrk.err_fn.move("DELAY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,6}))==0)))
        {
            wrk.err_fn.move("POST");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,8}))==0)))
        {
            wrk.err_fn.move("START");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,8}))==0)))
        {
            wrk.err_fn.move("START_ATTACH");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,8}))==0)))
        {
            wrk.err_fn.move("START_BREXIT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,10}))==0)))
        {
            wrk.err_fn.move("RETRIEVE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{16,12}))==0)))
        {
            wrk.err_fn.move("CANCEL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{18,2}))==0)))
        {
            wrk.err_fn.move("WAIT_EVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{18,4}))==0)))
        {
            wrk.err_fn.move("ENQ");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{18,6}))==0)))
        {
            wrk.err_fn.move("DEQ");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{18,8}))==0)))
        {
            wrk.err_fn.move("SUSPEND");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{20,2}))==0)))
        {
            wrk.err_fn.move("WRITE_JOURNALNUM");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{20,4}))==0)))
        {
            wrk.err_fn.move("WAIT_JOURNALNUM");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{20,6}))==0)))
        {
            wrk.err_fn.move("WRITE_JOURNALNAME");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{20,8}))==0)))
        {
            wrk.err_fn.move("WAIT_JOURNALNAME");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{22,2}))==0)))
        {
            wrk.err_fn.move("SYNCPOINT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,2}))==0)))
        {
            wrk.err_fn.move("RECEIVE_MAP");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,4}))==0)))
        {
            wrk.err_fn.move("SEND_MAP");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,6}))==0)))
        {
            wrk.err_fn.move("SEND_TEXT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,8}))==0)))
        {
            wrk.err_fn.move("SEND_PAGE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,10}))==0)))
        {
            wrk.err_fn.move("PURGE_MESSAGE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,12}))==0)))
        {
            wrk.err_fn.move("ROUTE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,14}))==0)))
        {
            wrk.err_fn.move("RECEIVE_PARTN");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,16}))==0)))
        {
            wrk.err_fn.move("SEND_PARTNSET");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{24,18}))==0)))
        {
            wrk.err_fn.move("SEND_CONTROL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{28,2}))==0)))
        {
            wrk.err_fn.move("DUMP");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,2}))==0)))
        {
            wrk.err_fn.move("ISSUE_ADD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,4}))==0)))
        {
            wrk.err_fn.move("ISSUE_ERASE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,6}))==0)))
        {
            wrk.err_fn.move("ISSUE_REPLACE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,8}))==0)))
        {
            wrk.err_fn.move("ISSUE_ABORT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,10}))==0)))
        {
            wrk.err_fn.move("ISSUE_QUERY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,12}))==0)))
        {
            wrk.err_fn.move("ISSUE_END");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,14}))==0)))
        {
            wrk.err_fn.move("ISSUE_RECEIVE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,16}))==0)))
        {
            wrk.err_fn.move("ISSUE_NOTE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,18}))==0)))
        {
            wrk.err_fn.move("ISSUE_WAIT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{30,20}))==0)))
        {
            wrk.err_fn.move("ISSUE_SEND");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,2}))==0)))
        {
            wrk.err_fn.move("BIF_DEEDIT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,4}))==0)))
        {
            wrk.err_fn.move("DEFINE_COUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,6}))==0)))
        {
            wrk.err_fn.move("GET_COUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,8}))==0)))
        {
            wrk.err_fn.move("UPDATE_COUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,10}))==0)))
        {
            wrk.err_fn.move("DELETE_COUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,12}))==0)))
        {
            wrk.err_fn.move("REWIND_COUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,14}))==0)))
        {
            wrk.err_fn.move("QUERY_COUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,20}))==0)))
        {
            wrk.err_fn.move("DEFINE_DCOUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,22}))==0)))
        {
            wrk.err_fn.move("GET_DCOUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,24}))==0)))
        {
            wrk.err_fn.move("UPDATE_DCOUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,26}))==0)))
        {
            wrk.err_fn.move("DELETE_DCOUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,28}))==0)))
        {
            wrk.err_fn.move("REWIND_DCOUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{32,30}))==0)))
        {
            wrk.err_fn.move("QUERY_DCOUNTER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,2}))==0)))
        {
            wrk.err_fn.move("DEFINE_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,4}))==0)))
        {
            wrk.err_fn.move("DEFINE_PROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,6}))==0)))
        {
            wrk.err_fn.move("RUN_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,8}))==0)))
        {
            wrk.err_fn.move("RUN_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,14}))==0)))
        {
            wrk.err_fn.move("ACQUIRE_PROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,16}))==0)))
        {
            wrk.err_fn.move("ACQUIRE_ACTIVITYID");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,18}))==0)))
        {
            wrk.err_fn.move("DELETE_CONTAINER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,20}))==0)))
        {
            wrk.err_fn.move("GET_CONTAINER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,22}))==0)))
        {
            wrk.err_fn.move("PUT_CONTAINER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,24}))==0)))
        {
            wrk.err_fn.move("RESET_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,26}))==0)))
        {
            wrk.err_fn.move("CHECK_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,28}))==0)))
        {
            wrk.err_fn.move("CANCEL_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,30}))==0)))
        {
            wrk.err_fn.move("CANCEL_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,32}))==0)))
        {
            wrk.err_fn.move("SUSPEND_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,34}))==0)))
        {
            wrk.err_fn.move("SUSPEND_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,36}))==0)))
        {
            wrk.err_fn.move("RESUME_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,38}))==0)))
        {
            wrk.err_fn.move("RESUME_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,40}))==0)))
        {
            wrk.err_fn.move("DELETE_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,42}))==0)))
        {
            wrk.err_fn.move("LINK_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,44}))==0)))
        {
            wrk.err_fn.move("LINK_ACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,46}))==0)))
        {
            wrk.err_fn.move("CANCEL_ACQACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,48}))==0)))
        {
            wrk.err_fn.move("RUN_ACQACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,50}))==0)))
        {
            wrk.err_fn.move("LINK_ACQACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,52}))==0)))
        {
            wrk.err_fn.move("SUSPEND_ACQACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,54}))==0)))
        {
            wrk.err_fn.move("RESUME_ACQACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,56}))==0)))
        {
            wrk.err_fn.move("CHECK_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,58}))==0)))
        {
            wrk.err_fn.move("CHECK_ACQACTIVITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{52,60}))==0)))
        {
            wrk.err_fn.move("RESET_ACQPROCESS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,2}))==0)))
        {
            wrk.err_fn.move("DEFINE_COMPOSITE_EVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,2}))==0)))
        {
            wrk.err_fn.move("DEFINE_INPUT_EVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,4}))==0)))
        {
            wrk.err_fn.move("DELETE_EVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,8}))==0)))
        {
            wrk.err_fn.move("ADD_SUBEVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,10}))==0)))
        {
            wrk.err_fn.move("REMOVE_SUBEVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,14}))==0)))
        {
            wrk.err_fn.move("TEST_EVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,16}))==0)))
        {
            wrk.err_fn.move("RETRIEVE_REATTACH_EVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,18}))==0)))
        {
            wrk.err_fn.move("RETRIEVE_SUBEVENT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,20}))==0)))
        {
            wrk.err_fn.move("DEFINE_TIMER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,22}))==0)))
        {
            wrk.err_fn.move("DELETE_TIMER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,24}))==0)))
        {
            wrk.err_fn.move("CHECK_TIMER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{54,26}))==0)))
        {
            wrk.err_fn.move("FORCE_TIMER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,2}))==0)))
        {
            wrk.err_fn.move("WEB_RECEIVE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,4}))==0)))
        {
            wrk.err_fn.move("WEB_END");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,6}))==0)))
        {
            wrk.err_fn.move("WEB_READ");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,8}))==0)))
        {
            wrk.err_fn.move("WEB_STARTBROWSE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,10}))==0)))
        {
            wrk.err_fn.move("WEB_READNEXT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,12}))==0)))
        {
            wrk.err_fn.move("WEB_ENDBROWSE_HTTPHEADER");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,14}))==0)))
        {
            wrk.err_fn.move("WEB_WRITE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,16}))==0)))
        {
            wrk.err_fn.move("WEB_EXTRACT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{56,20}))==0)))
        {
            wrk.err_fn.move("WEB_RETRIEVE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{60,2}))==0)))
        {
            wrk.err_fn.move("DOCUMENT_CREATE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{60,4}))==0)))
        {
            wrk.err_fn.move("DOCUMENT_INSERT");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{60,6}))==0)))
        {
            wrk.err_fn.move("DOCUMENT_RETRIEVE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{60,8}))==0)))
        {
            wrk.err_fn.move("DOCUMENT_SET");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{62,14}))==0)))
        {
            wrk.err_fn.move("EXTRACT_TCPIP");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{62,16}))==0)))
        {
            wrk.err_fn.move("EXTRACT_CERTIFICATE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{72,2}))==0)))
        {
            wrk.err_fn.move("ENTER_TRACENUM");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{72,4}))==0)))
        {
            wrk.err_fn.move("MONITOR");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{74,2}))==0)))
        {
            wrk.err_fn.move("ASKTIME_ABSTIME");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{74,4}))==0)))
        {
            wrk.err_fn.move("FORMATTIME");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{86,2}))==0)))
        {
            wrk.err_fn.move("SPOOLOPEN");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{86,4}))==0)))
        {
            wrk.err_fn.move("SPOOLREAD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{86,6}))==0)))
        {
            wrk.err_fn.move("SPOOLWRITE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{86,16}))==0)))
        {
            wrk.err_fn.move("SPOOLCLOSE");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{94,6}))==0)))
        {
            wrk.err_fn.move("CHANGE_TASK");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{94,34}))==0)))
        {
            wrk.err_fn.move("WAIT_EXTERNAL");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{94,50}))==0)))
        {
            wrk.err_fn.move("WAITCICS");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{106,2}))==0)))
        {
            wrk.err_fn.move("QUERY_SECURITY");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{108,2}))==0)))
        {
            wrk.err_fn.move("WRITE_OPERATOR");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{108,18}))==0)))
        {
            wrk.err_fn.move("ISSUE_DFHWTO");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{116,2}))==0)))
        {
            wrk.err_fn.move("SIGNON");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{116,4}))==0)))
        {
            wrk.err_fn.move("SIGNOFF");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{116,6}))==0)))
        {
            wrk.err_fn.move("VERIFY_PASSWORD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{116,8}))==0)))
        {
            wrk.err_fn.move("CHANGE_PASSWORD");
        } else if(((lnk.eibfn_OF_dfheiblk.compare(new Variable(new byte[]{126,2}))==0)))
        {
            wrk.err_fn.move("DUMP_TRANSACTION");
        } else 
        {
            ; // WHEN OTHER
        }
        _sizeError=false;
        _defaultPointerIndex.move(1);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string((String)"TRMID=",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string(lnk.eibtrmid_OF_dfheiblk,_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string((String)" TRNID=",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string(lnk.eibtrnid_OF_dfheiblk,_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string((String)" RESP=",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string(wrk.cresponse,_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string((String)" (",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string(wrk.err_name,(String)" ",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string((String)") RESP2=",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string(wrk.cresponse2,_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string((String)" RSRCE=",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string(lnk.eibrsrce_OF_dfheiblk,(String)" ",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string((String)" FN=",_defaultPointerIndex);
        _sizeError|=lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea.string(wrk.err_fn,(String)" ",_defaultPointerIndex);
        final int _loopLimit17=6;
        for(int _loopIndex17=1;_loopIndex17<=_loopLimit17;_loopIndex17++)
        {
            try
            {
                lnk.eibfn_OF_dfheiblk.move(0x0802);
                final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,lnk.td_data_OF_common_data_OF_option_array_OF_dfhcommarea,new Integer(120),"TPCC",null,null};
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceEntry("WRITEQ TD",_TAGCONSTANT_7,_transactionParameters);
                _transientDataControl.write(_transenv,_TAGCONSTANT_7,_transactionParameters);
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.traceExit("WRITEQ TD",_TAGCONSTANT_7,_transactionParameters);
                wrk.response.move(0);
                lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
                lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
                lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            }
            catch(UnwindException _unwindException)
            {
                return _unwindException.unwind(_context,this);
            }
            catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITEQ TD",_transactionException);
                wrk.response.move(_transactionException.getResponseCode());
                lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0802));
                lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
                lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
                lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
                lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            }
            catch(java.lang.Throwable _transactionGeneralException)
            {
                if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                    _transenv.trace("WRITEQ TD",_transactionGeneralException);
                wrk.response.move(-1);
                lnk.eibresp_OF_dfheiblk.move(-1);
                lnk.eibresp2_OF_dfheiblk.move(0);
            }
        } // end perform times
        wrk.ws_display_line_OF_ws_display.move(lnk.err_OF_common_data_OF_option_array_OF_dfhcommarea);
        int _performResult=0;
        if((_performResult=display_line())>0) perform(_performResult,_display_line_Label);
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x1602);
            final Object[] _transactionParameters=new Object[] {lnk.eiberr_OF_dfheiblk,lnk.eiberrcd_OF_dfheiblk,lnk.eibsynrb_OF_dfheiblk,null,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("SYNCPOINT",_TAGCONSTANT_8,_transactionParameters);
            _context.getSqlContext().getCursors().closeAllNotHeld();
            _recovery.syncpoint(_transenv,_TAGCONSTANT_8,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("SYNCPOINT",_TAGCONSTANT_8,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x1602));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("SYNCPOINT",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        try
        {
            lnk.eibfn_OF_dfheiblk.move(0x0e08);
            final Object[] _transactionParameters=new Object[] {lnk.eibrsrce_OF_dfheiblk,null};
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceEntry("RETURN",_TAGCONSTANT_2,_transactionParameters);
            if(_programControl!=null) _programControl.returnControl(_transenv,_TAGCONSTANT_2,_transactionParameters);
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.traceExit("RETURN",_TAGCONSTANT_2,_transactionParameters);
            lnk.eibresp_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE);
            lnk.eibresp2_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RESPONSE_CODE_2);
            lnk.eibrcode_OF_dfheiblk.move(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_RCODE);
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(com.heirloomcomputing.etp.transaction.exception.TransactionException.DEFAULT_ERROR_MESSAGE));
            if(true) throw new UnwindException(UnwindException.RETURN);
        }
        catch(UnwindException _unwindException)
        {
            return _unwindException.unwind(_context,this);
        }
        catch(com.heirloomcomputing.etp.transaction.exception.TransactionException _transactionException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionException);
            lnk.eibfn_OF_dfheiblk.move(_transactionException.setFcn(0x0e08));
            lnk.eibresp_OF_dfheiblk.move(_transactionException.getResponseCode());
            lnk.eibresp2_OF_dfheiblk.move(_transactionException.getResponseCode2());
            lnk.eibrcode_OF_dfheiblk.move(_transactionException.getResponseArray());
            lnk.eiberrmsg_OF_dfheiblk.move(new Variable(_transactionException.getExceptionText()));
            int _transactionPerform=_context.handleException(_transactionException,_transactionException.isIgnoreByDefault(),_transactionException.getAbendCode());
            if(_transactionPerform!=0) return _transactionPerform;
        }
        catch(java.lang.Throwable _transactionGeneralException)
        {
            if(com.heirloomcomputing.etp.transaction.api.TraceControl.TRACE_ENABLED && _transenv.isTraceSystem())
                _transenv.trace("RETURN",_transactionGeneralException);
            lnk.eibresp_OF_dfheiblk.move(-1);
            lnk.eibresp2_OF_dfheiblk.move(0);
            int _transactionPerform=_context.handleException(_transactionGeneralException,false,"JAVA");
            if(_transactionPerform!=0) return _transactionPerform;
        }
        return 0; // fall through
    } // End Paragraph
    
    public int cicserror()
    {
        perform(94,94);
        return 0;
    }
    
    public int display_number()
    {
        perform(91,91);
        return 0;
    }
    
    public int display_dot()
    {
        perform(88,88);
        return 0;
    }
    
    public int display_line()
    {
        perform(85,85);
        return 0;
    }
    
    public int lastname()
    {
        perform(82,82);
        return 0;
    }
    
    public int makeaddress()
    {
        perform(79,79);
        return 0;
    }
    
    public int orders()
    {
        perform(73,73);
        return 0;
    }
    
    public int customer()
    {
        perform(64,64);
        return 0;
    }
    
    public int district()
    {
        perform(59,59);
        return 0;
    }
    
    public int stock()
    {
        perform(53,53);
        return 0;
    }
    
    public int loadord()
    {
        perform(48,48);
        return 0;
    }
    
    public int loadcust()
    {
        perform(42,42);
        return 0;
    }
    
    public int loadware()
    {
        perform(32,32);
        return 0;
    }
    
    public int loaditems()
    {
        perform(22,22);
        return 0;
    }
    
    public int makenumberstring()
    {
        perform(19,19);
        return 0;
    }
    
    public int makealphastring()
    {
        perform(17,17);
        return 0;
    }
    
    public int nurand()
    {
        perform(15,15);
        return 0;
    }
    
    public int randomnumber()
    {
        perform(13,13);
        return 0;
    }
    
    public int main_()
    {
        perform(1,1);
        return 0;
    }
    
    static public final int _loaditems_OF_main_Label=22;
    
    public final int loaditems_OF_main()
    {
        return loaditems();
    }
    
    static public final int _loaditems_OF_makenumberstring_Label=22;
    
    public final int loaditems_OF_makenumberstring()
    {
        return loaditems();
    }
    
    static public final int _loadware_OF_main_Label=32;
    
    public final int loadware_OF_main()
    {
        return loadware();
    }
    
    static public final int _loadware_OF_loaditems_Label=32;
    
    public final int loadware_OF_loaditems()
    {
        return loadware();
    }
    
    static public final int _loadcust_OF_main_Label=42;
    
    public final int loadcust_OF_main()
    {
        return loadcust();
    }
    
    static public final int _loadcust_OF_loadware_Label=42;
    
    public final int loadcust_OF_loadware()
    {
        return loadcust();
    }
    
    static public final int _loadord_OF_main_Label=48;
    
    public final int loadord_OF_main()
    {
        return loadord();
    }
    
    static public final int _loadord_OF_loadcust_Label=48;
    
    public final int loadord_OF_loadcust()
    {
        return loadord();
    }
    
    static public final int _stock_OF_loadware_Label=53;
    
    public final int stock_OF_loadware()
    {
        return stock();
    }
    
    static public final int _stock_OF_loadord_Label=53;
    
    public final int stock_OF_loadord()
    {
        return stock();
    }
    
    static public final int _district_OF_loadware_Label=59;
    
    public final int district_OF_loadware()
    {
        return district();
    }
    
    static public final int _district_OF_stock_Label=59;
    
    public final int district_OF_stock()
    {
        return district();
    }
    
    static public final int _customer_OF_loadcust_Label=64;
    
    public final int customer_OF_loadcust()
    {
        return customer();
    }
    
    static public final int _customer_OF_district_Label=64;
    
    public final int customer_OF_district()
    {
        return customer();
    }
    
    static public final int _orders_OF_loadord_Label=73;
    
    public final int orders_OF_loadord()
    {
        return orders();
    }
    
    static public final int _orders_OF_customer_Label=73;
    
    public final int orders_OF_customer()
    {
        return orders();
    }
    
    static public final int _makeaddress_OF_loadware_Label=79;
    
    public final int makeaddress_OF_loadware()
    {
        return makeaddress();
    }
    
    static public final int _makeaddress_OF_district_Label=79;
    
    public final int makeaddress_OF_district()
    {
        return makeaddress();
    }
    
    static public final int _makeaddress_OF_customer_Label=79;
    
    public final int makeaddress_OF_customer()
    {
        return makeaddress();
    }
    
    static public final int _makeaddress_OF_orders_Label=79;
    
    public final int makeaddress_OF_orders()
    {
        return makeaddress();
    }
    
    static public final int _lastname_OF_customer_Label=82;
    
    public final int lastname_OF_customer()
    {
        return lastname();
    }
    
    static public final int _lastname_OF_makeaddress_Label=82;
    
    public final int lastname_OF_makeaddress()
    {
        return lastname();
    }
    
    static public final int _display_line_OF_main_Label=85;
    
    public final int display_line_OF_main()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_loaditems_Label=85;
    
    public final int display_line_OF_loaditems()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_loadware_Label=85;
    
    public final int display_line_OF_loadware()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_loadcust_Label=85;
    
    public final int display_line_OF_loadcust()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_stock_Label=85;
    
    public final int display_line_OF_stock()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_district_Label=85;
    
    public final int display_line_OF_district()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_customer_Label=85;
    
    public final int display_line_OF_customer()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_orders_Label=85;
    
    public final int display_line_OF_orders()
    {
        return display_line();
    }
    
    static public final int _display_line_OF_lastname_Label=85;
    
    public final int display_line_OF_lastname()
    {
        return display_line();
    }
    
    static public final int _display_dot_OF_loaditems_Label=88;
    
    public final int display_dot_OF_loaditems()
    {
        return display_dot();
    }
    
    static public final int _display_dot_OF_stock_Label=88;
    
    public final int display_dot_OF_stock()
    {
        return display_dot();
    }
    
    static public final int _display_dot_OF_customer_Label=88;
    
    public final int display_dot_OF_customer()
    {
        return display_dot();
    }
    
    static public final int _display_dot_OF_orders_Label=88;
    
    public final int display_dot_OF_orders()
    {
        return display_dot();
    }
    
    static public final int _display_dot_OF_display_line_Label=88;
    
    public final int display_dot_OF_display_line()
    {
        return display_dot();
    }
    
    static public final int _display_number_OF_loaditems_Label=91;
    
    public final int display_number_OF_loaditems()
    {
        return display_number();
    }
    
    static public final int _display_number_OF_stock_Label=91;
    
    public final int display_number_OF_stock()
    {
        return display_number();
    }
    
    static public final int _display_number_OF_customer_Label=91;
    
    public final int display_number_OF_customer()
    {
        return display_number();
    }
    
    static public final int _display_number_OF_orders_Label=91;
    
    public final int display_number_OF_orders()
    {
        return display_number();
    }
    
    static public final int _display_number_OF_display_dot_Label=91;
    
    public final int display_number_OF_display_dot()
    {
        return display_number();
    }
    
    static public final int _cicserror_OF_loaditems_Label=94;
    
    public final int cicserror_OF_loaditems()
    {
        return cicserror();
    }
    
    static public final int _cicserror_OF_display_number_Label=94;
    
    public final int cicserror_OF_display_number()
    {
        return cicserror();
    }
    
    
    /**
     * Dfheiblk property (length 2131)
     * @return property value of Dfheiblk
     */
    public String getDfheiblk()
    {
        if(_context==null) setup(null);
        return lnk.dfheiblk.toText();
    }
    
    /**
     * Dfheiblk property (length 2131)
     * @return property value of Dfheiblk
     */
    public String getDfheiblkAsString()
    {
        if(_context==null) setup(null);
        return lnk.dfheiblk.toText();
    }
    
    /**
     * Dfhcommarea property (length 2237)
     * @return property value of Dfhcommarea
     */
    public String getDfhcommarea()
    {
        if(_context==null) setup(null);
        return lnk.dfhcommarea.toText();
    }
    
    /**
     * Dfhcommarea property (length 2237)
     * @return property value of Dfhcommarea
     */
    public String getDfhcommareaAsString()
    {
        if(_context==null) setup(null);
        return lnk.dfhcommarea.toText();
    }
    
    /**
     * Dfheiblk property (length 2131)
     * @param paramValue parameter property value of Dfheiblk
     */
    public void setDfheiblk(String _paramValue)
    {
        if(_context==null) setup(null);
        lnk.eibtime_OF_dfheiblk.move(_paramValue.length());
        lnk.eibdate_OF_dfheiblk.moveMax(_paramValue);
    }
    
    /**
     * Dfhcommarea property (length 2237)
     * @param paramValue parameter property value of Dfhcommarea
     */
    public void setDfhcommarea(String _paramValue)
    {
        if(_context==null) setup(null);
        lnk.dfhcommarea.move(_paramValue);
    }
    public int getElasticCobolMajorVersion() { return 17; }
    public int getElasticCobolMinorVersion() { return 8; }
    public int getElasticCobolSubminorVersion() { return 24; }
    public String getElasticCobolBuildTimestamp() { return "(Build Aug 29 2017 11:46:34)"; }
    
    public void link(com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _transactionEnvironment,com.heirloomcomputing.etp.transaction.link.CommArea _commArea,com.heirloomcomputing.etp.transaction.bridge.BridgeFacility _facility,com.heirloomcomputing.etp.transaction.link.Environment _environment)
    {
        _setTransactionEnvironment(_transactionEnvironment);
        // Setup basic program functionality
        if(_context==null) setup(_context);
        _context.setProgramCalled();
        com.heirloomcomputing.etp.transaction.link.CommArea _previousCommArea=_transactionEnvironment.getCommArea();
        _transactionEnvironment.setCommArea(_commArea);
        if(_commArea!=null)
        {
            lnk.dfhcommarea.setPointerToBytes(_commArea.toByteArrayNoCopy());
        }
        else
        {
            lnk.dfhcommarea.setPointerToBytes((byte[])null);
        }
        lnk.dfheiblk.setPointerToBytes(_transactionEnvironment.getEIB());
        java.util.Calendar _cal=_transactionEnvironment.getTaskStartTime();
        if(_cal!=null)
        {
            int _cal_c=_cal.get(java.util.Calendar.YEAR)/100-19;
            int _cal_y=_cal.get(java.util.Calendar.YEAR)%100;
            int _cal_d=_cal.get(java.util.Calendar.DAY_OF_YEAR);
            lnk.eibdate_OF_dfheiblk.move(_cal_c*100000+_cal_y*1000+_cal_d);
            int _cal_h=_cal.get(java.util.Calendar.HOUR_OF_DAY);
            int _cal_m=_cal.get(java.util.Calendar.MINUTE);
            int _cal_s=_cal.get(java.util.Calendar.SECOND);
            lnk.eibtime_OF_dfheiblk.move(_cal_h*10000+_cal_m*100+_cal_s);
        }
        lnk.eibtaskn_OF_dfheiblk.move(_transactionEnvironment.getTransactionNumber());
        lnk.eibtrmid_OF_dfheiblk.move(_transactionEnvironment.getTerminalId());
        lnk.eibtrnid_OF_dfheiblk.move(_transactionEnvironment.getTransactionId());
        lnk.eibcposn_OF_dfheiblk.move(_transactionEnvironment.getCursorPosition());
        lnk.eibaid_OF_dfheiblk.move(_transactionEnvironment.getAID());
        if(_commArea!=null)
        {
            lnk.eibcalen_OF_dfheiblk.move(_commArea.getLength());
        }
        else
        {
            lnk.eibcalen_OF_dfheiblk.move(0);
        }
        _callArrayInitializer();
        // Call program
        try
        {
            this.run(-1,0);
        }
        finally
        {
            _transactionEnvironment.setCommArea(_previousCommArea);
        }
        _callArrayFinalizer();
    }
    
    
    public void run() // Runnable
    {
        try
        {
            run(-1,-1);
        }
        catch(UnwindException _unwindException)
        {
            return; // completely unwound
        }
        catch(Throwable _anyException)
        {
            CobolException.runtimeError(_context,_anyException);
        }
    }
    
    public void run(int _thread,int _entry) // ICobolInterface
    {
        if(_context==null)
        {
            if(_entry<0) _entry=0;
            setup(null);
        }
        else
        {
            if(_entry<0) _entry=_context.getEntryParagraph();
            _context.setEntryParagraph(0);
        }
        try
        {
            perform(_entry,-1);
            return;
        }
        catch(ExitProgramException _exitProgramException)
        {
            return; // goback
        }
    }
    
    public String redirectCall()
    {
        return null;
    }
    
    static public void main(String _args[]) // application entry
    {
        vsmload _programInstance=null;
        try
        {
            _programInstance = new vsmload();
            Context.initializeApplication(_programInstance,_args);
            if(_args!=null && _args.length>0)
            {
                _programInstance.setup(null);
                if(_args.length>0) _programInstance.setDfheiblk(_args[0]);
                if(_args.length>1) _programInstance.setDfhcommarea(_args[1]);
            }
            _programInstance.run(-1,-1);
            _programInstance._transenv.end();
            _programInstance._context.exit();
        }
        catch(Throwable _throwableException)
        {
            if (_programInstance != null && _programInstance._context != null && _programInstance._context.getReturnInt() == 0) 
            {
                   _programInstance._context.setReturnCode(1);
                   Context.appReturnCode = _programInstance._context.getReturnInt();
            }
            if(_programInstance!=null&&_programInstance._transenv!=null) _programInstance._transenv.abend(_throwableException,CobolException.isDumpRequested(_throwableException),CobolException.getDumpMessage(_throwableException));
        }
        Context.applicationExit();
    }
    
    public transient Context _context;
    
    public Context setup(Context _passContext)
    {
        _context=_passContext;
        if(_context==null) // create fresh context
        {
            _context=new Context(_passContext,_programId,this);
        }
        else
            _context.setupContext(_passContext,_programId,this);
        wrk=(Wrk)_context.getWrk();
        lnk=(Lnk)_context.getLnk();
        boolean doInitWrk=false;
        boolean doDeclareWrk=false;
        boolean doInitLnk=false;
        boolean doDeclareLnk=false;
        if(wrk==null)
        {
            doInitWrk=true;
            doDeclareWrk=true;
            _context.setWrk(wrk=new Wrk());
        }
        if(lnk==null)
        {
            doInitLnk=true;
            doDeclareLnk=true;
            _context.setLnk(lnk=new Lnk());
        }
        if(doInitWrk) wrk.doInitializations();
        if(doInitLnk) lnk.doInitializations();
        
        
        if(doDeclareWrk) wrk.doDeclarations();
        if(doDeclareLnk) lnk.doDeclarations();
        // Set the transaction environment from Context
        if(_passContext!=null) _setTransactionEnvironment((com.heirloomcomputing.etp.transaction.api.TransactionEnvironment)_passContext.getTransactionEnvironment());
        return _context;
    }
    com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _transenv;
    com.heirloomcomputing.etp.transaction.api.BasicMappingSupport _basicMappingSupport=null;
    com.heirloomcomputing.etp.transaction.api.Recovery _recovery=null;
    com.heirloomcomputing.etp.transaction.api.ProgramControl _programControl=null;
    com.heirloomcomputing.etp.transaction.api.ExecuteInterfaceProgram _executeInterfaceProgram=null;
    com.heirloomcomputing.etp.transaction.api.FileControl _fileControl=null;
    com.heirloomcomputing.etp.transaction.api.TransientDataControl _transientDataControl=null;
    
    public void _setTransactionEnvironment(com.heirloomcomputing.etp.transaction.api.TransactionEnvironment _environment)
    {
        if(_environment==_transenv || _environment==null) return;
        if(_context==null) setup(null);
        _transenv=_environment;
        _basicMappingSupport=_transenv.obtainServiceBasicMappingSupport(null);
        _recovery=_transenv.obtainServiceRecovery(null);
        _programControl=_transenv.obtainServiceProgramControl(null);
        _executeInterfaceProgram=_transenv.obtainServiceExecuteInterfaceProgram(null);
        _fileControl=_transenv.obtainServiceFileControl(null);
        _transientDataControl=_transenv.obtainServiceTransientDataControl(null);
        _context.setTransactionEnvironment(_transenv);
    }
    
    
    public void cancel() // close open files, chance for custom action
    {
    } // end cancel
    
    
    public void close() // close any resources that might have been left open
    {
        if(_context.getExistingSqlContext() != null)
        {
            _context.getExistingSqlContext().getCursors().closeAll();
        }
    } // end close
    
    public void perform(int _procedure) // ICobolInterface
    {
        perform(_procedure,_procedure); // only procedure
    }
    
    public void perform(int _begin,int _end) // ICobolInterface
    {
        _debug_loadWatchpoints(_context.getProgramName());
        try
        {
            for(;;) // forever until stopped
            {
                switch(_begin)
                {
                    
                    case 0: // Initial Paragraph
                    case 1: if( (_begin=main_para_OF_main()) != 0) break;
                    
                    if(_end==1) { return  ; }
                    
                    case 13: randomnumber_para_OF_randomnumber();
                    
                    if(_end==13) { return  ; }
                    
                    case 15: nurand_para_OF_nurand();
                    
                    if(_end==15) { return  ; }
                    
                    case 17: makealphastring_para_OF_makealphastring();
                    
                    if(_end==17) { return  ; }
                    
                    case 19: makenumberstring_para_OF_makenumberstring();
                    
                    if(_end==19) { return  ; }
                    
                    case 22: if( (_begin=loaditems_para_OF_loaditems()) != 0) break;
                    
                    if(_end==22) { return  ; }
                    
                    case 32: if( (_begin=loadware_para_OF_loadware()) != 0) break;
                    
                    if(_end==32) { return  ; }
                    
                    case 42: if( (_begin=loadcust_para_OF_loadcust()) != 0) break;
                    
                    if(_end==42) { return  ; }
                    
                    case 48: if( (_begin=loadord_para_OF_loadord()) != 0) break;
                    
                    if(_end==48) { return  ; }
                    
                    case 53: if( (_begin=stock_para_OF_stock()) != 0) break;
                    
                    if(_end==53) { return  ; }
                    
                    case 59: if( (_begin=district_para_OF_district()) != 0) break;
                    
                    if(_end==59) { return  ; }
                    
                    case 64: if( (_begin=customer_para_OF_customer()) != 0) break;
                    
                    if(_end==64) { return  ; }
                    
                    case 73: if( (_begin=orders_para_OF_orders()) != 0) break;
                    
                    if(_end==73) { return  ; }
                    
                    case 79: makeaddress_para_OF_makeaddress();
                    
                    if(_end==79) { return  ; }
                    
                    case 82: lastname_para_OF_lastname();
                    
                    if(_end==82) { return  ; }
                    
                    case 85: if( (_begin=display_line_para_OF_display_line()) != 0) break;
                    
                    if(_end==85) { return  ; }
                    
                    case 88: if( (_begin=display_dot_para_OF_display_dot()) != 0) break;
                    
                    if(_end==88) { return  ; }
                    
                    case 91: if( (_begin=display_number_para_OF_display_number()) != 0) break;
                    
                    if(_end==91) { return  ; }
                    
                    case 94: if( (_begin=defaultpara_0_OF_cicserror()) != 0) break;
                    
                    if(_end==94) { return   ; } // end SECTION -=-=-=-=-=-=-
                    
                    default: throw ExitProgramException.EXIT_DEFAULT;
                } // end switch
            } // end forever
        }
        catch(UnwindException _unwindException)
        {
            perform(_unwindException.unwind(_context,this),_end);
            return;
        }
        catch(ExitProgramException _exitProgramException)
        {
            throw _exitProgramException;
        }
        catch(Throwable _runtimeException)
        {
            int _resumeAt=_exceptionHandler(_runtimeException,false);
            if(_resumeAt>0) perform(_resumeAt,_resumeAt);
            else throw ExitProgramException.EXIT_RESUME;
        }
    } // end perform(int,int)
    
    public int _exceptionHandler(Throwable _exception,boolean _nextStatementAvailable)
    {
        $X$_exceptionInfo = String.valueOf(_exception.getStackTrace()[0].getLineNumber());
        // if debugging in Eclipse pause 
        CobolExceptionPause cbp = new CobolExceptionPause();
        if(_exception instanceof RuntimeException) throw (RuntimeException)_exception;
        if(_exception instanceof Error) throw (Error)_exception;
        throw new com.heirloomcomputing.ecs.exception.EcObject(_exception);
    }
    
    static public final String _localNameConverter[][]=null;
    static public final Numeric $N$option_return_display_88=(Numeric)(new Numeric("-1"));
    static public final Numeric _NCONSTANT_32=(Numeric)(new Numeric("0"));
    static public final Numeric _NCONSTANT_33=(Numeric)(new Numeric("1"));
    static public final Numeric _NCONSTANT_34=(Numeric)(new Numeric("4"));
    static public final Numeric _NCONSTANT_35=(Numeric)(new Numeric("5"));
    static public final Numeric _NCONSTANT_36=(Numeric)(new Numeric("2"));
    static public final Numeric _NCONSTANT_37=(Numeric)(new Numeric("7"));
    static public final Numeric _NCONSTANT_38=(Numeric)(new Numeric("3"));
    static public final Numeric _NCONSTANT_39=(Numeric)(new Numeric("13"));
    static public final Numeric _NCONSTANT_40=(Numeric)(new Numeric("16"));
    static public final Numeric _NCONSTANT_41=(Numeric)(new Numeric("19"));
    static public final Numeric _NCONSTANT_42=(Numeric)(new Numeric("11"));
    static public final Numeric _NCONSTANT_43=(Numeric)(new Numeric("14"));
    static public final Numeric _NCONSTANT_44=(Numeric)(new Numeric("17"));
    static public final Numeric _NCONSTANT_45=(Numeric)(new Numeric("8"));
    static public final Numeric _NCONSTANT_46=(Numeric)(new Numeric("32"));
    static public final Numeric _NCONSTANT_47=(Numeric)(new Numeric("64"));
    static public final Numeric _NCONSTANT_48=(Numeric)(new Numeric("128"));
    static public final Numeric _NCONSTANT_49=(Numeric)(new Numeric("256"));
    static public final Numeric _NCONSTANT_50=(Numeric)(new Numeric("512"));
    static public final Numeric _NCONSTANT_51=(Numeric)(new Numeric("1024"));
    static public final Numeric _NCONSTANT_52=(Numeric)(new Numeric("2048"));
    static public final Numeric _NCONSTANT_53=(Numeric)(new Numeric("4096"));
    static public final Numeric _NCONSTANT_54=(Numeric)(new Numeric("8192"));
    static public final Numeric _NCONSTANT_55=(Numeric)(new Numeric("16384"));
    static public final Numeric _NCONSTANT_56=(Numeric)(new Numeric("32768"));
    static public final Numeric _NCONSTANT_57=(Numeric)(new Numeric("65536"));
    static public final Numeric _NCONSTANT_58=(Numeric)(new Numeric("131072"));
    static public final Numeric _NCONSTANT_59=(Numeric)(new Numeric("9"));
    static public final Numeric _NCONSTANT_60=(Numeric)(new Numeric("10"));
    static public final Numeric _NCONSTANT_61=(Numeric)(new Numeric("24"));
    static public final Numeric _NCONSTANT_62=(Numeric)(new Numeric("100"));
    static public final Numeric _NCONSTANT_63=(Numeric)(new Numeric("10000"));
    static public final Numeric _NCONSTANT_64=(Numeric)(new Numeric("26"));
    static public final Numeric _NCONSTANT_65=(Numeric)(new Numeric("50"));
    static public final Numeric _NCONSTANT_66=(Numeric)(new Numeric("1000"));
    static public final Numeric _NCONSTANT_67=(Numeric)(new Numeric("5000"));
    static public final Numeric _NCONSTANT_68=(Numeric)(new Numeric("6"));
    static public final Numeric _NCONSTANT_69=(Numeric)(new Numeric("20"));
    static public final Numeric _NCONSTANT_70=(Numeric)(new Numeric("300000.00"));
    static public final Numeric _NCONSTANT_71=(Numeric)(new Numeric("30000.0"));
    static public final Numeric _NCONSTANT_72=(Numeric)(new Numeric("3001"));
    static public final Numeric _NCONSTANT_73=(Numeric)(new Numeric("50000"));
    static public final Numeric _NCONSTANT_74=(Numeric)(new Numeric("-10.0"));
    static public final Numeric _NCONSTANT_75=(Numeric)(new Numeric("300"));
    static public final Numeric _NCONSTANT_76=(Numeric)(new Numeric("500"));
    static public final Numeric _NCONSTANT_77=(Numeric)(new Numeric("10.0"));
    static public final Numeric _NCONSTANT_78=(Numeric)(new Numeric("12"));
    static public final Numeric _NCONSTANT_79=(Numeric)(new Numeric("15"));
    static public final Numeric _NCONSTANT_80=(Numeric)(new Numeric("0.0"));
    static public final Numeric _NCONSTANT_81=(Numeric)(new Numeric("23"));
    static public final Numeric _NCONSTANT_82=(Numeric)(new Numeric("18"));
    static public final Numeric _NCONSTANT_83=(Numeric)(new Numeric("21"));
    static public final Numeric _NCONSTANT_84=(Numeric)(new Numeric("22"));
    static public final Numeric _NCONSTANT_85=(Numeric)(new Numeric("25"));
    static public final Numeric _NCONSTANT_86=(Numeric)(new Numeric("27"));
    static public final Numeric _NCONSTANT_87=(Numeric)(new Numeric("28"));
    static public final Numeric _NCONSTANT_88=(Numeric)(new Numeric("29"));
    static public final Numeric _NCONSTANT_89=(Numeric)(new Numeric("31"));
    static public final Numeric _NCONSTANT_90=(Numeric)(new Numeric("33"));
    static public final Numeric _NCONSTANT_91=(Numeric)(new Numeric("34"));
    static public final Numeric _NCONSTANT_92=(Numeric)(new Numeric("35"));
    static public final Numeric _NCONSTANT_93=(Numeric)(new Numeric("36"));
    static public final Numeric _NCONSTANT_94=(Numeric)(new Numeric("37"));
    static public final Numeric _NCONSTANT_95=(Numeric)(new Numeric("38"));
    static public final Numeric _NCONSTANT_96=(Numeric)(new Numeric("39"));
    static public final Numeric _NCONSTANT_97=(Numeric)(new Numeric("40"));
    static public final Numeric _NCONSTANT_98=(Numeric)(new Numeric("41"));
    static public final Numeric _NCONSTANT_99=(Numeric)(new Numeric("42"));
    static public final Numeric _NCONSTANT_100=(Numeric)(new Numeric("43"));
    static public final Numeric _NCONSTANT_101=(Numeric)(new Numeric("44"));
    static public final Numeric _NCONSTANT_102=(Numeric)(new Numeric("45"));
    static public final Numeric _NCONSTANT_103=(Numeric)(new Numeric("46"));
    static public final Numeric _NCONSTANT_104=(Numeric)(new Numeric("47"));
    static public final Numeric _NCONSTANT_105=(Numeric)(new Numeric("48"));
    static public final Numeric _NCONSTANT_106=(Numeric)(new Numeric("49"));
    static public final Numeric _NCONSTANT_107=(Numeric)(new Numeric("51"));
    static public final Numeric _NCONSTANT_108=(Numeric)(new Numeric("53"));
    static public final Numeric _NCONSTANT_109=(Numeric)(new Numeric("54"));
    static public final Numeric _NCONSTANT_110=(Numeric)(new Numeric("55"));
    static public final Numeric _NCONSTANT_111=(Numeric)(new Numeric("56"));
    static public final Numeric _NCONSTANT_112=(Numeric)(new Numeric("57"));
    static public final Numeric _NCONSTANT_113=(Numeric)(new Numeric("58"));
    static public final Numeric _NCONSTANT_114=(Numeric)(new Numeric("59"));
    static public final Numeric _NCONSTANT_115=(Numeric)(new Numeric("60"));
    static public final Numeric _NCONSTANT_116=(Numeric)(new Numeric("61"));
    static public final Numeric _NCONSTANT_117=(Numeric)(new Numeric("62"));
    static public final Numeric _NCONSTANT_118=(Numeric)(new Numeric("63"));
    static public final Numeric _NCONSTANT_119=(Numeric)(new Numeric("65"));
    static public final Numeric _NCONSTANT_120=(Numeric)(new Numeric("66"));
    static public final Numeric _NCONSTANT_121=(Numeric)(new Numeric("69"));
    static public final Numeric _NCONSTANT_122=(Numeric)(new Numeric("70"));
    static public final Numeric _NCONSTANT_123=(Numeric)(new Numeric("72"));
    static public final Numeric _NCONSTANT_124=(Numeric)(new Numeric("80"));
    static public final Numeric _NCONSTANT_125=(Numeric)(new Numeric("81"));
    static public final Numeric _NCONSTANT_126=(Numeric)(new Numeric("82"));
    static public final Numeric _NCONSTANT_127=(Numeric)(new Numeric("83"));
    static public final Numeric _NCONSTANT_128=(Numeric)(new Numeric("84"));
    static public final Numeric _NCONSTANT_129=(Numeric)(new Numeric("85"));
    static public final Numeric _NCONSTANT_130=(Numeric)(new Numeric("86"));
    static public final Numeric _NCONSTANT_131=(Numeric)(new Numeric("87"));
    static public final Numeric _NCONSTANT_132=(Numeric)(new Numeric("88"));
    static public final Numeric _NCONSTANT_133=(Numeric)(new Numeric("89"));
    static public final Numeric _NCONSTANT_134=(Numeric)(new Numeric("90"));
    static public final Numeric _NCONSTANT_135=(Numeric)(new Numeric("91"));
    static public final Numeric _NCONSTANT_136=(Numeric)(new Numeric("92"));
    static public final Numeric _NCONSTANT_137=(Numeric)(new Numeric("93"));
    static public final Numeric _NCONSTANT_138=(Numeric)(new Numeric("94"));
    static public final Numeric _NCONSTANT_139=(Numeric)(new Numeric("95"));
    static public final Numeric _NCONSTANT_140=(Numeric)(new Numeric("96"));
    static public final Numeric _NCONSTANT_141=(Numeric)(new Numeric("97"));
    static public final Numeric _NCONSTANT_142=(Numeric)(new Numeric("98"));
    static public final Numeric _NCONSTANT_143=(Numeric)(new Numeric("99"));
    static public final Numeric _NCONSTANT_144=(Numeric)(new Numeric("101"));
    static public final Numeric _NCONSTANT_145=(Numeric)(new Numeric("102"));
    static public final Numeric _NCONSTANT_146=(Numeric)(new Numeric("103"));
    static public final Numeric _NCONSTANT_147=(Numeric)(new Numeric("104"));
    static public final Numeric _NCONSTANT_148=(Numeric)(new Numeric("105"));
    static public final Numeric _NCONSTANT_149=(Numeric)(new Numeric("106"));
    static public final Numeric _NCONSTANT_150=(Numeric)(new Numeric("107"));
    static public final Numeric _NCONSTANT_151=(Numeric)(new Numeric("108"));
    static public final Numeric _NCONSTANT_152=(Numeric)(new Numeric("109"));
    static public final Numeric _NCONSTANT_153=(Numeric)(new Numeric("110"));
    static public final Numeric _NCONSTANT_154=(Numeric)(new Numeric("111"));
    static public final Numeric _NCONSTANT_155=(Numeric)(new Numeric("112"));
    static public final Numeric _NCONSTANT_156=(Numeric)(new Numeric("113"));
    static public final Numeric _NCONSTANT_157=(Numeric)(new Numeric("114"));
    static public final Numeric _NCONSTANT_158=(Numeric)(new Numeric("115"));
    static public final Numeric _NCONSTANT_159=(Numeric)(new Numeric("116"));
    static public final Numeric _NCONSTANT_160=(Numeric)(new Numeric("117"));
    static public final Numeric _NCONSTANT_161=(Numeric)(new Numeric("121"));
    static public final Bignum _BCONSTANT_0=new Bignum("1");
    static public final Bignum _BCONSTANT_3=new Bignum("8");
    static public final Bignum _BCONSTANT_17=new Bignum("100.0");
    static public final Bignum _BCONSTANT_18=new Bignum("100");
    static public final Bignum _BCONSTANT_19=new Bignum("80");
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_0=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"CONTROL","EIBRSRCE","ERASE","SEND"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_1=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBERR","EIBERRCD","EIBSYNRB","SYNCPOINT"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_2=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBRSRCE","RETURN"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_3=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"CONDITION","ERROR","HANDLE"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_4=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBDS","FILE","FROM","RIDFLD","WRITE"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_5=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"CONTROL","CURSOR","EIBRSRCE","SEND"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_6=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBRSRCE","FROM","LENGTH","SEND","TEXT"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_7=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBRSRCE","FROM","LENGTH","QUEUE","TD","WRITEQ"});
    static public final com.heirloomcomputing.etp.transaction.api.TransactionTags _TAGCONSTANT_8=com.heirloomcomputing.etp.transaction.api.TransactionTags.valueOf(new String[] {"EIBERR","EIBERRCD","EIBSYNRB","ROLLBACK","SYNCPOINT"});
    
    public void _callArrayInitializer()
    {
        Variable.initializeInternalArray();
    }
    
    public void _callArrayFinalizer()
    {
        Variable.finalizeInternalArray();
    }
    
} // end program vsmload